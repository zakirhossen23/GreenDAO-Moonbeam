{"id":"1e1767cc07884af21bb2f88cd926559d","_format":"hh-sol-build-info-1","solcVersion":"0.8.6","solcLongVersion":"0.8.6+commit.11564f7e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/GreenDAO.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract GreenDAO {\r\n    struct dao_uri_struct {\r\n        string dao_wallet;\r\n        string dao_uri;\r\n        string finished;\r\n    }\r\n    struct goal_uri_struct {\r\n        uint256 dao_id;\r\n        string goal_uri;\r\n    }\r\n\r\n    struct ideas_uri_struct {\r\n        uint256 goal_id;\r\n        string ideas_uri;\r\n    }\r\n\r\n    struct goal_ideas_votes_struct {\r\n        uint256 goal_id;\r\n        uint256 ideas_id;\r\n        string wallet;\r\n    }\r\n\r\n    uint256 private _dao_ids;\r\n    uint256 private _goal_ids;\r\n    uint256 private _ideas_ids;\r\n    uint256 private _ideas_vote_ids;\r\n    mapping(uint256 => dao_uri_struct) public _dao_uris;                        //_dao_ids          => (Dao)    Dao Wallet + Dao URI   + Finished\r\n    mapping(uint256 => goal_uri_struct) private _goal_uris;                     //_goal_ids         => (Goal)   Dao ID + Goal URI\r\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris;                    //_ideas_ids        => (Ideas)  Goal ID + Ideas URI\r\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes;    //_ideas_vote_ids   => (Vote)   Goal ID + Ideas ID + Wallet\r\n\r\n    \r\n\r\n    //Daos\r\n    function create_dao(string memory _dao_wallet, string memory _dao_uri)\r\n        public\r\n        returns (uint256)\r\n    {\r\n        //Create Dao into _dao_uris\r\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, \"False\");\r\n        _dao_ids++;\r\n\r\n        return _dao_ids;\r\n    }\r\n\r\n    function set_dao(\r\n        uint256 _dao_id,\r\n        string memory _dao_wallet,\r\n        string memory _dao_uri\r\n    ) public {\r\n        //Set Dao of wallet and uri\r\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\r\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\r\n    }\r\n\r\n    function get_all_daos() public view returns (string[] memory) {\r\n        //Getting all doas\r\n        string[] memory _StoreInfo = new string[](_dao_ids);\r\n        for (uint256 i = 0; i < _dao_ids; i++) {\r\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n\r\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\r\n        //Getting one dao URI\r\n        return _dao_uris[_dao_id].dao_uri;\r\n    }\r\n\r\n    //Goals\r\n    function create_goal(string memory _goal_uri, uint256 _dao_id) public returns (uint256)\r\n    {\r\n        //Create goal into _goal_uris\r\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\r\n        _goal_ids++;\r\n\r\n        return _goal_ids;\r\n    }\r\n\r\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\r\n        //Set goal uri\r\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\r\n    }\r\n\r\n    function get_all_goals() public view returns (string[] memory) {\r\n        //Getting all goals\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_goals_by_dao_id(uint256 _dao_id) public view returns (string[] memory) {\r\n        //Getting all goals by dao id\r\n        string[] memory _StoreInfo = new string[](_goal_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n          if (_goal_uris[i].dao_id == _dao_id){\r\n            _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\r\n            _store_id++;\r\n          }\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    \r\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\r\n        //Getting goal id by uri\r\n        for (uint256 i = 0; i < _goal_ids; i++) {\r\n          if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return  i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\r\n        //Getting one goal URI\r\n        return _goal_uris[_goal_id].goal_uri;\r\n    }\r\n\r\n\r\n    //Ideas\r\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id) public returns (uint256)\r\n    {\r\n        //Create ideas into _ideas_uris\r\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri);\r\n        _ideas_ids++;\r\n\r\n        return _ideas_ids;\r\n    }\r\n\r\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\r\n        //Set ideas uri\r\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\r\n    }\r\n\r\n    function get_all_ideas() public view returns (string[] memory) {\r\n        //Getting all ideas\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\r\n        //Getting all ideas by goal id\r\n        string[] memory _StoreInfo = new string[](_ideas_ids);        \r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n          if (_ideas_uris[i].goal_id == _goal_id)\r\n            _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\r\n            _store_id++;\r\n        }\r\n\r\n        return _StoreInfo;\r\n    }\r\n\r\n    \r\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n        //Getting ideas id by uri\r\n        for (uint256 i = 0; i < _ideas_ids; i++) {\r\n          if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return  i;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\r\n     //Getting ideas id by uri\r\n     for (uint256 i = 0; i < _ideas_ids; i++) {\r\n       if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return  _ideas_uris[i].goal_id;\r\n     }\r\n\r\n     return 0;\r\n    }\r\n\r\n\r\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\r\n        //Getting one ideas URI\r\n        return _ideas_uris[_ideas_id].ideas_uri;\r\n    }\r\n\r\n\r\n    //Votes\r\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id,string memory _wallet) public returns (uint256)\r\n    {\r\n        //Create votes into all_goal_ideas_votes\r\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id,_wallet);\r\n        _ideas_vote_ids++;\r\n\r\n        return _ideas_vote_ids;\r\n    }\r\n\r\n\r\n   function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory)\r\n    {\r\n        //gets all ideas votes from goal\r\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\r\n        uint256 _store_id;\r\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\r\n          if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id )\r\n            _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\r\n            _store_id++;\r\n        }\r\n        return _StoreInfo;\r\n    }\r\n\r\n    function reset_all() public {\r\n      _dao_ids = 0;\r\n      _goal_ids = 0;\r\n      _ideas_ids = 0;\r\n      _ideas_vote_ids = 0;\r\n      for (uint256 i = 0; i < _dao_ids; i++)            delete _dao_uris[i];\r\n      for (uint256 i = 0; i < _goal_ids; i++)           delete _goal_uris[i];\r\n      for (uint256 i = 0; i < _ideas_ids; i++)          delete _ideas_uris[i];\r\n      for (uint256 i = 0; i < _ideas_vote_ids; i++)     delete all_goal_ideas_votes[i];    \r\n\r\n    }\r\n\r\n\r\n    //Test\r\n    function dao() public returns (string[] memory) {\r\n        create_dao(\"wallet #1\", \"DAO metadata #1\");\r\n        create_dao(\"wallet #2\", \"DAO metadata #2\");\r\n        return get_all_daos();\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1039],"Strings":[174]},"id":175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":175,"sourceUnit":1040,"src":"126:25:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"153:34:0","text":" @dev String operations."},"fullyImplemented":true,"id":174,"linearizedBaseContracts":[174],"name":"Strings","nameLocation":"196:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:0","nodeType":"VariableDeclaration","scope":174,"src":"210:54:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":4,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":9,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:0","nodeType":"VariableDeclaration","scope":174,"src":"270:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":56,"nodeType":"Block","src":"486:625:0","statements":[{"id":55,"nodeType":"UncheckedBlock","src":"496:609:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"length","nameLocation":"528:6:0","nodeType":"VariableDeclaration","scope":55,"src":"520:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":25,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":21,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"548:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":19,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"537:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1039_$","typeString":"type(library Math)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":876,"src":"537:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:0"},{"assignments":[27],"declarations":[{"constant":false,"id":27,"mutability":"mutable","name":"buffer","nameLocation":"586:6:0","nodeType":"VariableDeclaration","scope":55,"src":"572:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":26,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":32,"initialValue":{"arguments":[{"id":30,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"606:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":29,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":28,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:0"},{"assignments":[34],"declarations":[{"constant":false,"id":34,"mutability":"mutable","name":"ptr","nameLocation":"635:3:0","nodeType":"VariableDeclaration","scope":55,"src":"627:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":35,"nodeType":"VariableDeclarationStatement","src":"627:11:0"},{"AST":{"nodeType":"YulBlock","src":"708:67:0","statements":[{"nodeType":"YulAssignment","src":"726:35:0","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:0","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:0"},"nodeType":"YulFunctionCall","src":"745:15:0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:0"},"nodeType":"YulFunctionCall","src":"733:28:0"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:0"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":27,"isOffset":false,"isSlot":false,"src":"737:6:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"753:6:0","valueSize":1},{"declaration":34,"isOffset":false,"isSlot":false,"src":"726:3:0","valueSize":1}],"id":36,"nodeType":"InlineAssembly","src":"699:76:0"},{"body":{"id":51,"nodeType":"Block","src":"801:267:0","statements":[{"expression":{"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:0","subExpression":{"id":38,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"819:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":40,"nodeType":"ExpressionStatement","src":"819:5:0"},{"AST":{"nodeType":"YulBlock","src":"902:84:0","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:0"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:0","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:0"},"nodeType":"YulFunctionCall","src":"942:14:0"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:0"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:0"},"nodeType":"YulFunctionCall","src":"937:30:0"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:0"},"nodeType":"YulFunctionCall","src":"924:44:0"},"nodeType":"YulExpressionStatement","src":"924:44:0"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"berlin","externalReferences":[{"declaration":6,"isOffset":false,"isSlot":false,"src":"958:8:0","valueSize":1},{"declaration":34,"isOffset":false,"isSlot":false,"src":"932:3:0","valueSize":1},{"declaration":12,"isOffset":false,"isSlot":false,"src":"946:5:0","valueSize":1}],"id":41,"nodeType":"InlineAssembly","src":"893:93:0"},{"expression":{"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":42,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1003:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":45,"nodeType":"ExpressionStatement","src":"1003:11:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":46,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1036:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":47,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":50,"nodeType":"IfStatement","src":"1032:21:0","trueBody":{"id":49,"nodeType":"Break","src":"1048:5:0"}}]},"condition":{"hexValue":"74727565","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":52,"nodeType":"WhileStatement","src":"788:280:0"},{"expression":{"id":53,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1088:6:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":16,"id":54,"nodeType":"Return","src":"1081:13:0"}]}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"320:90:0","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":57,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:0","nodeType":"FunctionDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"value","nameLocation":"441:5:0","nodeType":"VariableDeclaration","scope":57,"src":"433:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":57,"src":"471:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:0"},"scope":174,"src":"415:696:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":76,"nodeType":"Block","src":"1290:100:0","statements":[{"id":75,"nodeType":"UncheckedBlock","src":"1300:84:0","statements":[{"expression":{"arguments":[{"id":66,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1343:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":69,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"1362:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":67,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1350:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1039_$","typeString":"type(library Math)"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":999,"src":"1350:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":65,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[77,153,173],"referencedDeclaration":153,"src":"1331:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":64,"id":74,"nodeType":"Return","src":"1324:49:0"}]}]},"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"1117:94:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":77,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"value","nameLocation":"1245:5:0","nodeType":"VariableDeclaration","scope":77,"src":"1237:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:0"},"returnParameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":77,"src":"1275:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:0"},"scope":174,"src":"1216:174:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1603:347:0","statements":[{"assignments":[88],"declarations":[{"constant":false,"id":88,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:0","nodeType":"VariableDeclaration","scope":152,"src":"1613:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":87,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":97,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":91,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":92,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1649:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":90,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":89,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:0"},{"expression":{"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":98,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1670:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":100,"indexExpression":{"hexValue":"30","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":103,"nodeType":"ExpressionStatement","src":"1670:15:0"},{"expression":{"id":108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":104,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1695:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":106,"indexExpression":{"hexValue":"31","id":105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":109,"nodeType":"ExpressionStatement","src":"1695:15:0"},{"body":{"id":138,"nodeType":"Block","src":"1765:83:0","statements":[{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":124,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1779:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":126,"indexExpression":{"id":125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1786:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":127,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1791:8:0","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":131,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1800:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:0","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":133,"nodeType":"ExpressionStatement","src":"1779:33:0"},{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1826:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:0","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":137,"nodeType":"ExpressionStatement","src":"1826:11:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1753:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":139,"initializationExpression":{"assignments":[111],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"i","nameLocation":"1733:1:0","nodeType":"VariableDeclaration","scope":139,"src":"1725:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":117,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":113,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1741:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:0"},"loopExpression":{"expression":{"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:0","subExpression":{"id":121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1762:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":123,"nodeType":"ExpressionStatement","src":"1760:3:0"},"nodeType":"ForStatement","src":"1720:128:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1865:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"1857:55:0"},{"expression":{"arguments":[{"id":149,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"1936:6:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":147,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:0","typeDescriptions":{}}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":86,"id":151,"nodeType":"Return","src":"1922:21:0"}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1396:112:0","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":153,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"value","nameLocation":"1542:5:0","nodeType":"VariableDeclaration","scope":153,"src":"1534:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"length","nameLocation":"1557:6:0","nodeType":"VariableDeclaration","scope":153,"src":"1549:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"1588:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":84,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:0"},"scope":174,"src":"1513:437:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":172,"nodeType":"Block","src":"2175:76:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":166,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"2220:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":164,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:0","typeDescriptions":{}}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:0","typeDescriptions":{}}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":169,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2228:15:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":161,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[77,153,173],"referencedDeclaration":153,"src":"2192:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":160,"id":171,"nodeType":"Return","src":"2185:59:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1956:141:0","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":173,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:0","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"addr","nameLocation":"2131:4:0","nodeType":"VariableDeclaration","scope":173,"src":"2123:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"2160:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:0"},"scope":174,"src":"2102:149:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":175,"src":"188:2065:0","usedErrors":[]}],"src":"101:2153:0"},"id":0},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1039]},"id":1040,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":176,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"128:73:1","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1039,"linearizedBaseContracts":[1039],"name":"Math","nameLocation":"210:4:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":181,"members":[{"id":178,"name":"Down","nameLocation":"245:4:1","nodeType":"EnumValue","src":"245:4:1"},{"id":179,"name":"Up","nameLocation":"287:2:1","nodeType":"EnumValue","src":"287:2:1"},{"id":180,"name":"Zero","nameLocation":"318:4:1","nodeType":"EnumValue","src":"318:4:1"}],"name":"Rounding","nameLocation":"226:8:1","nodeType":"EnumDefinition","src":"221:122:1"},{"body":{"id":198,"nodeType":"Block","src":"480:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":191,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"497:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":192,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"501:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"509:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:1","trueExpression":{"id":194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":184,"src":"505:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":190,"id":197,"nodeType":"Return","src":"490:20:1"}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"349:59:1","text":" @dev Returns the largest of two numbers."},"id":199,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"a","nameLocation":"434:1:1","nodeType":"VariableDeclaration","scope":199,"src":"426:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"b","nameLocation":"445:1:1","nodeType":"VariableDeclaration","scope":199,"src":"437:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":199,"src":"471:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:1"},"scope":1039,"src":"413:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"655:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"672:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":210,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"676:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"684:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:1","trueExpression":{"id":212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"680:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":208,"id":215,"nodeType":"Return","src":"665:20:1"}]},"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"523:60:1","text":" @dev Returns the smallest of two numbers."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"a","nameLocation":"609:1:1","nodeType":"VariableDeclaration","scope":217,"src":"601:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"b","nameLocation":"620:1:1","nodeType":"VariableDeclaration","scope":217,"src":"612:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":217,"src":"646:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:1"},"scope":1039,"src":"588:104:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":239,"nodeType":"Block","src":"876:82:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"931:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"935:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"941:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"945:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":226,"id":238,"nodeType":"Return","src":"923:28:1"}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"698:102:1","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:1","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"a","nameLocation":"830:1:1","nodeType":"VariableDeclaration","scope":240,"src":"822:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":219,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"b","nameLocation":"841:1:1","nodeType":"VariableDeclaration","scope":240,"src":"833:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"867:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:1"},"scope":1039,"src":"805:153:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"1228:123:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":250,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1316:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"1330:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"1339:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:1","trueExpression":{"hexValue":"30","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":249,"id":263,"nodeType":"Return","src":"1309:35:1"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"964:188:1","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"a","nameLocation":"1182:1:1","nodeType":"VariableDeclaration","scope":265,"src":"1174:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"b","nameLocation":"1193:1:1","nodeType":"VariableDeclaration","scope":265,"src":"1185:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"1219:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:1"},"scope":1039,"src":"1157:194:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1795:3797:1","statements":[{"id":385,"nodeType":"UncheckedBlock","src":"1805:3781:1","statements":[{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:1","nodeType":"VariableDeclaration","scope":385,"src":"2126:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":279,"nodeType":"VariableDeclarationStatement","src":"2126:13:1"},{"assignments":[281],"declarations":[{"constant":false,"id":281,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:1","nodeType":"VariableDeclaration","scope":385,"src":"2198:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":282,"nodeType":"VariableDeclarationStatement","src":"2198:13:1"},{"AST":{"nodeType":"YulBlock","src":"2278:157:1","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:1","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:1"},"nodeType":"YulFunctionCall","src":"2319:6:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:1"},"nodeType":"YulFunctionCall","src":"2306:20:1"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:1","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:1"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:1"},"nodeType":"YulFunctionCall","src":"2352:9:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:1"}]},{"nodeType":"YulAssignment","src":"2378:43:1","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:1"},"nodeType":"YulFunctionCall","src":"2391:14:1"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:1"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:1"},"nodeType":"YulFunctionCall","src":"2407:13:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:1"},"nodeType":"YulFunctionCall","src":"2387:34:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:1"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":278,"isOffset":false,"isSlot":false,"src":"2343:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"2399:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"2414:5:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"2378:5:1","valueSize":1},{"declaration":268,"isOffset":false,"isSlot":false,"src":"2313:1:1","valueSize":1},{"declaration":268,"isOffset":false,"isSlot":false,"src":"2356:1:1","valueSize":1},{"declaration":270,"isOffset":false,"isSlot":false,"src":"2316:1:1","valueSize":1},{"declaration":270,"isOffset":false,"isSlot":false,"src":"2359:1:1","valueSize":1}],"id":283,"nodeType":"InlineAssembly","src":"2269:166:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2516:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":292,"nodeType":"IfStatement","src":"2512:75:1","trueBody":{"id":291,"nodeType":"Block","src":"2528:59:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":287,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2553:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":288,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2561:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":276,"id":290,"nodeType":"Return","src":"2546:26:1"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2697:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":295,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2711:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"2689:28:1"},{"assignments":[300],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:1","nodeType":"VariableDeclaration","scope":385,"src":"2973:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":301,"nodeType":"VariableDeclarationStatement","src":"2973:17:1"},{"AST":{"nodeType":"YulBlock","src":"3013:291:1","statements":[{"nodeType":"YulAssignment","src":"3082:38:1","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:1"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:1"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:1"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:1"},"nodeType":"YulFunctionCall","src":"3095:25:1"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:1"}]},{"nodeType":"YulAssignment","src":"3202:41:1","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:1"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:1"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:1"},"nodeType":"YulFunctionCall","src":"3222:20:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:1"},"nodeType":"YulFunctionCall","src":"3211:32:1"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:1"}]},{"nodeType":"YulAssignment","src":"3260:30:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:1"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:1"},"nodeType":"YulFunctionCall","src":"3269:21:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:1"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":272,"isOffset":false,"isSlot":false,"src":"3108:11:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3236:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3260:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3273:5:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"3202:5:1","valueSize":1},{"declaration":281,"isOffset":false,"isSlot":false,"src":"3215:5:1","valueSize":1},{"declaration":300,"isOffset":false,"isSlot":false,"src":"3082:9:1","valueSize":1},{"declaration":300,"isOffset":false,"isSlot":false,"src":"3225:9:1","valueSize":1},{"declaration":300,"isOffset":false,"isSlot":false,"src":"3280:9:1","valueSize":1},{"declaration":268,"isOffset":false,"isSlot":false,"src":"3102:1:1","valueSize":1},{"declaration":270,"isOffset":false,"isSlot":false,"src":"3105:1:1","valueSize":1}],"id":302,"nodeType":"InlineAssembly","src":"3004:300:1"},{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"twos","nameLocation":"3619:4:1","nodeType":"VariableDeclaration","scope":385,"src":"3611:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":305,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3626:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:1","subExpression":{"id":306,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3642:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:1"},{"AST":{"nodeType":"YulBlock","src":"3681:362:1","statements":[{"nodeType":"YulAssignment","src":"3746:37:1","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:1"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:1"},"nodeType":"YulFunctionCall","src":"3761:22:1"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:1"}]},{"nodeType":"YulAssignment","src":"3850:25:1","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:1"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:1"},"nodeType":"YulFunctionCall","src":"3859:16:1"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:1"}]},{"nodeType":"YulAssignment","src":"3990:39:1","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:1","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:1"},"nodeType":"YulFunctionCall","src":"4006:12:1"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:1"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:1"},"nodeType":"YulFunctionCall","src":"4002:23:1"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:1"},"nodeType":"YulFunctionCall","src":"3998:31:1"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:1"}]}]},"evmVersion":"berlin","externalReferences":[{"declaration":272,"isOffset":false,"isSlot":false,"src":"3746:11:1","valueSize":1},{"declaration":272,"isOffset":false,"isSlot":false,"src":"3765:11:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3850:5:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"3863:5:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"3778:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"3870:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"3990:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"4013:4:1","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"4020:4:1","valueSize":1}],"id":313,"nodeType":"InlineAssembly","src":"3672:371:1"},{"expression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":314,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4109:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":315,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4118:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":316,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4126:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"4109:21:1"},{"assignments":[321],"declarations":[{"constant":false,"id":321,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:1","nodeType":"VariableDeclaration","scope":385,"src":"4448:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":328,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":323,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4471:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":329,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":331,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4719:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":332,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4733:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":336,"nodeType":"ExpressionStatement","src":"4704:36:1"},{"expression":{"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":337,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":339,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":340,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":344,"nodeType":"ExpressionStatement","src":"4773:36:1"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4843:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4858:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":348,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4872:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":352,"nodeType":"ExpressionStatement","src":"4843:36:1"},{"expression":{"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":353,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4913:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":355,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4928:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":356,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4942:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":360,"nodeType":"ExpressionStatement","src":"4913:36:1"},{"expression":{"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":361,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"4983:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"4998:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":364,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":368,"nodeType":"ExpressionStatement","src":"4983:36:1"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5054:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"5069:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5083:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"5054:36:1"},{"expression":{"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5524:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":378,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5533:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"5541:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":382,"nodeType":"ExpressionStatement","src":"5524:24:1"},{"expression":{"id":383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"5569:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":276,"id":384,"nodeType":"Return","src":"5562:13:1"}]}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"1357:305:1","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:1","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"x","nameLocation":"1700:1:1","nodeType":"VariableDeclaration","scope":387,"src":"1692:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"y","nameLocation":"1719:1:1","nodeType":"VariableDeclaration","scope":387,"src":"1711:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:1","nodeType":"VariableDeclaration","scope":387,"src":"1730:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:1"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"result","nameLocation":"1787:6:1","nodeType":"VariableDeclaration","scope":387,"src":"1779:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:1"},"scope":1039,"src":"1667:3925:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"5872:189:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"result","nameLocation":"5890:6:1","nodeType":"VariableDeclaration","scope":430,"src":"5882:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":409,"initialValue":{"arguments":[{"id":405,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5906:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":406,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5909:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":407,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5912:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":404,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[387,431],"referencedDeclaration":387,"src":"5899:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5938:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":411,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"5950:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"5950:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"5938:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":415,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5972:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":416,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5975:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5978:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":414,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:1","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"IfStatement","src":"5934:98:1","trueBody":{"id":426,"nodeType":"Block","src":"5996:36:1","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6010:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":425,"nodeType":"ExpressionStatement","src":"6010:11:1"}]}},{"expression":{"id":428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6048:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":401,"id":429,"nodeType":"Return","src":"6041:13:1"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"5598:121:1","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":431,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:1","nodeType":"FunctionDefinition","parameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"x","nameLocation":"5757:1:1","nodeType":"VariableDeclaration","scope":431,"src":"5749:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"y","nameLocation":"5776:1:1","nodeType":"VariableDeclaration","scope":431,"src":"5768:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:1","nodeType":"VariableDeclaration","scope":431,"src":"5787:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:1","nodeType":"VariableDeclaration","scope":431,"src":"5816:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":396,"nodeType":"UserDefinedTypeName","pathNode":{"id":395,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"5816:8:1"},"referencedDeclaration":181,"src":"5816:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:1"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":431,"src":"5863:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:1"},"scope":1039,"src":"5724:337:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":542,"nodeType":"Block","src":"6337:1585:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6351:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":445,"nodeType":"IfStatement","src":"6347:45:1","trueBody":{"id":444,"nodeType":"Block","src":"6359:33:1","statements":[{"expression":{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":438,"id":443,"nodeType":"Return","src":"6373:8:1"}]}},{"assignments":[447],"declarations":[{"constant":false,"id":447,"mutability":"mutable","name":"result","nameLocation":"7079:6:1","nodeType":"VariableDeclaration","scope":542,"src":"7071:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7099:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":449,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[711,747],"referencedDeclaration":711,"src":"7094:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:1"},{"id":541,"nodeType":"UncheckedBlock","src":"7508:408:1","statements":[{"expression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7532:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7542:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7551:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7555:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":467,"nodeType":"ExpressionStatement","src":"7532:35:1"},{"expression":{"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7581:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7591:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7600:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7604:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":478,"nodeType":"ExpressionStatement","src":"7581:35:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7630:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7640:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7649:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7653:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"7630:35:1"},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7679:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7689:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7698:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":493,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7702:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"7679:35:1"},{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7738:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7747:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7751:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":511,"nodeType":"ExpressionStatement","src":"7728:35:1"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7777:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7787:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7796:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7800:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"7777:35:1"},{"expression":{"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7826:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7836:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7845:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7849:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":533,"nodeType":"ExpressionStatement","src":"7826:35:1"},{"expression":{"arguments":[{"id":535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7886:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7894:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7898:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"7882:3:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":438,"id":540,"nodeType":"Return","src":"7875:30:1"}]}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"6067:208:1","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":543,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:1","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"a","nameLocation":"6302:1:1","nodeType":"VariableDeclaration","scope":543,"src":"6294:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:1"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"6328:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:1"},"scope":1039,"src":"6280:1642:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":578,"nodeType":"Block","src":"8098:161:1","statements":[{"id":577,"nodeType":"UncheckedBlock","src":"8108:145:1","statements":[{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"result","nameLocation":"8140:6:1","nodeType":"VariableDeclaration","scope":577,"src":"8132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":559,"initialValue":{"arguments":[{"id":557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8154:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[543,579],"referencedDeclaration":543,"src":"8149:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8177:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":561,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"8187:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":562,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"8199:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"8199:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"8187:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8214:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8223:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8232:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:1","trueExpression":{"hexValue":"31","id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":553,"id":576,"nodeType":"Return","src":"8170:72:1"}]}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"7928:89:1","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:1","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"a","nameLocation":"8044:1:1","nodeType":"VariableDeclaration","scope":579,"src":"8036:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:1","nodeType":"VariableDeclaration","scope":579,"src":"8047:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":548,"nodeType":"UserDefinedTypeName","pathNode":{"id":547,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"8047:8:1"},"referencedDeclaration":181,"src":"8047:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":579,"src":"8089:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:1"},"scope":1039,"src":"8022:237:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"8444:922:1","statements":[{"assignments":[588],"declarations":[{"constant":false,"id":588,"mutability":"mutable","name":"result","nameLocation":"8462:6:1","nodeType":"VariableDeclaration","scope":710,"src":"8454:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":590,"initialValue":{"hexValue":"30","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:1"},{"id":707,"nodeType":"UncheckedBlock","src":"8482:855:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8510:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":605,"nodeType":"IfStatement","src":"8506:99:1","trueBody":{"id":604,"nodeType":"Block","src":"8528:77:1","statements":[{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8546:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":599,"nodeType":"ExpressionStatement","src":"8546:13:1"},{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8577:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"8577:13:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8622:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":620,"nodeType":"IfStatement","src":"8618:96:1","trueBody":{"id":619,"nodeType":"Block","src":"8639:75:1","statements":[{"expression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8657:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":614,"nodeType":"ExpressionStatement","src":"8657:12:1"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8687:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"8687:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8731:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":635,"nodeType":"IfStatement","src":"8727:96:1","trueBody":{"id":634,"nodeType":"Block","src":"8748:75:1","statements":[{"expression":{"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8766:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":629,"nodeType":"ExpressionStatement","src":"8766:12:1"},{"expression":{"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":630,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8796:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":633,"nodeType":"ExpressionStatement","src":"8796:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8840:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"8836:96:1","trueBody":{"id":649,"nodeType":"Block","src":"8857:75:1","statements":[{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8875:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"nodeType":"ExpressionStatement","src":"8875:12:1"},{"expression":{"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"8905:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":648,"nodeType":"ExpressionStatement","src":"8905:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8949:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":665,"nodeType":"IfStatement","src":"8945:93:1","trueBody":{"id":664,"nodeType":"Block","src":"8965:73:1","statements":[{"expression":{"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"8983:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":659,"nodeType":"ExpressionStatement","src":"8983:11:1"},{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9012:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":663,"nodeType":"ExpressionStatement","src":"9012:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9055:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"9051:93:1","trueBody":{"id":679,"nodeType":"Block","src":"9071:73:1","statements":[{"expression":{"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9089:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":674,"nodeType":"ExpressionStatement","src":"9089:11:1"},{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9118:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":678,"nodeType":"ExpressionStatement","src":"9118:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9161:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":695,"nodeType":"IfStatement","src":"9157:93:1","trueBody":{"id":694,"nodeType":"Block","src":"9177:73:1","statements":[{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9195:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":689,"nodeType":"ExpressionStatement","src":"9195:11:1"},{"expression":{"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9224:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":693,"nodeType":"ExpressionStatement","src":"9224:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"9267:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":706,"nodeType":"IfStatement","src":"9263:64:1","trueBody":{"id":705,"nodeType":"Block","src":"9283:44:1","statements":[{"expression":{"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9301:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":704,"nodeType":"ExpressionStatement","src":"9301:11:1"}]}}]},{"expression":{"id":708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9353:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":586,"id":709,"nodeType":"Return","src":"9346:13:1"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"8265:113:1","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:1","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"value","nameLocation":"8405:5:1","nodeType":"VariableDeclaration","scope":711,"src":"8397:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:1"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"8435:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:1"},"scope":1039,"src":"8383:983:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":746,"nodeType":"Block","src":"9599:165:1","statements":[{"id":745,"nodeType":"UncheckedBlock","src":"9609:149:1","statements":[{"assignments":[723],"declarations":[{"constant":false,"id":723,"mutability":"mutable","name":"result","nameLocation":"9641:6:1","nodeType":"VariableDeclaration","scope":745,"src":"9633:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9655:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":724,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[711,747],"referencedDeclaration":711,"src":"9650:4:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9682:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"9692:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":730,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"9704:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"9704:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"9692:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"9724:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"9733:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:1","trueExpression":{"hexValue":"31","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":721,"id":744,"nodeType":"Return","src":"9675:72:1"}]}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"9372:142:1","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:1","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"value","nameLocation":"9541:5:1","nodeType":"VariableDeclaration","scope":747,"src":"9533:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":717,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:1","nodeType":"VariableDeclaration","scope":747,"src":"9548:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":716,"nodeType":"UserDefinedTypeName","pathNode":{"id":715,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"9548:8:1"},"referencedDeclaration":181,"src":"9548:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:1"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"9590:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:1"},"scope":1039,"src":"9519:245:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":875,"nodeType":"Block","src":"9951:828:1","statements":[{"assignments":[756],"declarations":[{"constant":false,"id":756,"mutability":"mutable","name":"result","nameLocation":"9969:6:1","nodeType":"VariableDeclaration","scope":875,"src":"9961:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":755,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":758,"initialValue":{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:1"},{"id":872,"nodeType":"UncheckedBlock","src":"9989:761:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10017:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":775,"nodeType":"IfStatement","src":"10013:99:1","trueBody":{"id":774,"nodeType":"Block","src":"10034:78:1","statements":[{"expression":{"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10052:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"nodeType":"ExpressionStatement","src":"10052:15:1"},{"expression":{"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10085:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":773,"nodeType":"ExpressionStatement","src":"10085:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10129:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"IfStatement","src":"10125:99:1","trueBody":{"id":791,"nodeType":"Block","src":"10146:78:1","statements":[{"expression":{"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10164:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":786,"nodeType":"ExpressionStatement","src":"10164:15:1"},{"expression":{"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10197:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":790,"nodeType":"ExpressionStatement","src":"10197:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10241:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":809,"nodeType":"IfStatement","src":"10237:99:1","trueBody":{"id":808,"nodeType":"Block","src":"10258:78:1","statements":[{"expression":{"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10276:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:1","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":803,"nodeType":"ExpressionStatement","src":"10276:15:1"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10309:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"10309:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10353:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":826,"nodeType":"IfStatement","src":"10349:96:1","trueBody":{"id":825,"nodeType":"Block","src":"10369:76:1","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10387:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"10387:14:1"},{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10419:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":824,"nodeType":"ExpressionStatement","src":"10419:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10462:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"nodeType":"IfStatement","src":"10458:96:1","trueBody":{"id":842,"nodeType":"Block","src":"10478:76:1","statements":[{"expression":{"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10496:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":837,"nodeType":"ExpressionStatement","src":"10496:14:1"},{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":838,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10528:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"10528:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10571:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"IfStatement","src":"10567:96:1","trueBody":{"id":859,"nodeType":"Block","src":"10587:76:1","statements":[{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10605:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"10605:14:1"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10637:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"10637:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"10680:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":871,"nodeType":"IfStatement","src":"10676:64:1","trueBody":{"id":870,"nodeType":"Block","src":"10696:44:1","statements":[{"expression":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10714:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":869,"nodeType":"ExpressionStatement","src":"10714:11:1"}]}}]},{"expression":{"id":873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10766:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":754,"id":874,"nodeType":"Return","src":"10759:13:1"}]},"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"9770:114:1","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":876,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:1","nodeType":"FunctionDefinition","parameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"value","nameLocation":"9912:5:1","nodeType":"VariableDeclaration","scope":876,"src":"9904:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:1"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"9942:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:1"},"scope":1039,"src":"9889:890:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"11014:165:1","statements":[{"id":910,"nodeType":"UncheckedBlock","src":"11024:149:1","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"result","nameLocation":"11056:6:1","nodeType":"VariableDeclaration","scope":910,"src":"11048:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":887,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":892,"initialValue":{"arguments":[{"id":890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11071:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":889,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[876,912],"referencedDeclaration":876,"src":"11065:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"11098:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"11108:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":895,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"11120:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"11120:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"11108:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:1","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"11139:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"11148:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:1","trueExpression":{"hexValue":"31","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":886,"id":909,"nodeType":"Return","src":"11091:71:1"}]}]},"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"10785:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:1","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":879,"mutability":"mutable","name":"value","nameLocation":"10956:5:1","nodeType":"VariableDeclaration","scope":912,"src":"10948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:1","nodeType":"VariableDeclaration","scope":912,"src":"10963:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":881,"nodeType":"UserDefinedTypeName","pathNode":{"id":880,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"10963:8:1"},"referencedDeclaration":181,"src":"10963:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:1"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"11005:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":884,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:1"},"scope":1039,"src":"10933:246:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":998,"nodeType":"Block","src":"11493:600:1","statements":[{"assignments":[921],"declarations":[{"constant":false,"id":921,"mutability":"mutable","name":"result","nameLocation":"11511:6:1","nodeType":"VariableDeclaration","scope":998,"src":"11503:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":923,"initialValue":{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:1"},{"id":995,"nodeType":"UncheckedBlock","src":"11531:533:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11559:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":938,"nodeType":"IfStatement","src":"11555:98:1","trueBody":{"id":937,"nodeType":"Block","src":"11577:76:1","statements":[{"expression":{"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11595:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ExpressionStatement","src":"11595:13:1"},{"expression":{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11626:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":936,"nodeType":"ExpressionStatement","src":"11626:12:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11670:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"nodeType":"IfStatement","src":"11666:95:1","trueBody":{"id":952,"nodeType":"Block","src":"11687:74:1","statements":[{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11705:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":947,"nodeType":"ExpressionStatement","src":"11705:12:1"},{"expression":{"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11735:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":951,"nodeType":"ExpressionStatement","src":"11735:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11778:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"11774:95:1","trueBody":{"id":967,"nodeType":"Block","src":"11795:74:1","statements":[{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11813:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"11813:12:1"},{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11843:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"nodeType":"ExpressionStatement","src":"11843:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11886:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":983,"nodeType":"IfStatement","src":"11882:95:1","trueBody":{"id":982,"nodeType":"Block","src":"11903:74:1","statements":[{"expression":{"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11921:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":977,"nodeType":"ExpressionStatement","src":"11921:12:1"},{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"11951:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"11951:11:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"11994:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":994,"nodeType":"IfStatement","src":"11990:64:1","trueBody":{"id":993,"nodeType":"Block","src":"12010:44:1","statements":[{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12028:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ExpressionStatement","src":"12028:11:1"}]}}]},{"expression":{"id":996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"12080:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":919,"id":997,"nodeType":"Return","src":"12073:13:1"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"11185:240:1","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":999,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:1","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"value","nameLocation":"11454:5:1","nodeType":"VariableDeclaration","scope":999,"src":"11446:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:1"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":999,"src":"11484:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:1"},"scope":1039,"src":"11430:663:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1037,"nodeType":"Block","src":"12329:173:1","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"12339:157:1","statements":[{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"result","nameLocation":"12371:6:1","nodeType":"VariableDeclaration","scope":1036,"src":"12363:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1015,"initialValue":{"arguments":[{"id":1013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"12387:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1012,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[999,1038],"referencedDeclaration":999,"src":"12380:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12414:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"12424:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1018,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"12436:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$181_$","typeString":"type(enum Math.Rounding)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":179,"src":"12436:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"src":"12424:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12457:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"12471:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:1","trueExpression":{"hexValue":"31","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1009,"id":1035,"nodeType":"Return","src":"12407:78:1"}]}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"12099:143:1","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:1","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"value","nameLocation":"12271:5:1","nodeType":"VariableDeclaration","scope":1038,"src":"12263:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:1","nodeType":"VariableDeclaration","scope":1038,"src":"12278:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"},"typeName":{"id":1004,"nodeType":"UserDefinedTypeName","pathNode":{"id":1003,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"12278:8:1"},"referencedDeclaration":181,"src":"12278:8:1","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$181","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:1"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1038,"src":"12320:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:1"},"scope":1039,"src":"12247:255:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1040,"src":"202:12302:1","usedErrors":[]}],"src":"103:12402:1"},"id":1},"contracts/GreenDAO.sol":{"ast":{"absolutePath":"contracts/GreenDAO.sol","exportedSymbols":{"GreenDAO":[1819],"Math":[1039],"Strings":[174]},"id":1820,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1041,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1042,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1820,"sourceUnit":175,"src":"58:51:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1819,"linearizedBaseContracts":[1819],"name":"GreenDAO","nameLocation":"122:8:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GreenDAO.dao_uri_struct","id":1049,"members":[{"constant":false,"id":1044,"mutability":"mutable","name":"dao_wallet","nameLocation":"178:10:2","nodeType":"VariableDeclaration","scope":1049,"src":"171:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1043,"name":"string","nodeType":"ElementaryTypeName","src":"171:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"dao_uri","nameLocation":"206:7:2","nodeType":"VariableDeclaration","scope":1049,"src":"199:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1045,"name":"string","nodeType":"ElementaryTypeName","src":"199:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"finished","nameLocation":"231:8:2","nodeType":"VariableDeclaration","scope":1049,"src":"224:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1047,"name":"string","nodeType":"ElementaryTypeName","src":"224:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"dao_uri_struct","nameLocation":"145:14:2","nodeType":"StructDefinition","scope":1819,"src":"138:109:2","visibility":"public"},{"canonicalName":"GreenDAO.goal_uri_struct","id":1054,"members":[{"constant":false,"id":1051,"mutability":"mutable","name":"dao_id","nameLocation":"295:6:2","nodeType":"VariableDeclaration","scope":1054,"src":"287:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"goal_uri","nameLocation":"319:8:2","nodeType":"VariableDeclaration","scope":1054,"src":"312:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1052,"name":"string","nodeType":"ElementaryTypeName","src":"312:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_uri_struct","nameLocation":"260:15:2","nodeType":"StructDefinition","scope":1819,"src":"253:82:2","visibility":"public"},{"canonicalName":"GreenDAO.ideas_uri_struct","id":1059,"members":[{"constant":false,"id":1056,"mutability":"mutable","name":"goal_id","nameLocation":"386:7:2","nodeType":"VariableDeclaration","scope":1059,"src":"378:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"ideas_uri","nameLocation":"411:9:2","nodeType":"VariableDeclaration","scope":1059,"src":"404:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1057,"name":"string","nodeType":"ElementaryTypeName","src":"404:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ideas_uri_struct","nameLocation":"350:16:2","nodeType":"StructDefinition","scope":1819,"src":"343:85:2","visibility":"public"},{"canonicalName":"GreenDAO.goal_ideas_votes_struct","id":1066,"members":[{"constant":false,"id":1061,"mutability":"mutable","name":"goal_id","nameLocation":"486:7:2","nodeType":"VariableDeclaration","scope":1066,"src":"478:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"ideas_id","nameLocation":"512:8:2","nodeType":"VariableDeclaration","scope":1066,"src":"504:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"wallet","nameLocation":"538:6:2","nodeType":"VariableDeclaration","scope":1066,"src":"531:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1064,"name":"string","nodeType":"ElementaryTypeName","src":"531:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"goal_ideas_votes_struct","nameLocation":"443:23:2","nodeType":"StructDefinition","scope":1819,"src":"436:116:2","visibility":"public"},{"constant":false,"id":1068,"mutability":"mutable","name":"_dao_ids","nameLocation":"576:8:2","nodeType":"VariableDeclaration","scope":1819,"src":"560:24:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1070,"mutability":"mutable","name":"_goal_ids","nameLocation":"607:9:2","nodeType":"VariableDeclaration","scope":1819,"src":"591:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1072,"mutability":"mutable","name":"_ideas_ids","nameLocation":"639:10:2","nodeType":"VariableDeclaration","scope":1819,"src":"623:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1074,"mutability":"mutable","name":"_ideas_vote_ids","nameLocation":"672:15:2","nodeType":"VariableDeclaration","scope":1819,"src":"656:31:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"27a568b9","id":1079,"mutability":"mutable","name":"_dao_uris","nameLocation":"736:9:2","nodeType":"VariableDeclaration","scope":1819,"src":"694:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct)"},"typeName":{"id":1078,"keyType":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"694:34:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct)"},"valueType":{"id":1077,"nodeType":"UserDefinedTypeName","pathNode":{"id":1076,"name":"dao_uri_struct","nodeType":"IdentifierPath","referencedDeclaration":1049,"src":"713:14:2"},"referencedDeclaration":1049,"src":"713:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage_ptr","typeString":"struct GreenDAO.dao_uri_struct"}}},"visibility":"public"},{"constant":false,"id":1084,"mutability":"mutable","name":"_goal_uris","nameLocation":"885:10:2","nodeType":"VariableDeclaration","scope":1819,"src":"841:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct)"},"typeName":{"id":1083,"keyType":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"841:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct)"},"valueType":{"id":1082,"nodeType":"UserDefinedTypeName","pathNode":{"id":1081,"name":"goal_uri_struct","nodeType":"IdentifierPath","referencedDeclaration":1054,"src":"860:15:2"},"referencedDeclaration":1054,"src":"860:15:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage_ptr","typeString":"struct GreenDAO.goal_uri_struct"}}},"visibility":"private"},{"constant":false,"functionSelector":"468d0c80","id":1089,"mutability":"mutable","name":"_ideas_uris","nameLocation":"1016:11:2","nodeType":"VariableDeclaration","scope":1819,"src":"972:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)"},"typeName":{"id":1088,"keyType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"972:36:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)"},"valueType":{"id":1087,"nodeType":"UserDefinedTypeName","pathNode":{"id":1086,"name":"ideas_uri_struct","nodeType":"IdentifierPath","referencedDeclaration":1059,"src":"991:16:2"},"referencedDeclaration":1059,"src":"991:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage_ptr","typeString":"struct GreenDAO.ideas_uri_struct"}}},"visibility":"public"},{"constant":false,"functionSelector":"1ba44c4c","id":1094,"mutability":"mutable","name":"all_goal_ideas_votes","nameLocation":"1156:20:2","nodeType":"VariableDeclaration","scope":1819,"src":"1105:71:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)"},"typeName":{"id":1093,"keyType":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1105:43:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)"},"valueType":{"id":1092,"nodeType":"UserDefinedTypeName","pathNode":{"id":1091,"name":"goal_ideas_votes_struct","nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"1124:23:2"},"referencedDeclaration":1066,"src":"1124:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage_ptr","typeString":"struct GreenDAO.goal_ideas_votes_struct"}}},"visibility":"public"},{"body":{"id":1118,"nodeType":"Block","src":"1387:173:2","statements":[{"expression":{"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1103,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1435:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1105,"indexExpression":{"id":1104,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1445:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1435:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1107,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"1472:11:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1108,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"1485:8:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"46616c7365","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1495:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""},"value":"False"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_a2dad57cc42b2b0635f411233812e479f7896335ae3219ac4ef034f5a34c3f0b","typeString":"literal_string \"False\""}],"id":1106,"name":"dao_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1457:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_dao_uri_struct_$1049_storage_ptr_$","typeString":"type(struct GreenDAO.dao_uri_struct storage pointer)"}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1457:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_memory_ptr","typeString":"struct GreenDAO.dao_uri_struct memory"}},"src":"1435:68:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1112,"nodeType":"ExpressionStatement","src":"1435:68:2"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1514:10:2","subExpression":{"id":1113,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1514:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"1514:10:2"},{"expression":{"id":1116,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1544:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1102,"id":1117,"nodeType":"Return","src":"1537:15:2"}]},"functionSelector":"c4c2e364","id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"create_dao","nameLocation":"1277:10:2","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"_dao_wallet","nameLocation":"1302:11:2","nodeType":"VariableDeclaration","scope":1119,"src":"1288:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1095,"name":"string","nodeType":"ElementaryTypeName","src":"1288:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"_dao_uri","nameLocation":"1329:8:2","nodeType":"VariableDeclaration","scope":1119,"src":"1315:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1097,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1287:51:2"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"1373:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1372:9:2"},"scope":1819,"src":"1268:292:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1142,"nodeType":"Block","src":"1694:147:2","statements":[{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1128,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1742:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1130,"indexExpression":{"id":1129,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1742:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"dao_wallet","nodeType":"MemberAccess","referencedDeclaration":1044,"src":"1742:29:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1132,"name":"_dao_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"1774:11:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1742:43:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1134,"nodeType":"ExpressionStatement","src":"1742:43:2"},{"expression":{"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1135,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1796:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1137,"indexExpression":{"id":1136,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"1806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1796:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"1796:26:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1139,"name":"_dao_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"1825:8:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1796:37:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1141,"nodeType":"ExpressionStatement","src":"1796:37:2"}]},"functionSelector":"881de858","id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"set_dao","nameLocation":"1577:7:2","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"_dao_id","nameLocation":"1603:7:2","nodeType":"VariableDeclaration","scope":1143,"src":"1595:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1595:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"_dao_wallet","nameLocation":"1635:11:2","nodeType":"VariableDeclaration","scope":1143,"src":"1621:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1122,"name":"string","nodeType":"ElementaryTypeName","src":"1621:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"_dao_uri","nameLocation":"1671:8:2","nodeType":"VariableDeclaration","scope":1143,"src":"1657:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1124,"name":"string","nodeType":"ElementaryTypeName","src":"1657:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1584:102:2"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"1694:0:2"},"scope":1819,"src":"1568:273:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1183,"nodeType":"Block","src":"1911:240:2","statements":[{"assignments":[1153],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"_StoreInfo","nameLocation":"1966:10:2","nodeType":"VariableDeclaration","scope":1183,"src":"1950:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1151,"name":"string","nodeType":"ElementaryTypeName","src":"1950:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1152,"nodeType":"ArrayTypeName","src":"1950:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1159,"initialValue":{"arguments":[{"id":1157,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"1992:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1979:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1154,"name":"string","nodeType":"ElementaryTypeName","src":"1983:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1155,"nodeType":"ArrayTypeName","src":"1983:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1979:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1950:51:2"},{"body":{"id":1179,"nodeType":"Block","src":"2051:63:2","statements":[{"expression":{"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1170,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2066:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1172,"indexExpression":{"id":1171,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2077:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:13:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1173,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2082:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1175,"indexExpression":{"id":1174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2092:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2082:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"2082:20:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"2066:36:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1178,"nodeType":"ExpressionStatement","src":"2066:36:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2032:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1165,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2036:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2032:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1180,"initializationExpression":{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"i","nameLocation":"2025:1:2","nodeType":"VariableDeclaration","scope":1180,"src":"2017:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1163,"initialValue":{"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2017:13:2"},"loopExpression":{"expression":{"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2046:3:2","subExpression":{"id":1167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2046:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1169,"nodeType":"ExpressionStatement","src":"2046:3:2"},"nodeType":"ForStatement","src":"2012:102:2"},{"expression":{"id":1181,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"2133:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1148,"id":1182,"nodeType":"Return","src":"2126:17:2"}]},"functionSelector":"c04fe978","id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_daos","nameLocation":"1858:12:2","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"1870:2:2"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"1894:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1145,"name":"string","nodeType":"ElementaryTypeName","src":"1894:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1146,"nodeType":"ArrayTypeName","src":"1894:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"1893:17:2"},"scope":1819,"src":"1849:302:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1196,"nodeType":"Block","src":"2231:83:2","statements":[{"expression":{"expression":{"baseExpression":{"id":1191,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"2280:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1193,"indexExpression":{"id":1192,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"2290:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2280:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"id":1194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dao_uri","nodeType":"MemberAccess","referencedDeclaration":1046,"src":"2280:26:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1190,"id":1195,"nodeType":"Return","src":"2273:33:2"}]},"functionSelector":"5d907da1","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"dao_uri","nameLocation":"2170:7:2","nodeType":"FunctionDefinition","parameters":{"id":1187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"_dao_id","nameLocation":"2186:7:2","nodeType":"VariableDeclaration","scope":1197,"src":"2178:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2177:17:2"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2216:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1188,"name":"string","nodeType":"ElementaryTypeName","src":"2216:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2215:15:2"},"scope":1819,"src":"2161:153:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1220,"nodeType":"Block","src":"2428:168:2","statements":[{"expression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1206,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2478:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1208,"indexExpression":{"id":1207,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2489:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2478:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1210,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2518:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1211,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"2527:9:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1209,"name":"goal_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2502:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_uri_struct_$1054_storage_ptr_$","typeString":"type(struct GreenDAO.goal_uri_struct storage pointer)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2502:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_memory_ptr","typeString":"struct GreenDAO.goal_uri_struct memory"}},"src":"2478:59:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1214,"nodeType":"ExpressionStatement","src":"2478:59:2"},{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2548:11:2","subExpression":{"id":1215,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2548:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"2548:11:2"},{"expression":{"id":1218,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2579:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1205,"id":1219,"nodeType":"Return","src":"2572:16:2"}]},"functionSelector":"71085cab","id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal","nameLocation":"2344:11:2","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"_goal_uri","nameLocation":"2370:9:2","nodeType":"VariableDeclaration","scope":1221,"src":"2356:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1198,"name":"string","nodeType":"ElementaryTypeName","src":"2356:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"_dao_id","nameLocation":"2389:7:2","nodeType":"VariableDeclaration","scope":1221,"src":"2381:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2355:42:2"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1221,"src":"2414:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"2414:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2413:9:2"},"scope":1819,"src":"2335:261:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1235,"nodeType":"Block","src":"2672:84:2","statements":[{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1228,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2707:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1230,"indexExpression":{"id":1229,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2718:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2707:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1053,"src":"2707:29:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1232,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2739:9:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2707:41:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1234,"nodeType":"ExpressionStatement","src":"2707:41:2"}]},"functionSelector":"c29595c5","id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"set_goal","nameLocation":"2613:8:2","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"_goal_id","nameLocation":"2630:8:2","nodeType":"VariableDeclaration","scope":1236,"src":"2622:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"_goal_uri","nameLocation":"2654:9:2","nodeType":"VariableDeclaration","scope":1236,"src":"2640:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1224,"name":"string","nodeType":"ElementaryTypeName","src":"2640:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2621:43:2"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[],"src":"2672:0:2"},"scope":1819,"src":"2604:152:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1276,"nodeType":"Block","src":"2827:245:2","statements":[{"assignments":[1246],"declarations":[{"constant":false,"id":1246,"mutability":"mutable","name":"_StoreInfo","nameLocation":"2883:10:2","nodeType":"VariableDeclaration","scope":1276,"src":"2867:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1244,"name":"string","nodeType":"ElementaryTypeName","src":"2867:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1245,"nodeType":"ArrayTypeName","src":"2867:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1252,"initialValue":{"arguments":[{"id":1250,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2909:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2896:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"2900:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1248,"nodeType":"ArrayTypeName","src":"2900:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2896:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2867:52:2"},{"body":{"id":1272,"nodeType":"Block","src":"2970:65:2","statements":[{"expression":{"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1263,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2985:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1265,"indexExpression":{"id":1264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2996:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2985:13:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1266,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3001:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1268,"indexExpression":{"id":1267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"3012:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3001:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1053,"src":"3001:22:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"2985:38:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1271,"nodeType":"ExpressionStatement","src":"2985:38:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2950:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1258,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"2954:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1273,"initializationExpression":{"assignments":[1254],"declarations":[{"constant":false,"id":1254,"mutability":"mutable","name":"i","nameLocation":"2943:1:2","nodeType":"VariableDeclaration","scope":1273,"src":"2935:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2935:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1256,"initialValue":{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2947:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2935:13:2"},"loopExpression":{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2965:3:2","subExpression":{"id":1260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2965:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1262,"nodeType":"ExpressionStatement","src":"2965:3:2"},"nodeType":"ForStatement","src":"2930:105:2"},{"expression":{"id":1274,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"3054:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1241,"id":1275,"nodeType":"Return","src":"3047:17:2"}]},"functionSelector":"29b56f60","id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals","nameLocation":"2773:13:2","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"2786:2:2"},"returnParameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"2810:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1238,"name":"string","nodeType":"ElementaryTypeName","src":"2810:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1239,"nodeType":"ArrayTypeName","src":"2810:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"2809:17:2"},"scope":1819,"src":"2764:308:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1333,"nodeType":"Block","src":"3168:379:2","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"_StoreInfo","nameLocation":"3234:10:2","nodeType":"VariableDeclaration","scope":1333,"src":"3218:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"3218:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1288,"nodeType":"ArrayTypeName","src":"3218:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1295,"initialValue":{"arguments":[{"id":1293,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3260:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3247:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1290,"name":"string","nodeType":"ElementaryTypeName","src":"3251:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1291,"nodeType":"ArrayTypeName","src":"3251:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3247:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3218:52:2"},{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"_store_id","nameLocation":"3289:9:2","nodeType":"VariableDeclaration","scope":1333,"src":"3281:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1298,"nodeType":"VariableDeclarationStatement","src":"3281:17:2"},{"body":{"id":1329,"nodeType":"Block","src":"3349:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1309,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3366:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1311,"indexExpression":{"id":1310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3377:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3366:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"dao_id","nodeType":"MemberAccess","referencedDeclaration":1051,"src":"3366:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1313,"name":"_dao_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"3390:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3366:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"nodeType":"IfStatement","src":"3362:137:2","trueBody":{"id":1327,"nodeType":"Block","src":"3398:101:2","statements":[{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1315,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3413:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1317,"indexExpression":{"id":1316,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3424:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3413:21:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1318,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3437:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1320,"indexExpression":{"id":1319,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3448:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3437:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1053,"src":"3437:22:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"3413:46:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1323,"nodeType":"ExpressionStatement","src":"3413:46:2"},{"expression":{"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3474:11:2","subExpression":{"id":1324,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"3474:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1326,"nodeType":"ExpressionStatement","src":"3474:11:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3329:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1304,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3333:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3329:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"initializationExpression":{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"i","nameLocation":"3322:1:2","nodeType":"VariableDeclaration","scope":1330,"src":"3314:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1302,"initialValue":{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3314:13:2"},"loopExpression":{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3344:3:2","subExpression":{"id":1306,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"3344:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"nodeType":"ExpressionStatement","src":"3344:3:2"},"nodeType":"ForStatement","src":"3309:201:2"},{"expression":{"id":1331,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"3529:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1284,"id":1332,"nodeType":"Return","src":"3522:17:2"}]},"functionSelector":"109ac970","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_goals_by_dao_id","nameLocation":"3089:23:2","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"_dao_id","nameLocation":"3121:7:2","nodeType":"VariableDeclaration","scope":1334,"src":"3113:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3112:17:2"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"3151:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1281,"name":"string","nodeType":"ElementaryTypeName","src":"3151:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1282,"nodeType":"ArrayTypeName","src":"3151:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3150:17:2"},"scope":1819,"src":"3080:467:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1374,"nodeType":"Block","src":"3649:224:2","statements":[{"body":{"id":1370,"nodeType":"Block","src":"3734:111:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1354,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"3767:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1356,"indexExpression":{"id":1355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3778:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3767:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1053,"src":"3767:22:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3761:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1352,"name":"bytes","nodeType":"ElementaryTypeName","src":"3761:5:2","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3761:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1351,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3751:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3751:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1363,"name":"_goal_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3811:9:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3805:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1361,"name":"bytes","nodeType":"ElementaryTypeName","src":"3805:5:2","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3805:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1360,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3795:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3795:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3751:71:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1369,"nodeType":"IfStatement","src":"3747:86:2","trueBody":{"expression":{"id":1367,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3832:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1340,"id":1368,"nodeType":"Return","src":"3824:9:2"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3714:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1346,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3718:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3714:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"initializationExpression":{"assignments":[1342],"declarations":[{"constant":false,"id":1342,"mutability":"mutable","name":"i","nameLocation":"3707:1:2","nodeType":"VariableDeclaration","scope":1371,"src":"3699:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1344,"initialValue":{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3711:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3699:13:2"},"loopExpression":{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3729:3:2","subExpression":{"id":1348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3729:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"nodeType":"ExpressionStatement","src":"3729:3:2"},"nodeType":"ForStatement","src":"3694:151:2"},{"expression":{"hexValue":"30","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1340,"id":1373,"nodeType":"Return","src":"3857:8:2"}]},"functionSelector":"1e9ac9f5","id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_by_goal_uri","nameLocation":"3570:23:2","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"_goal_uri","nameLocation":"3608:9:2","nodeType":"VariableDeclaration","scope":1375,"src":"3594:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1335,"name":"string","nodeType":"ElementaryTypeName","src":"3594:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3593:25:2"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"3640:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3639:9:2"},"scope":1819,"src":"3561:312:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1387,"nodeType":"Block","src":"3953:87:2","statements":[{"expression":{"expression":{"baseExpression":{"id":1382,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"4003:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1384,"indexExpression":{"id":1383,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"4014:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4003:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"id":1385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_uri","nodeType":"MemberAccess","referencedDeclaration":1053,"src":"4003:29:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1381,"id":1386,"nodeType":"Return","src":"3996:36:2"}]},"functionSelector":"e32acc1a","id":1388,"implemented":true,"kind":"function","modifiers":[],"name":"goal_uri","nameLocation":"3890:8:2","nodeType":"FunctionDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"_goal_id","nameLocation":"3907:8:2","nodeType":"VariableDeclaration","scope":1388,"src":"3899:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3898:18:2"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"3938:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1379,"name":"string","nodeType":"ElementaryTypeName","src":"3938:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3937:15:2"},"scope":1819,"src":"3881:159:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1411,"nodeType":"Block","src":"4159:177:2","statements":[{"expression":{"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1397,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4211:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1399,"indexExpression":{"id":1398,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4223:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4211:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1401,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"4254:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1402,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"4264:10:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1400,"name":"ideas_uri_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4237:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ideas_uri_struct_$1059_storage_ptr_$","typeString":"type(struct GreenDAO.ideas_uri_struct storage pointer)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4237:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_memory_ptr","typeString":"struct GreenDAO.ideas_uri_struct memory"}},"src":"4211:64:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1405,"nodeType":"ExpressionStatement","src":"4211:64:2"},{"expression":{"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4286:12:2","subExpression":{"id":1406,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4286:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"nodeType":"ExpressionStatement","src":"4286:12:2"},{"expression":{"id":1409,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4318:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1396,"id":1410,"nodeType":"Return","src":"4311:17:2"}]},"functionSelector":"2d9cb1ab","id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"create_ideas","nameLocation":"4072:12:2","nodeType":"FunctionDefinition","parameters":{"id":1393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"_ideas_uri","nameLocation":"4099:10:2","nodeType":"VariableDeclaration","scope":1412,"src":"4085:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1389,"name":"string","nodeType":"ElementaryTypeName","src":"4085:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"_goal_id","nameLocation":"4119:8:2","nodeType":"VariableDeclaration","scope":1412,"src":"4111:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4111:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4084:44:2"},"returnParameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1412,"src":"4145:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"4145:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4144:9:2"},"scope":1819,"src":"4063:273:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1426,"nodeType":"Block","src":"4415:89:2","statements":[{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1419,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4451:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1421,"indexExpression":{"id":1420,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"4463:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4451:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"4451:32:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1423,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"4486:10:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4451:45:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1425,"nodeType":"ExpressionStatement","src":"4451:45:2"}]},"functionSelector":"c04e7430","id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"set_ideas","nameLocation":"4353:9:2","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"_ideas_id","nameLocation":"4371:9:2","nodeType":"VariableDeclaration","scope":1427,"src":"4363:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"4363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"_ideas_uri","nameLocation":"4396:10:2","nodeType":"VariableDeclaration","scope":1427,"src":"4382:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1415,"name":"string","nodeType":"ElementaryTypeName","src":"4382:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4362:45:2"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"4415:0:2"},"scope":1819,"src":"4344:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1467,"nodeType":"Block","src":"4575:249:2","statements":[{"assignments":[1437],"declarations":[{"constant":false,"id":1437,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4631:10:2","nodeType":"VariableDeclaration","scope":1467,"src":"4615:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1435,"name":"string","nodeType":"ElementaryTypeName","src":"4615:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1436,"nodeType":"ArrayTypeName","src":"4615:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1443,"initialValue":{"arguments":[{"id":1441,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4657:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4644:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"4648:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1439,"nodeType":"ArrayTypeName","src":"4648:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4644:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4615:53:2"},{"body":{"id":1463,"nodeType":"Block","src":"4720:67:2","statements":[{"expression":{"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1454,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4735:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1456,"indexExpression":{"id":1455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"4746:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4735:13:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1457,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"4751:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1459,"indexExpression":{"id":1458,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"4763:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4751:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"4751:24:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"4735:40:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1462,"nodeType":"ExpressionStatement","src":"4735:40:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"4699:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1449,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"4703:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4699:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1464,"initializationExpression":{"assignments":[1445],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"i","nameLocation":"4692:1:2","nodeType":"VariableDeclaration","scope":1464,"src":"4684:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1447,"initialValue":{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4684:13:2"},"loopExpression":{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4715:3:2","subExpression":{"id":1451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"4715:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ExpressionStatement","src":"4715:3:2"},"nodeType":"ForStatement","src":"4679:108:2"},{"expression":{"id":1465,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4806:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1432,"id":1466,"nodeType":"Return","src":"4799:17:2"}]},"functionSelector":"97ee7606","id":1468,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas","nameLocation":"4521:13:2","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[],"src":"4534:2:2"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1468,"src":"4558:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1429,"name":"string","nodeType":"ElementaryTypeName","src":"4558:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1430,"nodeType":"ArrayTypeName","src":"4558:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4557:17:2"},"scope":1819,"src":"4512:312:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1523,"nodeType":"Block","src":"4922:381:2","statements":[{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"mutability":"mutable","name":"_StoreInfo","nameLocation":"4989:10:2","nodeType":"VariableDeclaration","scope":1523,"src":"4973:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"4973:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1479,"nodeType":"ArrayTypeName","src":"4973:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1486,"initialValue":{"arguments":[{"id":1484,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5015:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5002:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1481,"name":"string","nodeType":"ElementaryTypeName","src":"5006:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1482,"nodeType":"ArrayTypeName","src":"5006:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5002:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4973:53:2"},{"assignments":[1488],"declarations":[{"constant":false,"id":1488,"mutability":"mutable","name":"_store_id","nameLocation":"5053:9:2","nodeType":"VariableDeclaration","scope":1523,"src":"5045:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1489,"nodeType":"VariableDeclarationStatement","src":"5045:17:2"},{"body":{"id":1519,"nodeType":"Block","src":"5114:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1500,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5131:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1502,"indexExpression":{"id":1501,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5143:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5131:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"5131:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1504,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"5157:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1515,"nodeType":"IfStatement","src":"5127:101:2","trueBody":{"expression":{"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1506,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"5180:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1508,"indexExpression":{"id":1507,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"5191:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5180:21:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1509,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5204:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1511,"indexExpression":{"id":1510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5216:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5204:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"5204:24:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"5180:48:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1514,"nodeType":"ExpressionStatement","src":"5180:48:2"}},{"expression":{"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5243:11:2","subExpression":{"id":1516,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"5243:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1518,"nodeType":"ExpressionStatement","src":"5243:11:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5093:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1495,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5097:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5093:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1520,"initializationExpression":{"assignments":[1491],"declarations":[{"constant":false,"id":1491,"mutability":"mutable","name":"i","nameLocation":"5086:1:2","nodeType":"VariableDeclaration","scope":1520,"src":"5078:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"initialValue":{"hexValue":"30","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5090:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5078:13:2"},"loopExpression":{"expression":{"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5109:3:2","subExpression":{"id":1497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5109:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1499,"nodeType":"ExpressionStatement","src":"5109:3:2"},"nodeType":"ForStatement","src":"5073:193:2"},{"expression":{"id":1521,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"5285:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1475,"id":1522,"nodeType":"Return","src":"5278:17:2"}]},"functionSelector":"131d44f2","id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"get_all_ideas_by_goal_id","nameLocation":"4841:24:2","nodeType":"FunctionDefinition","parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"_goal_id","nameLocation":"4874:8:2","nodeType":"VariableDeclaration","scope":1524,"src":"4866:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4866:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4865:18:2"},"returnParameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"4905:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1472,"name":"string","nodeType":"ElementaryTypeName","src":"4905:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1473,"nodeType":"ArrayTypeName","src":"4905:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4904:17:2"},"scope":1819,"src":"4832:471:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1564,"nodeType":"Block","src":"5408:229:2","statements":[{"body":{"id":1560,"nodeType":"Block","src":"5495:114:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1544,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5528:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1546,"indexExpression":{"id":1545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5540:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5528:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1547,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"5528:24:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5522:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1542,"name":"bytes","nodeType":"ElementaryTypeName","src":"5522:5:2","typeDescriptions":{}}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5522:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1541,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5512:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5512:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1553,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"5574:10:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1551,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:2","typeDescriptions":{}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5568:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1550,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5558:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5558:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5512:74:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1559,"nodeType":"IfStatement","src":"5508:89:2","trueBody":{"expression":{"id":1557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5596:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1530,"id":1558,"nodeType":"Return","src":"5588:9:2"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1535,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5474:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1536,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5478:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5474:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1561,"initializationExpression":{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"i","nameLocation":"5467:1:2","nodeType":"VariableDeclaration","scope":1561,"src":"5459:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1534,"initialValue":{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5471:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5459:13:2"},"loopExpression":{"expression":{"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5490:3:2","subExpression":{"id":1538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"5490:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1540,"nodeType":"ExpressionStatement","src":"5490:3:2"},"nodeType":"ForStatement","src":"5454:155:2"},{"expression":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5628:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1530,"id":1563,"nodeType":"Return","src":"5621:8:2"}]},"functionSelector":"a1ca9178","id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_id_by_ideas_uri","nameLocation":"5326:25:2","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"_ideas_uri","nameLocation":"5366:10:2","nodeType":"VariableDeclaration","scope":1565,"src":"5352:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1525,"name":"string","nodeType":"ElementaryTypeName","src":"5352:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5351:26:2"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"5399:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"5399:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5398:9:2"},"scope":1819,"src":"5317:320:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1608,"nodeType":"Block","src":"5737:235:2","statements":[{"body":{"id":1604,"nodeType":"Block","src":"5818:129:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":1585,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5848:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1587,"indexExpression":{"id":1586,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"5860:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5848:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"5848:24:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5842:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1583,"name":"bytes","nodeType":"ElementaryTypeName","src":"5842:5:2","typeDescriptions":{}}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5842:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":1582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5832:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5832:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1594,"name":"_ideas_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5894:10:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5888:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1592,"name":"bytes","nodeType":"ElementaryTypeName","src":"5888:5:2","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5888:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1591,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5878:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5878:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5832:74:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1603,"nodeType":"IfStatement","src":"5828:110:2","trueBody":{"expression":{"expression":{"baseExpression":{"id":1598,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"5916:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1600,"indexExpression":{"id":1599,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"5928:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5916:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1056,"src":"5916:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1571,"id":1602,"nodeType":"Return","src":"5908:30:2"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"5797:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1577,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"5801:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5797:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1605,"initializationExpression":{"assignments":[1573],"declarations":[{"constant":false,"id":1573,"mutability":"mutable","name":"i","nameLocation":"5790:1:2","nodeType":"VariableDeclaration","scope":1605,"src":"5782:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"5782:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1575,"initialValue":{"hexValue":"30","id":1574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5794:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5782:13:2"},"loopExpression":{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5813:3:2","subExpression":{"id":1579,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"5813:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1581,"nodeType":"ExpressionStatement","src":"5813:3:2"},"nodeType":"ForStatement","src":"5777:170:2"},{"expression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5963:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1571,"id":1607,"nodeType":"Return","src":"5956:8:2"}]},"functionSelector":"aa4cdf2a","id":1609,"implemented":true,"kind":"function","modifiers":[],"name":"get_goal_id_from_ideas_uri","nameLocation":"5654:26:2","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"_ideas_uri","nameLocation":"5695:10:2","nodeType":"VariableDeclaration","scope":1609,"src":"5681:24:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1566,"name":"string","nodeType":"ElementaryTypeName","src":"5681:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5680:26:2"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1609,"src":"5728:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5728:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5727:9:2"},"scope":1819,"src":"5645:327:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1621,"nodeType":"Block","src":"6056:91:2","statements":[{"expression":{"expression":{"baseExpression":{"id":1616,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"6107:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1618,"indexExpression":{"id":1617,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6119:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6107:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"id":1619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ideas_uri","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"6107:32:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1615,"id":1620,"nodeType":"Return","src":"6100:39:2"}]},"functionSelector":"8d3d2595","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"ideas_uri","nameLocation":"5991:9:2","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"_ideas_id","nameLocation":"6009:9:2","nodeType":"VariableDeclaration","scope":1622,"src":"6001:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"6001:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6000:19:2"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"6041:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1613,"name":"string","nodeType":"ElementaryTypeName","src":"6041:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6040:15:2"},"scope":1819,"src":"5982:165:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1648,"nodeType":"Block","src":"6291:224:2","statements":[{"expression":{"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1633,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6352:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1635,"indexExpression":{"id":1634,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6373:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6352:37:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1637,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"6416:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1638,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"6426:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1639,"name":"_wallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6436:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1636,"name":"goal_ideas_votes_struct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"6392:23:2","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_goal_ideas_votes_struct_$1066_storage_ptr_$","typeString":"type(struct GreenDAO.goal_ideas_votes_struct storage pointer)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6392:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_memory_ptr","typeString":"struct GreenDAO.goal_ideas_votes_struct memory"}},"src":"6352:92:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1642,"nodeType":"ExpressionStatement","src":"6352:92:2"},{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6455:17:2","subExpression":{"id":1643,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6455:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1645,"nodeType":"ExpressionStatement","src":"6455:17:2"},{"expression":{"id":1646,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6492:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1632,"id":1647,"nodeType":"Return","src":"6485:22:2"}]},"functionSelector":"82fcc732","id":1649,"implemented":true,"kind":"function","modifiers":[],"name":"create_goal_ideas_vote","nameLocation":"6179:22:2","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"_goal_id","nameLocation":"6210:8:2","nodeType":"VariableDeclaration","scope":1649,"src":"6202:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6202:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"_ideas_id","nameLocation":"6228:9:2","nodeType":"VariableDeclaration","scope":1649,"src":"6220:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6220:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"_wallet","nameLocation":"6252:7:2","nodeType":"VariableDeclaration","scope":1649,"src":"6238:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1627,"name":"string","nodeType":"ElementaryTypeName","src":"6238:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6201:59:2"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1649,"src":"6277:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:2"},"scope":1819,"src":"6170:345:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1713,"nodeType":"Block","src":"6639:448:2","statements":[{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"_StoreInfo","nameLocation":"6708:10:2","nodeType":"VariableDeclaration","scope":1713,"src":"6692:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1661,"name":"string","nodeType":"ElementaryTypeName","src":"6692:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1662,"nodeType":"ArrayTypeName","src":"6692:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":1669,"initialValue":{"arguments":[{"id":1667,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6734:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6721:12:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":1664,"name":"string","nodeType":"ElementaryTypeName","src":"6725:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1665,"nodeType":"ArrayTypeName","src":"6725:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6721:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6692:58:2"},{"assignments":[1671],"declarations":[{"constant":false,"id":1671,"mutability":"mutable","name":"_store_id","nameLocation":"6769:9:2","nodeType":"VariableDeclaration","scope":1713,"src":"6761:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6761:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1672,"nodeType":"VariableDeclarationStatement","src":"6761:17:2"},{"body":{"id":1709,"nodeType":"Block","src":"6835:217:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1683,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6852:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1685,"indexExpression":{"id":1684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6873:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6852:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"goal_id","nodeType":"MemberAccess","referencedDeclaration":1061,"src":"6852:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1687,"name":"_goal_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"6887:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1689,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6899:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1691,"indexExpression":{"id":1690,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6920:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6899:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"ideas_id","nodeType":"MemberAccess","referencedDeclaration":1063,"src":"6899:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1693,"name":"_ideas_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"6935:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6899:45:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6852:92:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1705,"nodeType":"IfStatement","src":"6848:166:2","trueBody":{"expression":{"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1696,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"6960:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":1698,"indexExpression":{"id":1697,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"6971:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6960:21:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1699,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6984:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1701,"indexExpression":{"id":1700,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"7005:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6984:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"wallet","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"6984:30:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"6960:54:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":1704,"nodeType":"ExpressionStatement","src":"6960:54:2"}},{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7029:11:2","subExpression":{"id":1706,"name":"_store_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"7029:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"7029:11:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6809:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1678,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"6813:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"initializationExpression":{"assignments":[1674],"declarations":[{"constant":false,"id":1674,"mutability":"mutable","name":"i","nameLocation":"6802:1:2","nodeType":"VariableDeclaration","scope":1710,"src":"6794:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"6794:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1676,"initialValue":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6806:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6794:13:2"},"loopExpression":{"expression":{"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6830:3:2","subExpression":{"id":1680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6830:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1682,"nodeType":"ExpressionStatement","src":"6830:3:2"},"nodeType":"ForStatement","src":"6789:263:2"},{"expression":{"id":1711,"name":"_StoreInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7069:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1658,"id":1712,"nodeType":"Return","src":"7062:17:2"}]},"functionSelector":"4be7adb5","id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"get_ideas_votes_from_goal","nameLocation":"6533:25:2","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"_goal_id","nameLocation":"6567:8:2","nodeType":"VariableDeclaration","scope":1714,"src":"6559:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6559:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"_ideas_id","nameLocation":"6585:9:2","nodeType":"VariableDeclaration","scope":1714,"src":"6577:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6558:37:2"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"6617:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1655,"name":"string","nodeType":"ElementaryTypeName","src":"6617:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1656,"nodeType":"ArrayTypeName","src":"6617:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"6616:17:2"},"scope":1819,"src":"6524:563:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1797,"nodeType":"Block","src":"7123:434:2","statements":[{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1717,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7132:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7143:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7132:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1720,"nodeType":"ExpressionStatement","src":"7132:12:2"},{"expression":{"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1721,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7153:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7165:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7153:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"nodeType":"ExpressionStatement","src":"7153:13:2"},{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1725,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"7175:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7188:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7175:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ExpressionStatement","src":"7175:14:2"},{"expression":{"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1729,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"7198:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7216:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7198:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1732,"nodeType":"ExpressionStatement","src":"7198:19:2"},{"body":{"expression":{"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7276:19:2","subExpression":{"baseExpression":{"id":1743,"name":"_dao_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"7283:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_dao_uri_struct_$1049_storage_$","typeString":"mapping(uint256 => struct GreenDAO.dao_uri_struct storage ref)"}},"id":1745,"indexExpression":{"id":1744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"7293:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7283:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_dao_uri_struct_$1049_storage","typeString":"struct GreenDAO.dao_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"7276:19:2"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"7246:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1738,"name":"_dao_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"7250:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7246:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1748,"initializationExpression":{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"i","nameLocation":"7239:1:2","nodeType":"VariableDeclaration","scope":1748,"src":"7231:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7231:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"hexValue":"30","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7243:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7231:13:2"},"loopExpression":{"expression":{"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7260:3:2","subExpression":{"id":1740,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"7260:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1742,"nodeType":"ExpressionStatement","src":"7260:3:2"},"nodeType":"ForStatement","src":"7226:69:2"},{"body":{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7354:20:2","subExpression":{"baseExpression":{"id":1759,"name":"_goal_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"7361:10:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_uri_struct_$1054_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_uri_struct storage ref)"}},"id":1761,"indexExpression":{"id":1760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7372:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7361:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_uri_struct_$1054_storage","typeString":"struct GreenDAO.goal_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1763,"nodeType":"ExpressionStatement","src":"7354:20:2"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7324:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1754,"name":"_goal_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"7328:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7324:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1764,"initializationExpression":{"assignments":[1750],"declarations":[{"constant":false,"id":1750,"mutability":"mutable","name":"i","nameLocation":"7317:1:2","nodeType":"VariableDeclaration","scope":1764,"src":"7309:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"7309:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1752,"initialValue":{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7309:13:2"},"loopExpression":{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7339:3:2","subExpression":{"id":1756,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"7339:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"nodeType":"ExpressionStatement","src":"7339:3:2"},"nodeType":"ForStatement","src":"7304:70:2"},{"body":{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7433:21:2","subExpression":{"baseExpression":{"id":1775,"name":"_ideas_uris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"7440:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ideas_uri_struct_$1059_storage_$","typeString":"mapping(uint256 => struct GreenDAO.ideas_uri_struct storage ref)"}},"id":1777,"indexExpression":{"id":1776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"7452:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7440:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ideas_uri_struct_$1059_storage","typeString":"struct GreenDAO.ideas_uri_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1779,"nodeType":"ExpressionStatement","src":"7433:21:2"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"7403:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1770,"name":"_ideas_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"7407:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7403:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1780,"initializationExpression":{"assignments":[1766],"declarations":[{"constant":false,"id":1766,"mutability":"mutable","name":"i","nameLocation":"7396:1:2","nodeType":"VariableDeclaration","scope":1780,"src":"7388:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"7388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1768,"initialValue":{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7400:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7388:13:2"},"loopExpression":{"expression":{"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7419:3:2","subExpression":{"id":1772,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"7419:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"nodeType":"ExpressionStatement","src":"7419:3:2"},"nodeType":"ForStatement","src":"7383:71:2"},{"body":{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7513:30:2","subExpression":{"baseExpression":{"id":1791,"name":"all_goal_ideas_votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"7520:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_goal_ideas_votes_struct_$1066_storage_$","typeString":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct storage ref)"}},"id":1793,"indexExpression":{"id":1792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"7541:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7520:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_goal_ideas_votes_struct_$1066_storage","typeString":"struct GreenDAO.goal_ideas_votes_struct storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"7513:30:2"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"7483:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1786,"name":"_ideas_vote_ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"7487:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7483:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1796,"initializationExpression":{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"i","nameLocation":"7476:1:2","nodeType":"VariableDeclaration","scope":1796,"src":"7468:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"7468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1784,"initialValue":{"hexValue":"30","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7480:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7468:13:2"},"loopExpression":{"expression":{"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7504:3:2","subExpression":{"id":1788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"7504:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1790,"nodeType":"ExpressionStatement","src":"7504:3:2"},"nodeType":"ForStatement","src":"7463:80:2"}]},"functionSelector":"b16060a6","id":1798,"implemented":true,"kind":"function","modifiers":[],"name":"reset_all","nameLocation":"7104:9:2","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[],"src":"7113:2:2"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[],"src":"7123:0:2"},"scope":1819,"src":"7095:462:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1817,"nodeType":"Block","src":"7627:146:2","statements":[{"expression":{"arguments":[{"hexValue":"77616c6c6574202331","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7649:11:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a3a7df7d02a6ba1cd87390d014c72c1ecc2f1d12a00cab9e5d4b6dc25bd2bb2","typeString":"literal_string \"wallet #1\""},"value":"wallet #1"},{"hexValue":"44414f206d65746164617461202331","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7662:17:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e163948ede0d9dfb0f08a3cb18098e897263fce7b140ccc433cd68d4c2fd3b9","typeString":"literal_string \"DAO metadata #1\""},"value":"DAO metadata #1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6a3a7df7d02a6ba1cd87390d014c72c1ecc2f1d12a00cab9e5d4b6dc25bd2bb2","typeString":"literal_string \"wallet #1\""},{"typeIdentifier":"t_stringliteral_0e163948ede0d9dfb0f08a3cb18098e897263fce7b140ccc433cd68d4c2fd3b9","typeString":"literal_string \"DAO metadata #1\""}],"id":1804,"name":"create_dao","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"7638:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,string memory) returns (uint256)"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7638:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1808,"nodeType":"ExpressionStatement","src":"7638:42:2"},{"expression":{"arguments":[{"hexValue":"77616c6c6574202332","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7702:11:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_e89997d0e0d8ce25d10ed1bbd0ac042ed8e11d041f7421c65f93fae83cd2147e","typeString":"literal_string \"wallet #2\""},"value":"wallet #2"},{"hexValue":"44414f206d65746164617461202332","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7715:17:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd2f7c8a94eabedd956b1595a9c293f9277fe82f9c87afe80ff86618485fbfd2","typeString":"literal_string \"DAO metadata #2\""},"value":"DAO metadata #2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e89997d0e0d8ce25d10ed1bbd0ac042ed8e11d041f7421c65f93fae83cd2147e","typeString":"literal_string \"wallet #2\""},{"typeIdentifier":"t_stringliteral_fd2f7c8a94eabedd956b1595a9c293f9277fe82f9c87afe80ff86618485fbfd2","typeString":"literal_string \"DAO metadata #2\""}],"id":1809,"name":"create_dao","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"7691:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (string memory,string memory) returns (uint256)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7691:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1813,"nodeType":"ExpressionStatement","src":"7691:42:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1814,"name":"get_all_daos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"7751:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function () view returns (string memory[] memory)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7751:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"functionReturnParameters":1803,"id":1816,"nodeType":"Return","src":"7744:21:2"}]},"functionSelector":"4162169f","id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"dao","nameLocation":"7588:3:2","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[],"src":"7591:2:2"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"7610:15:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"7610:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1801,"nodeType":"ArrayTypeName","src":"7610:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7609:17:2"},"scope":1819,"src":"7579:194:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1820,"src":"113:7663:2","usedErrors":[]}],"src":"33:7745:2"},"id":2}},"contracts":{"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d644813c2310e99d6a56d1b360dcc7ddb5e1895031f60e8bfce4e329a513162064736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 DIFFICULTY DUP2 EXTCODECOPY 0x23 LT 0xE9 SWAP14 PUSH11 0x56D1B360DCC7DDB5E18950 BALANCE 0xF6 0xE DUP12 0xFC 0xE4 0xE3 0x29 0xA5 SGT AND KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"188:2065:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d644813c2310e99d6a56d1b360dcc7ddb5e1895031f60e8bfce4e329a513162064736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 DIFFICULTY DUP2 EXTCODECOPY 0x23 LT 0xE9 SWAP14 PUSH11 0x56D1B360DCC7DDB5E18950 BALANCE 0xF6 0xE DUP12 0xFC 0xE4 0xE3 0x29 0xA5 SGT AND KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"188:2065:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d44d8ceabcdb899b9dbfff3f46c285a15e8a6757fdc31f8468ab564f24bfc0864736f6c63430008060033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE DIFFICULTY 0xD8 0xCE 0xAB 0xCD 0xB8 SWAP10 0xB9 0xDB SELFDESTRUCT RETURN DELEGATECALL PUSH13 0x285A15E8A6757FDC31F8468AB5 PUSH5 0xF24BFC0864 PUSH20 0x6F6C634300080600330000000000000000000000 ","sourceMap":"202:12302:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d44d8ceabcdb899b9dbfff3f46c285a15e8a6757fdc31f8468ab564f24bfc0864736f6c63430008060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE DIFFICULTY 0xD8 0xCE 0xAB 0xCD 0xB8 SWAP10 0xB9 0xDB SELFDESTRUCT RETURN DELEGATECALL PUSH13 0x285A15E8A6757FDC31F8468AB5 PUSH5 0xF24BFC0864 PUSH20 0x6F6C634300080600330000000000000000000000 ","sourceMap":"202:12302:1:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GreenDAO.sol":{"GreenDAO":{"abi":[{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_dao_uris","outputs":[{"internalType":"string","name":"dao_wallet","type":"string"},{"internalType":"string","name":"dao_uri","type":"string"},{"internalType":"string","name":"finished","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_ideas_uris","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"string","name":"ideas_uri","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"all_goal_ideas_votes","outputs":[{"internalType":"uint256","name":"goal_id","type":"uint256"},{"internalType":"uint256","name":"ideas_id","type":"uint256"},{"internalType":"string","name":"wallet","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"create_dao","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"},{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"create_goal","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_wallet","type":"string"}],"name":"create_goal_ideas_vote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"},{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"create_ideas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dao","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"dao_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_daos","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_goals","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"}],"name":"get_all_goals_by_dao_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_all_ideas","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"get_all_ideas_by_goal_id","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"get_goal_id_by_goal_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_goal_id_from_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"get_ideas_id_by_ideas_uri","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"get_ideas_votes_from_goal","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"}],"name":"goal_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"}],"name":"ideas_uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reset_all","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_dao_id","type":"uint256"},{"internalType":"string","name":"_dao_wallet","type":"string"},{"internalType":"string","name":"_dao_uri","type":"string"}],"name":"set_dao","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_goal_id","type":"uint256"},{"internalType":"string","name":"_goal_uri","type":"string"}],"name":"set_goal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ideas_id","type":"uint256"},{"internalType":"string","name":"_ideas_uri","type":"string"}],"name":"set_ideas","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061236e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806382fcc732116100c3578063b16060a61161007c578063b16060a614610478578063c04e743014610482578063c04fe9781461049e578063c29595c5146104bc578063c4c2e364146104d8578063e32acc1a1461050857610158565b806382fcc7321461037e578063881de858146103ae5780638d3d2595146103ca57806397ee7606146103fa578063a1ca917814610418578063aa4cdf2a1461044857610158565b80632d9cb1ab116101155780632d9cb1ab1461026f5780634162169f1461029f578063468d0c80146102bd5780634be7adb5146102ee5780635d907da11461031e57806371085cab1461034e57610158565b8063109ac9701461015d578063131d44f21461018d5780631ba44c4c146101bd5780631e9ac9f5146101ef57806327a568b91461021f57806329b56f6014610251575b600080fd5b61017760048036038101906101729190611bf0565b610538565b6040516101849190611f53565b60405180910390f35b6101a760048036038101906101a29190611bf0565b6106a8565b6040516101b49190611f53565b60405180910390f35b6101d760048036038101906101d29190611bf0565b610818565b6040516101e69392919061202e565b60405180910390f35b61020960048036038101906102049190611ad3565b6108ca565b6040516102169190611fe3565b60405180910390f35b61023960048036038101906102349190611bf0565b61093c565b60405161024893929190611f97565b60405180910390f35b610259610afe565b6040516102669190611f53565b60405180910390f35b61028960048036038101906102849190611b94565b610c39565b6040516102969190611fe3565b60405180910390f35b6102a7610cb2565b6040516102b49190611f53565b60405180910390f35b6102d760048036038101906102d29190611bf0565b610dab565b6040516102e5929190611ffe565b60405180910390f35b61030860048036038101906103039190611d04565b610e57565b6040516103159190611f53565b60405180910390f35b61033860048036038101906103339190611bf0565b610fe9565b6040516103459190611f75565b60405180910390f35b61036860048036038101906103639190611b94565b611091565b6040516103759190611fe3565b60405180910390f35b61039860048036038101906103939190611d44565b61110a565b6040516103a59190611fe3565b60405180910390f35b6103c860048036038101906103c39190611c79565b611194565b005b6103e460048036038101906103df9190611bf0565b6111ef565b6040516103f19190611f75565b60405180910390f35b610402611297565b60405161040f9190611f53565b60405180910390f35b610432600480360381019061042d9190611ad3565b6113d2565b60405161043f9190611fe3565b60405180910390f35b610462600480360381019061045d9190611ad3565b611444565b60405161046f9190611fe3565b60405180910390f35b6104806114cc565b005b61049c60048036038101906104979190611c1d565b611649565b005b6104a6611678565b6040516104b39190611f53565b60405180910390f35b6104d660048036038101906104d19190611c1d565b6117b2565b005b6104f260048036038101906104ed9190611b1c565b6117e1565b6040516104ff9190611fe3565b60405180910390f35b610522600480360381019061051d9190611bf0565b6118c3565b60405161052f9190611f75565b60405180910390f35b6060600060015467ffffffffffffffff811115610558576105576122cd565b5b60405190808252806020026020018201604052801561058b57816020015b60608152602001906001900390816105765790505b509050600080600090505b60015481101561069d57846005600083815260200190815260200160002060000154141561068a576005600082815260200190815260200160002060010180546105df90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461060b90612194565b80156106585780601f1061062d57610100808354040283529160200191610658565b820191906000526020600020905b81548152906001019060200180831161063b57829003601f168201915b50505050508383815181106106705761066f61229e565b5b60200260200101819052508180610686906121f7565b9250505b8080610695906121f7565b915050610596565b508192505050919050565b6060600060025467ffffffffffffffff8111156106c8576106c76122cd565b5b6040519080825280602002602001820160405280156106fb57816020015b60608152602001906001900390816106e65790505b509050600080600090505b60025481101561080d5784600660008381526020019081526020016000206000015414156107ec5760066000828152602001908152602001600020600101805461074f90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461077b90612194565b80156107c85780601f1061079d576101008083540402835291602001916107c8565b820191906000526020600020905b8154815290600101906020018083116107ab57829003601f168201915b50505050508383815181106107e0576107df61229e565b5b60200260200101819052505b81806107f7906121f7565b9250508080610805906121f7565b915050610706565b508192505050919050565b600760205280600052604060002060009150905080600001549080600101549080600201805461084790612194565b80601f016020809104026020016040519081016040528092919081815260200182805461087390612194565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b5050505050905083565b600080600090505b600154811015610931578280519060200120600560008381526020019081526020016000206001016040516109079190611f3c565b6040518091039020141561091e5780915050610937565b8080610929906121f7565b9150506108d2565b50600090505b919050565b600460205280600052604060002060009150905080600001805461095f90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461098b90612194565b80156109d85780601f106109ad576101008083540402835291602001916109d8565b820191906000526020600020905b8154815290600101906020018083116109bb57829003601f168201915b5050505050908060010180546109ed90612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1990612194565b8015610a665780601f10610a3b57610100808354040283529160200191610a66565b820191906000526020600020905b815481529060010190602001808311610a4957829003601f168201915b505050505090806002018054610a7b90612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa790612194565b8015610af45780601f10610ac957610100808354040283529160200191610af4565b820191906000526020600020905b815481529060010190602001808311610ad757829003601f168201915b5050505050905083565b6060600060015467ffffffffffffffff811115610b1e57610b1d6122cd565b5b604051908082528060200260200182016040528015610b5157816020015b6060815260200190600190039081610b3c5790505b50905060005b600154811015610c3157600560008281526020019081526020016000206001018054610b8290612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610bae90612194565b8015610bfb5780601f10610bd057610100808354040283529160200191610bfb565b820191906000526020600020905b815481529060010190602001808311610bde57829003601f168201915b5050505050828281518110610c1357610c1261229e565b5b60200260200101819052508080610c29906121f7565b915050610b57565b508091505090565b6000604051806040016040528083815260200184815250600660006002548152602001908152602001600020600082015181600001556020820151816001019080519060200190610c8b92919061196b565b5090505060026000815480929190610ca2906121f7565b9190505550600254905092915050565b6060610d286040518060400160405280600981526020017f77616c6c657420233100000000000000000000000000000000000000000000008152506040518060400160405280600f81526020017f44414f206d6574616461746120233100000000000000000000000000000000008152506117e1565b50610d9d6040518060400160405280600981526020017f77616c6c657420233200000000000000000000000000000000000000000000008152506040518060400160405280600f81526020017f44414f206d6574616461746120233200000000000000000000000000000000008152506117e1565b50610da6611678565b905090565b6006602052806000526040600020600091509050806000015490806001018054610dd490612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0090612194565b8015610e4d5780601f10610e2257610100808354040283529160200191610e4d565b820191906000526020600020905b815481529060010190602001808311610e3057829003601f168201915b5050505050905082565b6060600060035467ffffffffffffffff811115610e7757610e766122cd565b5b604051908082528060200260200182016040528015610eaa57816020015b6060815260200190600190039081610e955790505b509050600080600090505b600354811015610fdd57856007600083815260200190815260200160002060000154148015610ef95750846007600083815260200190815260200160002060010154145b15610fbc57600760008281526020019081526020016000206002018054610f1f90612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4b90612194565b8015610f985780601f10610f6d57610100808354040283529160200191610f98565b820191906000526020600020905b815481529060010190602001808311610f7b57829003601f168201915b5050505050838381518110610fb057610faf61229e565b5b60200260200101819052505b8180610fc7906121f7565b9250508080610fd5906121f7565b915050610eb5565b50819250505092915050565b606060046000838152602001908152602001600020600101805461100c90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461103890612194565b80156110855780601f1061105a57610100808354040283529160200191611085565b820191906000526020600020905b81548152906001019060200180831161106857829003601f168201915b50505050509050919050565b60006040518060400160405280838152602001848152506005600060015481526020019081526020016000206000820151816000015560208201518160010190805190602001906110e392919061196b565b50905050600160008154809291906110fa906121f7565b9190505550600154905092915050565b60006040518060600160405280858152602001848152602001838152506007600060035481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908051906020019061116c92919061196b565b5090505060036000815480929190611183906121f7565b919050555060035490509392505050565b816004600085815260200190815260200160002060000190805190602001906111be92919061196b565b50806004600085815260200190815260200160002060010190805190602001906111e992919061196b565b50505050565b606060066000838152602001908152602001600020600101805461121290612194565b80601f016020809104026020016040519081016040528092919081815260200182805461123e90612194565b801561128b5780601f106112605761010080835404028352916020019161128b565b820191906000526020600020905b81548152906001019060200180831161126e57829003601f168201915b50505050509050919050565b6060600060025467ffffffffffffffff8111156112b7576112b66122cd565b5b6040519080825280602002602001820160405280156112ea57816020015b60608152602001906001900390816112d55790505b50905060005b6002548110156113ca5760066000828152602001908152602001600020600101805461131b90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461134790612194565b80156113945780601f1061136957610100808354040283529160200191611394565b820191906000526020600020905b81548152906001019060200180831161137757829003601f168201915b50505050508282815181106113ac576113ab61229e565b5b602002602001018190525080806113c2906121f7565b9150506112f0565b508091505090565b600080600090505b6002548110156114395782805190602001206006600083815260200190815260200160002060010160405161140f9190611f3c565b60405180910390201415611426578091505061143f565b8080611431906121f7565b9150506113da565b50600090505b919050565b600080600090505b6002548110156114c1578280519060200120600660008381526020019081526020016000206001016040516114819190611f3c565b604051809103902014156114ae5760066000828152602001908152602001600020600001549150506114c7565b80806114b9906121f7565b91505061144c565b50600090505b919050565b6000808190555060006001819055506000600281905550600060038190555060005b60005481101561155157600460008281526020019081526020016000206000808201600061151c91906119f1565b60018201600061152c91906119f1565b60028201600061153c91906119f1565b50508080611549906121f7565b9150506114ee565b5060005b6001548110156115a0576005600082815260200190815260200160002060008082016000905560018201600061158b91906119f1565b50508080611598906121f7565b915050611555565b5060005b6002548110156115ef57600660008281526020019081526020016000206000808201600090556001820160006115da91906119f1565b505080806115e7906121f7565b9150506115a4565b5060005b6003548110156116465760076000828152602001908152602001600020600080820160009055600182016000905560028201600061163191906119f1565b5050808061163e906121f7565b9150506115f3565b50565b8060066000848152602001908152602001600020600101908051906020019061167392919061196b565b505050565b60606000805467ffffffffffffffff811115611697576116966122cd565b5b6040519080825280602002602001820160405280156116ca57816020015b60608152602001906001900390816116b55790505b50905060005b6000548110156117aa576004600082815260200190815260200160002060010180546116fb90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461172790612194565b80156117745780601f1061174957610100808354040283529160200191611774565b820191906000526020600020905b81548152906001019060200180831161175757829003601f168201915b505050505082828151811061178c5761178b61229e565b5b602002602001018190525080806117a2906121f7565b9150506116d0565b508091505090565b806005600084815260200190815260200160002060010190805190602001906117dc92919061196b565b505050565b600060405180606001604052808481526020018381526020016040518060400160405280600581526020017f46616c73650000000000000000000000000000000000000000000000000000008152508152506004600080548152602001908152602001600020600082015181600001908051906020019061186392919061196b565b50602082015181600101908051906020019061188092919061196b565b50604082015181600201908051906020019061189d92919061196b565b509050506000808154809291906118b3906121f7565b9190505550600054905092915050565b60606005600083815260200190815260200160002060010180546118e690612194565b80601f016020809104026020016040519081016040528092919081815260200182805461191290612194565b801561195f5780601f106119345761010080835404028352916020019161195f565b820191906000526020600020905b81548152906001019060200180831161194257829003601f168201915b50505050509050919050565b82805461197790612194565b90600052602060002090601f01602090048101928261199957600085556119e0565b82601f106119b257805160ff19168380011785556119e0565b828001600101855582156119e0579182015b828111156119df5782518255916020019190600101906119c4565b5b5090506119ed9190611a31565b5090565b5080546119fd90612194565b6000825580601f10611a0f5750611a2e565b601f016020900490600052602060002090810190611a2d9190611a31565b5b50565b5b80821115611a4a576000816000905550600101611a32565b5090565b6000611a61611a5c84612091565b61206c565b905082815260208101848484011115611a7d57611a7c612301565b5b611a88848285612152565b509392505050565b600082601f830112611aa557611aa46122fc565b5b8135611ab5848260208601611a4e565b91505092915050565b600081359050611acd81612321565b92915050565b600060208284031215611ae957611ae861230b565b5b600082013567ffffffffffffffff811115611b0757611b06612306565b5b611b1384828501611a90565b91505092915050565b60008060408385031215611b3357611b3261230b565b5b600083013567ffffffffffffffff811115611b5157611b50612306565b5b611b5d85828601611a90565b925050602083013567ffffffffffffffff811115611b7e57611b7d612306565b5b611b8a85828601611a90565b9150509250929050565b60008060408385031215611bab57611baa61230b565b5b600083013567ffffffffffffffff811115611bc957611bc8612306565b5b611bd585828601611a90565b9250506020611be685828601611abe565b9150509250929050565b600060208284031215611c0657611c0561230b565b5b6000611c1484828501611abe565b91505092915050565b60008060408385031215611c3457611c3361230b565b5b6000611c4285828601611abe565b925050602083013567ffffffffffffffff811115611c6357611c62612306565b5b611c6f85828601611a90565b9150509250929050565b600080600060608486031215611c9257611c9161230b565b5b6000611ca086828701611abe565b935050602084013567ffffffffffffffff811115611cc157611cc0612306565b5b611ccd86828701611a90565b925050604084013567ffffffffffffffff811115611cee57611ced612306565b5b611cfa86828701611a90565b9150509250925092565b60008060408385031215611d1b57611d1a61230b565b5b6000611d2985828601611abe565b9250506020611d3a85828601611abe565b9150509250929050565b600080600060608486031215611d5d57611d5c61230b565b5b6000611d6b86828701611abe565b9350506020611d7c86828701611abe565b925050604084013567ffffffffffffffff811115611d9d57611d9c612306565b5b611da986828701611a90565b9150509250925092565b6000611dbf8383611ebb565b905092915050565b6000611dd2826120e7565b611ddc818561210a565b935083602082028501611dee856120c2565b8060005b85811015611e2a5784840389528151611e0b8582611db3565b9450611e16836120fd565b925060208a01995050600181019050611df2565b50829750879550505050505092915050565b60008154611e4981612194565b611e53818661211b565b94506001821660008114611e6e5760018114611e7f57611eb2565b60ff19831686528186019350611eb2565b611e88856120d2565b60005b83811015611eaa57815481890152600182019150602081019050611e8b565b838801955050505b50505092915050565b6000611ec6826120f2565b611ed08185612126565b9350611ee0818560208601612161565b611ee981612310565b840191505092915050565b6000611eff826120f2565b611f098185612137565b9350611f19818560208601612161565b611f2281612310565b840191505092915050565b611f3681612148565b82525050565b6000611f488284611e3c565b915081905092915050565b60006020820190508181036000830152611f6d8184611dc7565b905092915050565b60006020820190508181036000830152611f8f8184611ef4565b905092915050565b60006060820190508181036000830152611fb18186611ef4565b90508181036020830152611fc58185611ef4565b90508181036040830152611fd98184611ef4565b9050949350505050565b6000602082019050611ff86000830184611f2d565b92915050565b60006040820190506120136000830185611f2d565b81810360208301526120258184611ef4565b90509392505050565b60006060820190506120436000830186611f2d565b6120506020830185611f2d565b81810360408301526120628184611ef4565b9050949350505050565b6000612076612087565b905061208282826121c6565b919050565b6000604051905090565b600067ffffffffffffffff8211156120ac576120ab6122cd565b5b6120b582612310565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561217f578082015181840152602081019050612164565b8381111561218e576000848401525b50505050565b600060028204905060018216806121ac57607f821691505b602082108114156121c0576121bf61226f565b5b50919050565b6121cf82612310565b810181811067ffffffffffffffff821117156121ee576121ed6122cd565b5b80604052505050565b600061220282612148565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561223557612234612240565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61232a81612148565b811461233557600080fd5b5056fea26469706673582212203cb0f25cdab881faad3f80d694ef0e6c8afc203623366b87a3672adfe516dc2b64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82FCC732 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB16060A6 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xC4C2E364 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0x508 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x448 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2D9CB1AB GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2D9CB1AB EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x71085CAB EQ PUSH2 0x34E JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x109AC970 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x251 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH2 0x14CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x58B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x576 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x69D JUMPI DUP5 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x68A JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x5DF SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x658 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x658 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x686 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x695 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x596 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6E6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x80D JUMPI DUP5 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x7EC JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x74F SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7E0 JUMPI PUSH2 0x7DF PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x7F7 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x805 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x706 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x847 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x873 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x895 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x931 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x91E JUMPI DUP1 SWAP2 POP POP PUSH2 0x937 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x929 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D2 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x95F SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x98B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x9ED SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA19 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA66 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA49 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xA7B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA7 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1D PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB51 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB3C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xC31 JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xB82 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBAE SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xC29 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB57 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xC8B SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCA2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD28 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77616C6C65742023310000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F206D657461646174612023310000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x17E1 JUMP JUMPDEST POP PUSH2 0xD9D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77616C6C65742023320000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F206D657461646174612023320000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x17E1 JUMP JUMPDEST POP PUSH2 0xDA6 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xDD4 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE00 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE22 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE30 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEAA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE95 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xFDD JUMPI DUP6 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0xEF9 JUMPI POP DUP5 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xFBC JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xF1F SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF4B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF98 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF6D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF98 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF7B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFB0 JUMPI PUSH2 0xFAF PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xFC7 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xFD5 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB5 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x100C SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1038 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1085 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1085 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1068 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x10E3 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10FA SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x116C SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1183 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11BE SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11E9 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1212 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x123E SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1260 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x128B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x126E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12EA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12D5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x13CA JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x131B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1347 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1394 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1394 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1377 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x13C2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1439 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x140F SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x1426 JUMPI DUP1 SWAP2 POP POP PUSH2 0x143F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1431 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x14C1 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x14AE JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x14C7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14B9 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x144C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x151C SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1549 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14EE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1598 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1555 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x15EF JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x15E7 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A4 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1646 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x163E SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F3 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1673 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1697 JUMPI PUSH2 0x1696 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16B5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x17AA JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x16FB SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1727 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1774 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1749 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1774 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1757 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x17A2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16D0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x17DC SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1863 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1880 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x189D SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B3 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x18E6 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1912 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x195F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1934 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x195F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1942 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1977 SWAP1 PUSH2 0x2194 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1999 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x19E0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x19B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x19E0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x19E0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x19DF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x19ED SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x19FD SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1A0F JUMPI POP PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A2D SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1A32 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 PUSH2 0x1A5C DUP5 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x206C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x2301 JUMP JUMPDEST JUMPDEST PUSH2 0x1A88 DUP5 DUP3 DUP6 PUSH2 0x2152 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AB5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACD DUP2 PUSH2 0x2321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B07 JUMPI PUSH2 0x1B06 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1B13 DUP5 DUP3 DUP6 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B32 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B51 JUMPI PUSH2 0x1B50 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1B5D DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1B8A DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BAB JUMPI PUSH2 0x1BAA PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C06 JUMPI PUSH2 0x1C05 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C14 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C42 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C63 JUMPI PUSH2 0x1C62 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1C6F DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCD DUP7 DUP3 DUP8 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1CFA DUP7 DUP3 DUP8 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D29 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D3A DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D5D JUMPI PUSH2 0x1D5C PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6B DUP7 DUP3 DUP8 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D7C DUP7 DUP3 DUP8 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1DA9 DUP7 DUP3 DUP8 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBF DUP4 DUP4 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD2 DUP3 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1DDC DUP2 DUP6 PUSH2 0x210A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1DEE DUP6 PUSH2 0x20C2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1E2A JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1E0B DUP6 DUP3 PUSH2 0x1DB3 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E16 DUP4 PUSH2 0x20FD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DF2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1E49 DUP2 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x1E53 DUP2 DUP7 PUSH2 0x211B JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1E6E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E7F JUMPI PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0x1E88 DUP6 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAA JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E8B JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC6 DUP3 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x1ED0 DUP2 DUP6 PUSH2 0x2126 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x1EE9 DUP2 PUSH2 0x2310 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFF DUP3 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x1F09 DUP2 DUP6 PUSH2 0x2137 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F19 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x1F22 DUP2 PUSH2 0x2310 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F36 DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F48 DUP3 DUP5 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 DUP5 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8F DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB1 DUP2 DUP7 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1FC5 DUP2 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FD9 DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2025 DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2043 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2062 DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2076 PUSH2 0x2087 JUMP JUMPDEST SWAP1 POP PUSH2 0x2082 DUP3 DUP3 PUSH2 0x21C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH2 0x20B5 DUP3 PUSH2 0x2310 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x217F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2164 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x218E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x21C0 JUMPI PUSH2 0x21BF PUSH2 0x226F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21CF DUP3 PUSH2 0x2310 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21EE JUMPI PUSH2 0x21ED PUSH2 0x22CD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP3 PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x2240 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232A DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP2 EQ PUSH2 0x2335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xB0 CALLCODE 0x5C 0xDA 0xB8 DUP2 STATICCALL 0xAD EXTCODEHASH DUP1 0xD6 SWAP5 0xEF 0xE PUSH13 0x8AFC203623366B87A3672ADFE5 AND 0xDC 0x2B PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"113:7663:2:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_dao_uris_1079":{"entryPoint":2364,"id":1079,"parameterSlots":0,"returnSlots":0},"@_ideas_uris_1089":{"entryPoint":3499,"id":1089,"parameterSlots":0,"returnSlots":0},"@all_goal_ideas_votes_1094":{"entryPoint":2072,"id":1094,"parameterSlots":0,"returnSlots":0},"@create_dao_1119":{"entryPoint":6113,"id":1119,"parameterSlots":2,"returnSlots":1},"@create_goal_1221":{"entryPoint":4241,"id":1221,"parameterSlots":2,"returnSlots":1},"@create_goal_ideas_vote_1649":{"entryPoint":4362,"id":1649,"parameterSlots":3,"returnSlots":1},"@create_ideas_1412":{"entryPoint":3129,"id":1412,"parameterSlots":2,"returnSlots":1},"@dao_1818":{"entryPoint":3250,"id":1818,"parameterSlots":0,"returnSlots":1},"@dao_uri_1197":{"entryPoint":4073,"id":1197,"parameterSlots":1,"returnSlots":1},"@get_all_daos_1184":{"entryPoint":5752,"id":1184,"parameterSlots":0,"returnSlots":1},"@get_all_goals_1277":{"entryPoint":2814,"id":1277,"parameterSlots":0,"returnSlots":1},"@get_all_goals_by_dao_id_1334":{"entryPoint":1336,"id":1334,"parameterSlots":1,"returnSlots":1},"@get_all_ideas_1468":{"entryPoint":4759,"id":1468,"parameterSlots":0,"returnSlots":1},"@get_all_ideas_by_goal_id_1524":{"entryPoint":1704,"id":1524,"parameterSlots":1,"returnSlots":1},"@get_goal_id_by_goal_uri_1375":{"entryPoint":2250,"id":1375,"parameterSlots":1,"returnSlots":1},"@get_goal_id_from_ideas_uri_1609":{"entryPoint":5188,"id":1609,"parameterSlots":1,"returnSlots":1},"@get_ideas_id_by_ideas_uri_1565":{"entryPoint":5074,"id":1565,"parameterSlots":1,"returnSlots":1},"@get_ideas_votes_from_goal_1714":{"entryPoint":3671,"id":1714,"parameterSlots":2,"returnSlots":1},"@goal_uri_1388":{"entryPoint":6339,"id":1388,"parameterSlots":1,"returnSlots":1},"@ideas_uri_1622":{"entryPoint":4591,"id":1622,"parameterSlots":1,"returnSlots":1},"@reset_all_1798":{"entryPoint":5324,"id":1798,"parameterSlots":0,"returnSlots":0},"@set_dao_1143":{"entryPoint":4500,"id":1143,"parameterSlots":3,"returnSlots":0},"@set_goal_1236":{"entryPoint":6066,"id":1236,"parameterSlots":2,"returnSlots":0},"@set_ideas_1427":{"entryPoint":5705,"id":1427,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":6734,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":6800,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":6867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr":{"entryPoint":6940,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":7060,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":7152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":7197,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":7289,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":7428,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr":{"entryPoint":7492,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":7603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":7623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":7867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7981,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8087,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8190,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8238,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":8300,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8327,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8337,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":8386,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":8402,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":8423,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8434,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":8445,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":8458,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8475,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":8486,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8503,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8520,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8530,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":8545,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8596,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8646,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8695,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8768,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8815,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8862,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8956,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8961,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8966,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8971,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8976,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":8993,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16854:3","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:3","statements":[{"nodeType":"YulAssignment","src":"101:75:3","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:3"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:3"},"nodeType":"YulFunctionCall","src":"126:49:3"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:3"},"nodeType":"YulFunctionCall","src":"110:66:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:3"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:3"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:3"},"nodeType":"YulFunctionCall","src":"185:21:3"},"nodeType":"YulExpressionStatement","src":"185:21:3"},{"nodeType":"YulVariableDeclaration","src":"215:27:3","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:3"},"nodeType":"YulFunctionCall","src":"226:16:3"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:3"},"nodeType":"YulFunctionCall","src":"282:79:3"},"nodeType":"YulExpressionStatement","src":"282:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:3"},"nodeType":"YulFunctionCall","src":"257:16:3"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:3"},"nodeType":"YulFunctionCall","src":"254:25:3"},"nodeType":"YulIf","src":"251:2:3"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:3"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:3"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:3"},"nodeType":"YulFunctionCall","src":"372:41:3"},"nodeType":"YulExpressionStatement","src":"372:41:3"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:3","type":""}],"src":"7:412:3"},{"body":{"nodeType":"YulBlock","src":"501:278:3","statements":[{"body":{"nodeType":"YulBlock","src":"550:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"552:77:3"},"nodeType":"YulFunctionCall","src":"552:79:3"},"nodeType":"YulExpressionStatement","src":"552:79:3"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"529:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"537:4:3","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:3"},"nodeType":"YulFunctionCall","src":"525:17:3"},{"name":"end","nodeType":"YulIdentifier","src":"544:3:3"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"521:3:3"},"nodeType":"YulFunctionCall","src":"521:27:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"514:6:3"},"nodeType":"YulFunctionCall","src":"514:35:3"},"nodeType":"YulIf","src":"511:2:3"},{"nodeType":"YulVariableDeclaration","src":"642:34:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"669:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"656:12:3"},"nodeType":"YulFunctionCall","src":"656:20:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"646:6:3","type":""}]},{"nodeType":"YulAssignment","src":"685:88:3","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"746:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"754:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"742:3:3"},"nodeType":"YulFunctionCall","src":"742:17:3"},{"name":"length","nodeType":"YulIdentifier","src":"761:6:3"},{"name":"end","nodeType":"YulIdentifier","src":"769:3:3"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"694:47:3"},"nodeType":"YulFunctionCall","src":"694:79:3"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"685:5:3"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"479:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"487:3:3","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"495:5:3","type":""}],"src":"439:340:3"},{"body":{"nodeType":"YulBlock","src":"837:87:3","statements":[{"nodeType":"YulAssignment","src":"847:29:3","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"869:6:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"856:12:3"},"nodeType":"YulFunctionCall","src":"856:20:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"847:5:3"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"912:5:3"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"885:26:3"},"nodeType":"YulFunctionCall","src":"885:33:3"},"nodeType":"YulExpressionStatement","src":"885:33:3"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"815:6:3","type":""},{"name":"end","nodeType":"YulTypedName","src":"823:3:3","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"831:5:3","type":""}],"src":"785:139:3"},{"body":{"nodeType":"YulBlock","src":"1006:433:3","statements":[{"body":{"nodeType":"YulBlock","src":"1052:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1054:77:3"},"nodeType":"YulFunctionCall","src":"1054:79:3"},"nodeType":"YulExpressionStatement","src":"1054:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1027:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1036:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1023:3:3"},"nodeType":"YulFunctionCall","src":"1023:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1048:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1019:3:3"},"nodeType":"YulFunctionCall","src":"1019:32:3"},"nodeType":"YulIf","src":"1016:2:3"},{"nodeType":"YulBlock","src":"1145:287:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1160:45:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1191:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1202:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1187:3:3"},"nodeType":"YulFunctionCall","src":"1187:17:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1174:12:3"},"nodeType":"YulFunctionCall","src":"1174:31:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1164:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1252:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1254:77:3"},"nodeType":"YulFunctionCall","src":"1254:79:3"},"nodeType":"YulExpressionStatement","src":"1254:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1224:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"1232:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1221:2:3"},"nodeType":"YulFunctionCall","src":"1221:30:3"},"nodeType":"YulIf","src":"1218:2:3"},{"nodeType":"YulAssignment","src":"1349:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1394:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1405:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1390:3:3"},"nodeType":"YulFunctionCall","src":"1390:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1414:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1359:30:3"},"nodeType":"YulFunctionCall","src":"1359:63:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1349:6:3"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"976:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"987:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"999:6:3","type":""}],"src":"930:509:3"},{"body":{"nodeType":"YulBlock","src":"1548:731:3","statements":[{"body":{"nodeType":"YulBlock","src":"1594:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1596:77:3"},"nodeType":"YulFunctionCall","src":"1596:79:3"},"nodeType":"YulExpressionStatement","src":"1596:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1569:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"1578:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1565:3:3"},"nodeType":"YulFunctionCall","src":"1565:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1561:3:3"},"nodeType":"YulFunctionCall","src":"1561:32:3"},"nodeType":"YulIf","src":"1558:2:3"},{"nodeType":"YulBlock","src":"1687:287:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1702:45:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1733:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1744:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1729:3:3"},"nodeType":"YulFunctionCall","src":"1729:17:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1716:12:3"},"nodeType":"YulFunctionCall","src":"1716:31:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1706:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1794:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1796:77:3"},"nodeType":"YulFunctionCall","src":"1796:79:3"},"nodeType":"YulExpressionStatement","src":"1796:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1766:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"1774:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1763:2:3"},"nodeType":"YulFunctionCall","src":"1763:30:3"},"nodeType":"YulIf","src":"1760:2:3"},{"nodeType":"YulAssignment","src":"1891:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1936:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"1947:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1932:3:3"},"nodeType":"YulFunctionCall","src":"1932:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1956:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1901:30:3"},"nodeType":"YulFunctionCall","src":"1901:63:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1891:6:3"}]}]},{"nodeType":"YulBlock","src":"1984:288:3","statements":[{"nodeType":"YulVariableDeclaration","src":"1999:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2030:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2041:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:3"},"nodeType":"YulFunctionCall","src":"2026:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2013:12:3"},"nodeType":"YulFunctionCall","src":"2013:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2003:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2092:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2094:77:3"},"nodeType":"YulFunctionCall","src":"2094:79:3"},"nodeType":"YulExpressionStatement","src":"2094:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2064:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2072:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2061:2:3"},"nodeType":"YulFunctionCall","src":"2061:30:3"},"nodeType":"YulIf","src":"2058:2:3"},{"nodeType":"YulAssignment","src":"2189:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2234:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2245:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2230:3:3"},"nodeType":"YulFunctionCall","src":"2230:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2254:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2199:30:3"},"nodeType":"YulFunctionCall","src":"2199:63:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2189:6:3"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1510:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1521:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1533:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1541:6:3","type":""}],"src":"1445:834:3"},{"body":{"nodeType":"YulBlock","src":"2378:561:3","statements":[{"body":{"nodeType":"YulBlock","src":"2424:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2426:77:3"},"nodeType":"YulFunctionCall","src":"2426:79:3"},"nodeType":"YulExpressionStatement","src":"2426:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2399:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"2408:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2395:3:3"},"nodeType":"YulFunctionCall","src":"2395:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"2420:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2391:3:3"},"nodeType":"YulFunctionCall","src":"2391:32:3"},"nodeType":"YulIf","src":"2388:2:3"},{"nodeType":"YulBlock","src":"2517:287:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2532:45:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2563:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"2574:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2559:3:3"},"nodeType":"YulFunctionCall","src":"2559:17:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2546:12:3"},"nodeType":"YulFunctionCall","src":"2546:31:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2536:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"2624:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2626:77:3"},"nodeType":"YulFunctionCall","src":"2626:79:3"},"nodeType":"YulExpressionStatement","src":"2626:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2596:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"2604:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2593:2:3"},"nodeType":"YulFunctionCall","src":"2593:30:3"},"nodeType":"YulIf","src":"2590:2:3"},{"nodeType":"YulAssignment","src":"2721:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2766:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2777:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2762:3:3"},"nodeType":"YulFunctionCall","src":"2762:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2786:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2731:30:3"},"nodeType":"YulFunctionCall","src":"2731:63:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2721:6:3"}]}]},{"nodeType":"YulBlock","src":"2814:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"2829:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"2843:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2833:6:3","type":""}]},{"nodeType":"YulAssignment","src":"2859:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2894:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"2905:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2890:3:3"},"nodeType":"YulFunctionCall","src":"2890:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2914:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2869:20:3"},"nodeType":"YulFunctionCall","src":"2869:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2859:6:3"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2340:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2351:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2363:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2371:6:3","type":""}],"src":"2285:654:3"},{"body":{"nodeType":"YulBlock","src":"3011:263:3","statements":[{"body":{"nodeType":"YulBlock","src":"3057:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3059:77:3"},"nodeType":"YulFunctionCall","src":"3059:79:3"},"nodeType":"YulExpressionStatement","src":"3059:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3032:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"3041:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3028:3:3"},"nodeType":"YulFunctionCall","src":"3028:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"3053:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3024:3:3"},"nodeType":"YulFunctionCall","src":"3024:32:3"},"nodeType":"YulIf","src":"3021:2:3"},{"nodeType":"YulBlock","src":"3150:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3165:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3179:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3169:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3194:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3229:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3240:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3225:3:3"},"nodeType":"YulFunctionCall","src":"3225:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3249:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3204:20:3"},"nodeType":"YulFunctionCall","src":"3204:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3194:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2981:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2992:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3004:6:3","type":""}],"src":"2945:329:3"},{"body":{"nodeType":"YulBlock","src":"3373:561:3","statements":[{"body":{"nodeType":"YulBlock","src":"3419:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3421:77:3"},"nodeType":"YulFunctionCall","src":"3421:79:3"},"nodeType":"YulExpressionStatement","src":"3421:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3394:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"3403:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3390:3:3"},"nodeType":"YulFunctionCall","src":"3390:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"3415:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3386:3:3"},"nodeType":"YulFunctionCall","src":"3386:32:3"},"nodeType":"YulIf","src":"3383:2:3"},{"nodeType":"YulBlock","src":"3512:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3527:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"3541:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3531:6:3","type":""}]},{"nodeType":"YulAssignment","src":"3556:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3591:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3602:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3587:3:3"},"nodeType":"YulFunctionCall","src":"3587:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3611:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3566:20:3"},"nodeType":"YulFunctionCall","src":"3566:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3556:6:3"}]}]},{"nodeType":"YulBlock","src":"3639:288:3","statements":[{"nodeType":"YulVariableDeclaration","src":"3654:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3685:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"3696:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3681:3:3"},"nodeType":"YulFunctionCall","src":"3681:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3668:12:3"},"nodeType":"YulFunctionCall","src":"3668:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3658:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"3747:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3749:77:3"},"nodeType":"YulFunctionCall","src":"3749:79:3"},"nodeType":"YulExpressionStatement","src":"3749:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3719:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3727:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3716:2:3"},"nodeType":"YulFunctionCall","src":"3716:30:3"},"nodeType":"YulIf","src":"3713:2:3"},{"nodeType":"YulAssignment","src":"3844:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3889:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"3900:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3885:3:3"},"nodeType":"YulFunctionCall","src":"3885:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3909:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3854:30:3"},"nodeType":"YulFunctionCall","src":"3854:63:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3844:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3335:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3346:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3358:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3366:6:3","type":""}],"src":"3280:654:3"},{"body":{"nodeType":"YulBlock","src":"4060:859:3","statements":[{"body":{"nodeType":"YulBlock","src":"4106:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4108:77:3"},"nodeType":"YulFunctionCall","src":"4108:79:3"},"nodeType":"YulExpressionStatement","src":"4108:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4081:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"4090:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4077:3:3"},"nodeType":"YulFunctionCall","src":"4077:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"4102:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4073:3:3"},"nodeType":"YulFunctionCall","src":"4073:32:3"},"nodeType":"YulIf","src":"4070:2:3"},{"nodeType":"YulBlock","src":"4199:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4214:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"4228:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4218:6:3","type":""}]},{"nodeType":"YulAssignment","src":"4243:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4278:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"4289:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4274:3:3"},"nodeType":"YulFunctionCall","src":"4274:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4298:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4253:20:3"},"nodeType":"YulFunctionCall","src":"4253:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4243:6:3"}]}]},{"nodeType":"YulBlock","src":"4326:288:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4341:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4383:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:3"},"nodeType":"YulFunctionCall","src":"4368:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4355:12:3"},"nodeType":"YulFunctionCall","src":"4355:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4345:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"4434:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4436:77:3"},"nodeType":"YulFunctionCall","src":"4436:79:3"},"nodeType":"YulExpressionStatement","src":"4436:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4406:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4414:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4403:2:3"},"nodeType":"YulFunctionCall","src":"4403:30:3"},"nodeType":"YulIf","src":"4400:2:3"},{"nodeType":"YulAssignment","src":"4531:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4576:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"4587:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4572:3:3"},"nodeType":"YulFunctionCall","src":"4572:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4596:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4541:30:3"},"nodeType":"YulFunctionCall","src":"4541:63:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4531:6:3"}]}]},{"nodeType":"YulBlock","src":"4624:288:3","statements":[{"nodeType":"YulVariableDeclaration","src":"4639:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4670:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4681:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4666:3:3"},"nodeType":"YulFunctionCall","src":"4666:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4653:12:3"},"nodeType":"YulFunctionCall","src":"4653:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4643:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"4732:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4734:77:3"},"nodeType":"YulFunctionCall","src":"4734:79:3"},"nodeType":"YulExpressionStatement","src":"4734:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4704:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"4712:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4701:2:3"},"nodeType":"YulFunctionCall","src":"4701:30:3"},"nodeType":"YulIf","src":"4698:2:3"},{"nodeType":"YulAssignment","src":"4829:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"4885:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:3"},"nodeType":"YulFunctionCall","src":"4870:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4894:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4839:30:3"},"nodeType":"YulFunctionCall","src":"4839:63:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4829:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4014:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4025:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4037:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4045:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4053:6:3","type":""}],"src":"3940:979:3"},{"body":{"nodeType":"YulBlock","src":"5008:391:3","statements":[{"body":{"nodeType":"YulBlock","src":"5054:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5056:77:3"},"nodeType":"YulFunctionCall","src":"5056:79:3"},"nodeType":"YulExpressionStatement","src":"5056:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5029:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5038:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5025:3:3"},"nodeType":"YulFunctionCall","src":"5025:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"5050:2:3","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5021:3:3"},"nodeType":"YulFunctionCall","src":"5021:32:3"},"nodeType":"YulIf","src":"5018:2:3"},{"nodeType":"YulBlock","src":"5147:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5162:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5176:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5166:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5191:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5226:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"5237:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5222:3:3"},"nodeType":"YulFunctionCall","src":"5222:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5246:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5201:20:3"},"nodeType":"YulFunctionCall","src":"5201:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5191:6:3"}]}]},{"nodeType":"YulBlock","src":"5274:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5289:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5303:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5293:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5319:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5354:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"5365:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5350:3:3"},"nodeType":"YulFunctionCall","src":"5350:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5374:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5329:20:3"},"nodeType":"YulFunctionCall","src":"5329:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5319:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4970:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4981:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4993:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5001:6:3","type":""}],"src":"4925:474:3"},{"body":{"nodeType":"YulBlock","src":"5515:689:3","statements":[{"body":{"nodeType":"YulBlock","src":"5561:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5563:77:3"},"nodeType":"YulFunctionCall","src":"5563:79:3"},"nodeType":"YulExpressionStatement","src":"5563:79:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5536:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"5545:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5532:3:3"},"nodeType":"YulFunctionCall","src":"5532:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"5557:2:3","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5528:3:3"},"nodeType":"YulFunctionCall","src":"5528:32:3"},"nodeType":"YulIf","src":"5525:2:3"},{"nodeType":"YulBlock","src":"5654:117:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5669:15:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5683:1:3","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5673:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5698:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5733:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"5744:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5729:3:3"},"nodeType":"YulFunctionCall","src":"5729:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5753:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5708:20:3"},"nodeType":"YulFunctionCall","src":"5708:53:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5698:6:3"}]}]},{"nodeType":"YulBlock","src":"5781:118:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5796:16:3","value":{"kind":"number","nodeType":"YulLiteral","src":"5810:2:3","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5800:6:3","type":""}]},{"nodeType":"YulAssignment","src":"5826:63:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5861:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"5872:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5857:3:3"},"nodeType":"YulFunctionCall","src":"5857:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5881:7:3"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5836:20:3"},"nodeType":"YulFunctionCall","src":"5836:53:3"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5826:6:3"}]}]},{"nodeType":"YulBlock","src":"5909:288:3","statements":[{"nodeType":"YulVariableDeclaration","src":"5924:46:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5955:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"5966:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:3"},"nodeType":"YulFunctionCall","src":"5951:18:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5938:12:3"},"nodeType":"YulFunctionCall","src":"5938:32:3"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5928:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"6017:83:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6019:77:3"},"nodeType":"YulFunctionCall","src":"6019:79:3"},"nodeType":"YulExpressionStatement","src":"6019:79:3"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5989:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"5997:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5986:2:3"},"nodeType":"YulFunctionCall","src":"5986:30:3"},"nodeType":"YulIf","src":"5983:2:3"},{"nodeType":"YulAssignment","src":"6114:73:3","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6159:9:3"},{"name":"offset","nodeType":"YulIdentifier","src":"6170:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6155:3:3"},"nodeType":"YulFunctionCall","src":"6155:22:3"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6179:7:3"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6124:30:3"},"nodeType":"YulFunctionCall","src":"6124:63:3"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6114:6:3"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5469:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5480:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5492:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5500:6:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5508:6:3","type":""}],"src":"5405:799:3"},{"body":{"nodeType":"YulBlock","src":"6310:96:3","statements":[{"nodeType":"YulAssignment","src":"6320:80:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6388:6:3"},{"name":"pos","nodeType":"YulIdentifier","src":"6396:3:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6334:53:3"},"nodeType":"YulFunctionCall","src":"6334:66:3"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"6320:10:3"}]}]},"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6283:6:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6291:3:3","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6299:10:3","type":""}],"src":"6210:196:3"},{"body":{"nodeType":"YulBlock","src":"6584:847:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6594:78:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6666:5:3"}],"functionName":{"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6608:57:3"},"nodeType":"YulFunctionCall","src":"6608:64:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6598:6:3","type":""}]},{"nodeType":"YulAssignment","src":"6681:103:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6772:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"6777:6:3"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6688:83:3"},"nodeType":"YulFunctionCall","src":"6688:96:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6681:3:3"}]},{"nodeType":"YulVariableDeclaration","src":"6793:20:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"6810:3:3"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"6797:9:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6822:39:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6838:3:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6847:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"6855:4:3","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6843:3:3"},"nodeType":"YulFunctionCall","src":"6843:17:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6834:3:3"},"nodeType":"YulFunctionCall","src":"6834:27:3"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"6826:4:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6870:81:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6945:5:3"}],"functionName":{"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6885:59:3"},"nodeType":"YulFunctionCall","src":"6885:66:3"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6874:7:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6960:21:3","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6974:7:3"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6964:6:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"7050:336:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7071:3:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7080:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"7086:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7076:3:3"},"nodeType":"YulFunctionCall","src":"7076:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7064:6:3"},"nodeType":"YulFunctionCall","src":"7064:33:3"},"nodeType":"YulExpressionStatement","src":"7064:33:3"},{"nodeType":"YulVariableDeclaration","src":"7110:34:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7137:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7131:5:3"},"nodeType":"YulFunctionCall","src":"7131:13:3"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7114:13:3","type":""}]},{"nodeType":"YulAssignment","src":"7157:92:3","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7229:13:3"},{"name":"tail","nodeType":"YulIdentifier","src":"7244:4:3"}],"functionName":{"name":"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7165:63:3"},"nodeType":"YulFunctionCall","src":"7165:84:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7157:4:3"}]},{"nodeType":"YulAssignment","src":"7262:80:3","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7335:6:3"}],"functionName":{"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7272:62:3"},"nodeType":"YulFunctionCall","src":"7272:70:3"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7262:6:3"}]},{"nodeType":"YulAssignment","src":"7355:21:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7366:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"7371:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7362:3:3"},"nodeType":"YulFunctionCall","src":"7362:14:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7355:3:3"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7012:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"7015:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7009:2:3"},"nodeType":"YulFunctionCall","src":"7009:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7023:18:3","statements":[{"nodeType":"YulAssignment","src":"7025:14:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7034:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"7037:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7030:3:3"},"nodeType":"YulFunctionCall","src":"7030:9:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7025:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"6994:14:3","statements":[{"nodeType":"YulVariableDeclaration","src":"6996:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"7005:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7000:1:3","type":""}]}]},"src":"6990:396:3"},{"nodeType":"YulAssignment","src":"7395:11:3","value":{"name":"tail","nodeType":"YulIdentifier","src":"7402:4:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7395:3:3"}]},{"nodeType":"YulAssignment","src":"7415:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"7422:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7415:3:3"}]}]},"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6563:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6570:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6579:3:3","type":""}],"src":"6440:991:3"},{"body":{"nodeType":"YulBlock","src":"7568:740:3","statements":[{"nodeType":"YulVariableDeclaration","src":"7578:29:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7601:5:3"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7595:5:3"},"nodeType":"YulFunctionCall","src":"7595:12:3"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"7582:9:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7616:50:3","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"7656:9:3"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7630:25:3"},"nodeType":"YulFunctionCall","src":"7630:36:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7620:6:3","type":""}]},{"nodeType":"YulAssignment","src":"7675:95:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7758:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"7763:6:3"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7682:75:3"},"nodeType":"YulFunctionCall","src":"7682:88:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7675:3:3"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7819:130:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7872:3:3"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"7881:9:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7896:4:3","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7892:3:3"},"nodeType":"YulFunctionCall","src":"7892:9:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7877:3:3"},"nodeType":"YulFunctionCall","src":"7877:25:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7865:6:3"},"nodeType":"YulFunctionCall","src":"7865:38:3"},"nodeType":"YulExpressionStatement","src":"7865:38:3"},{"nodeType":"YulAssignment","src":"7916:23:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7927:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"7932:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7923:3:3"},"nodeType":"YulFunctionCall","src":"7923:16:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7916:3:3"}]}]},"nodeType":"YulCase","src":"7812:137:3","value":{"kind":"number","nodeType":"YulLiteral","src":"7817:1:3","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"7965:337:3","statements":[{"nodeType":"YulVariableDeclaration","src":"8010:56:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8060:5:3"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"8025:34:3"},"nodeType":"YulFunctionCall","src":"8025:41:3"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"8014:7:3","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8079:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"8088:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8083:1:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"8146:110:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8175:3:3"},{"name":"i","nodeType":"YulIdentifier","src":"8180:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8171:3:3"},"nodeType":"YulFunctionCall","src":"8171:11:3"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"8190:7:3"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8184:5:3"},"nodeType":"YulFunctionCall","src":"8184:14:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8164:6:3"},"nodeType":"YulFunctionCall","src":"8164:35:3"},"nodeType":"YulExpressionStatement","src":"8164:35:3"},{"nodeType":"YulAssignment","src":"8216:26:3","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"8231:7:3"},{"kind":"number","nodeType":"YulLiteral","src":"8240:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8227:3:3"},"nodeType":"YulFunctionCall","src":"8227:15:3"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"8216:7:3"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8113:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"8116:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8110:2:3"},"nodeType":"YulFunctionCall","src":"8110:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8124:21:3","statements":[{"nodeType":"YulAssignment","src":"8126:17:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8135:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"8138:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8131:3:3"},"nodeType":"YulFunctionCall","src":"8131:12:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8126:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"8106:3:3","statements":[]},"src":"8102:154:3"},{"nodeType":"YulAssignment","src":"8269:23:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8280:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8285:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8276:3:3"},"nodeType":"YulFunctionCall","src":"8276:16:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8269:3:3"}]}]},"nodeType":"YulCase","src":"7958:344:3","value":{"kind":"number","nodeType":"YulLiteral","src":"7963:1:3","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"7790:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"7801:1:3","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7786:3:3"},"nodeType":"YulFunctionCall","src":"7786:17:3"},"nodeType":"YulSwitch","src":"7779:523:3"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7549:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7556:3:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7564:3:3","type":""}],"src":"7459:849:3"},{"body":{"nodeType":"YulBlock","src":"8396:262:3","statements":[{"nodeType":"YulVariableDeclaration","src":"8406:53:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8453:5:3"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8420:32:3"},"nodeType":"YulFunctionCall","src":"8420:39:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8410:6:3","type":""}]},{"nodeType":"YulAssignment","src":"8468:68:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8524:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8529:6:3"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8475:48:3"},"nodeType":"YulFunctionCall","src":"8475:61:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8468:3:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8571:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"8578:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8567:3:3"},"nodeType":"YulFunctionCall","src":"8567:16:3"},{"name":"pos","nodeType":"YulIdentifier","src":"8585:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8590:6:3"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8545:21:3"},"nodeType":"YulFunctionCall","src":"8545:52:3"},"nodeType":"YulExpressionStatement","src":"8545:52:3"},{"nodeType":"YulAssignment","src":"8606:46:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8617:3:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8644:6:3"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8622:21:3"},"nodeType":"YulFunctionCall","src":"8622:29:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8613:3:3"},"nodeType":"YulFunctionCall","src":"8613:39:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8606:3:3"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8377:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8384:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8392:3:3","type":""}],"src":"8314:344:3"},{"body":{"nodeType":"YulBlock","src":"8756:272:3","statements":[{"nodeType":"YulVariableDeclaration","src":"8766:53:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8813:5:3"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8780:32:3"},"nodeType":"YulFunctionCall","src":"8780:39:3"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8770:6:3","type":""}]},{"nodeType":"YulAssignment","src":"8828:78:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8894:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8899:6:3"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8835:58:3"},"nodeType":"YulFunctionCall","src":"8835:71:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8828:3:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8941:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"8948:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8937:3:3"},"nodeType":"YulFunctionCall","src":"8937:16:3"},{"name":"pos","nodeType":"YulIdentifier","src":"8955:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"8960:6:3"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"8915:21:3"},"nodeType":"YulFunctionCall","src":"8915:52:3"},"nodeType":"YulExpressionStatement","src":"8915:52:3"},{"nodeType":"YulAssignment","src":"8976:46:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8987:3:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9014:6:3"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8992:21:3"},"nodeType":"YulFunctionCall","src":"8992:29:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8983:3:3"},"nodeType":"YulFunctionCall","src":"8983:39:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8976:3:3"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8737:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8744:3:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8752:3:3","type":""}],"src":"8664:364:3"},{"body":{"nodeType":"YulBlock","src":"9099:53:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9116:3:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9139:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9121:17:3"},"nodeType":"YulFunctionCall","src":"9121:24:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9109:6:3"},"nodeType":"YulFunctionCall","src":"9109:37:3"},"nodeType":"YulExpressionStatement","src":"9109:37:3"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9087:5:3","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9094:3:3","type":""}],"src":"9034:118:3"},{"body":{"nodeType":"YulBlock","src":"9293:138:3","statements":[{"nodeType":"YulAssignment","src":"9304:101:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9392:6:3"},{"name":"pos","nodeType":"YulIdentifier","src":"9401:3:3"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"9311:80:3"},"nodeType":"YulFunctionCall","src":"9311:94:3"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9304:3:3"}]},{"nodeType":"YulAssignment","src":"9415:10:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"9422:3:3"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9415:3:3"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9272:3:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9278:6:3","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9289:3:3","type":""}],"src":"9158:273:3"},{"body":{"nodeType":"YulBlock","src":"9605:245:3","statements":[{"nodeType":"YulAssignment","src":"9615:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9627:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"9638:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9623:3:3"},"nodeType":"YulFunctionCall","src":"9623:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9615:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9662:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"9673:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9658:3:3"},"nodeType":"YulFunctionCall","src":"9658:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9681:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"9687:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9677:3:3"},"nodeType":"YulFunctionCall","src":"9677:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9651:6:3"},"nodeType":"YulFunctionCall","src":"9651:47:3"},"nodeType":"YulExpressionStatement","src":"9651:47:3"},{"nodeType":"YulAssignment","src":"9707:136:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9829:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"9838:4:3"}],"functionName":{"name":"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9715:113:3"},"nodeType":"YulFunctionCall","src":"9715:128:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9707:4:3"}]}]},"name":"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9577:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9589:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9600:4:3","type":""}],"src":"9437:413:3"},{"body":{"nodeType":"YulBlock","src":"9974:195:3","statements":[{"nodeType":"YulAssignment","src":"9984:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9996:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"10007:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9992:3:3"},"nodeType":"YulFunctionCall","src":"9992:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9984:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10031:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"10042:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10027:3:3"},"nodeType":"YulFunctionCall","src":"10027:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10050:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"10056:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10046:3:3"},"nodeType":"YulFunctionCall","src":"10046:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10020:6:3"},"nodeType":"YulFunctionCall","src":"10020:47:3"},"nodeType":"YulExpressionStatement","src":"10020:47:3"},{"nodeType":"YulAssignment","src":"10076:86:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10148:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"10157:4:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10084:63:3"},"nodeType":"YulFunctionCall","src":"10084:78:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10076:4:3"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9946:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9958:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9969:4:3","type":""}],"src":"9856:313:3"},{"body":{"nodeType":"YulBlock","src":"10389:501:3","statements":[{"nodeType":"YulAssignment","src":"10399:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10411:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"10422:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10407:3:3"},"nodeType":"YulFunctionCall","src":"10407:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10399:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10446:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"10457:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10442:3:3"},"nodeType":"YulFunctionCall","src":"10442:17:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10465:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"10471:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10461:3:3"},"nodeType":"YulFunctionCall","src":"10461:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10435:6:3"},"nodeType":"YulFunctionCall","src":"10435:47:3"},"nodeType":"YulExpressionStatement","src":"10435:47:3"},{"nodeType":"YulAssignment","src":"10491:86:3","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10563:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"10572:4:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10499:63:3"},"nodeType":"YulFunctionCall","src":"10499:78:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10491:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10598:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"10609:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10594:3:3"},"nodeType":"YulFunctionCall","src":"10594:18:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10618:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"10624:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10614:3:3"},"nodeType":"YulFunctionCall","src":"10614:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10587:6:3"},"nodeType":"YulFunctionCall","src":"10587:48:3"},"nodeType":"YulExpressionStatement","src":"10587:48:3"},{"nodeType":"YulAssignment","src":"10644:86:3","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10716:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"10725:4:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10652:63:3"},"nodeType":"YulFunctionCall","src":"10652:78:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10644:4:3"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10751:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"10762:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10747:3:3"},"nodeType":"YulFunctionCall","src":"10747:18:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10771:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"10777:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10767:3:3"},"nodeType":"YulFunctionCall","src":"10767:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10740:6:3"},"nodeType":"YulFunctionCall","src":"10740:48:3"},"nodeType":"YulExpressionStatement","src":"10740:48:3"},{"nodeType":"YulAssignment","src":"10797:86:3","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10869:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"10878:4:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10805:63:3"},"nodeType":"YulFunctionCall","src":"10805:78:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10797:4:3"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10345:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10357:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10365:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10373:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10384:4:3","type":""}],"src":"10175:715:3"},{"body":{"nodeType":"YulBlock","src":"10994:124:3","statements":[{"nodeType":"YulAssignment","src":"11004:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11016:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11027:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11012:3:3"},"nodeType":"YulFunctionCall","src":"11012:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11004:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11084:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11097:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11108:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11093:3:3"},"nodeType":"YulFunctionCall","src":"11093:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11040:43:3"},"nodeType":"YulFunctionCall","src":"11040:71:3"},"nodeType":"YulExpressionStatement","src":"11040:71:3"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10966:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10978:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10989:4:3","type":""}],"src":"10896:222:3"},{"body":{"nodeType":"YulBlock","src":"11270:277:3","statements":[{"nodeType":"YulAssignment","src":"11280:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11292:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11303:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11288:3:3"},"nodeType":"YulFunctionCall","src":"11288:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11280:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11360:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11373:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11384:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11369:3:3"},"nodeType":"YulFunctionCall","src":"11369:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11316:43:3"},"nodeType":"YulFunctionCall","src":"11316:71:3"},"nodeType":"YulExpressionStatement","src":"11316:71:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11408:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11419:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11404:3:3"},"nodeType":"YulFunctionCall","src":"11404:18:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11428:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"11434:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11424:3:3"},"nodeType":"YulFunctionCall","src":"11424:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11397:6:3"},"nodeType":"YulFunctionCall","src":"11397:48:3"},"nodeType":"YulExpressionStatement","src":"11397:48:3"},{"nodeType":"YulAssignment","src":"11454:86:3","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11526:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"11535:4:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11462:63:3"},"nodeType":"YulFunctionCall","src":"11462:78:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11454:4:3"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11234:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11246:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11254:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11265:4:3","type":""}],"src":"11124:423:3"},{"body":{"nodeType":"YulBlock","src":"11727:359:3","statements":[{"nodeType":"YulAssignment","src":"11737:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11749:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11760:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:3"},"nodeType":"YulFunctionCall","src":"11745:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11737:4:3"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11817:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11830:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11841:1:3","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11826:3:3"},"nodeType":"YulFunctionCall","src":"11826:17:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11773:43:3"},"nodeType":"YulFunctionCall","src":"11773:71:3"},"nodeType":"YulExpressionStatement","src":"11773:71:3"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11898:6:3"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11911:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11922:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11907:3:3"},"nodeType":"YulFunctionCall","src":"11907:18:3"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11854:43:3"},"nodeType":"YulFunctionCall","src":"11854:72:3"},"nodeType":"YulExpressionStatement","src":"11854:72:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11947:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"11958:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11943:3:3"},"nodeType":"YulFunctionCall","src":"11943:18:3"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11967:4:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"11973:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11963:3:3"},"nodeType":"YulFunctionCall","src":"11963:20:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11936:6:3"},"nodeType":"YulFunctionCall","src":"11936:48:3"},"nodeType":"YulExpressionStatement","src":"11936:48:3"},{"nodeType":"YulAssignment","src":"11993:86:3","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12065:6:3"},{"name":"tail","nodeType":"YulIdentifier","src":"12074:4:3"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12001:63:3"},"nodeType":"YulFunctionCall","src":"12001:78:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11993:4:3"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11683:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11695:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11703:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11711:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11722:4:3","type":""}],"src":"11553:533:3"},{"body":{"nodeType":"YulBlock","src":"12133:88:3","statements":[{"nodeType":"YulAssignment","src":"12143:30:3","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"12153:18:3"},"nodeType":"YulFunctionCall","src":"12153:20:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12143:6:3"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12202:6:3"},{"name":"size","nodeType":"YulIdentifier","src":"12210:4:3"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"12182:19:3"},"nodeType":"YulFunctionCall","src":"12182:33:3"},"nodeType":"YulExpressionStatement","src":"12182:33:3"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"12117:4:3","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12126:6:3","type":""}],"src":"12092:129:3"},{"body":{"nodeType":"YulBlock","src":"12267:35:3","statements":[{"nodeType":"YulAssignment","src":"12277:19:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12293:2:3","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12287:5:3"},"nodeType":"YulFunctionCall","src":"12287:9:3"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12277:6:3"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"12260:6:3","type":""}],"src":"12227:75:3"},{"body":{"nodeType":"YulBlock","src":"12375:241:3","statements":[{"body":{"nodeType":"YulBlock","src":"12480:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12482:16:3"},"nodeType":"YulFunctionCall","src":"12482:18:3"},"nodeType":"YulExpressionStatement","src":"12482:18:3"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12452:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"12460:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12449:2:3"},"nodeType":"YulFunctionCall","src":"12449:30:3"},"nodeType":"YulIf","src":"12446:2:3"},{"nodeType":"YulAssignment","src":"12512:37:3","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12542:6:3"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12520:21:3"},"nodeType":"YulFunctionCall","src":"12520:29:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12512:4:3"}]},{"nodeType":"YulAssignment","src":"12586:23:3","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12598:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"12604:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12594:3:3"},"nodeType":"YulFunctionCall","src":"12594:15:3"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12586:4:3"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12359:6:3","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12370:4:3","type":""}],"src":"12308:308:3"},{"body":{"nodeType":"YulBlock","src":"12704:60:3","statements":[{"nodeType":"YulAssignment","src":"12714:11:3","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12722:3:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12714:4:3"}]},{"nodeType":"YulAssignment","src":"12735:22:3","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"12747:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"12752:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12743:3:3"},"nodeType":"YulFunctionCall","src":"12743:14:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12735:4:3"}]}]},"name":"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12691:3:3","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12699:4:3","type":""}],"src":"12622:142:3"},{"body":{"nodeType":"YulBlock","src":"12827:87:3","statements":[{"nodeType":"YulAssignment","src":"12837:11:3","value":{"name":"ptr","nodeType":"YulIdentifier","src":"12845:3:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12837:4:3"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12865:1:3","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"12868:3:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12858:6:3"},"nodeType":"YulFunctionCall","src":"12858:14:3"},"nodeType":"YulExpressionStatement","src":"12858:14:3"},{"nodeType":"YulAssignment","src":"12881:26:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12899:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12902:4:3","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12889:9:3"},"nodeType":"YulFunctionCall","src":"12889:18:3"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"12881:4:3"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"12814:3:3","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"12822:4:3","type":""}],"src":"12770:144:3"},{"body":{"nodeType":"YulBlock","src":"13004:40:3","statements":[{"nodeType":"YulAssignment","src":"13015:22:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13031:5:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13025:5:3"},"nodeType":"YulFunctionCall","src":"13025:12:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13015:6:3"}]}]},"name":"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12987:5:3","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12997:6:3","type":""}],"src":"12920:124:3"},{"body":{"nodeType":"YulBlock","src":"13109:40:3","statements":[{"nodeType":"YulAssignment","src":"13120:22:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13136:5:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13130:5:3"},"nodeType":"YulFunctionCall","src":"13130:12:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13120:6:3"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13092:5:3","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13102:6:3","type":""}],"src":"13050:99:3"},{"body":{"nodeType":"YulBlock","src":"13240:38:3","statements":[{"nodeType":"YulAssignment","src":"13250:22:3","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13262:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"13267:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13258:3:3"},"nodeType":"YulFunctionCall","src":"13258:14:3"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"13250:4:3"}]}]},"name":"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13227:3:3","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13235:4:3","type":""}],"src":"13155:123:3"},{"body":{"nodeType":"YulBlock","src":"13405:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13422:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"13427:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13415:6:3"},"nodeType":"YulFunctionCall","src":"13415:19:3"},"nodeType":"YulExpressionStatement","src":"13415:19:3"},{"nodeType":"YulAssignment","src":"13443:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13462:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"13467:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13458:3:3"},"nodeType":"YulFunctionCall","src":"13458:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13443:11:3"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13377:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"13382:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13393:11:3","type":""}],"src":"13284:194:3"},{"body":{"nodeType":"YulBlock","src":"13597:34:3","statements":[{"nodeType":"YulAssignment","src":"13607:18:3","value":{"name":"pos","nodeType":"YulIdentifier","src":"13622:3:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13607:11:3"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13569:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"13574:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13585:11:3","type":""}],"src":"13484:147:3"},{"body":{"nodeType":"YulBlock","src":"13723:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13740:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"13745:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13733:6:3"},"nodeType":"YulFunctionCall","src":"13733:19:3"},"nodeType":"YulExpressionStatement","src":"13733:19:3"},{"nodeType":"YulAssignment","src":"13761:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13780:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"13785:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13776:3:3"},"nodeType":"YulFunctionCall","src":"13776:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13761:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13695:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"13700:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13711:11:3","type":""}],"src":"13637:159:3"},{"body":{"nodeType":"YulBlock","src":"13898:73:3","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13915:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"13920:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13908:6:3"},"nodeType":"YulFunctionCall","src":"13908:19:3"},"nodeType":"YulExpressionStatement","src":"13908:19:3"},{"nodeType":"YulAssignment","src":"13936:29:3","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13955:3:3"},{"kind":"number","nodeType":"YulLiteral","src":"13960:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13951:3:3"},"nodeType":"YulFunctionCall","src":"13951:14:3"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13936:11:3"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13870:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"13875:6:3","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13886:11:3","type":""}],"src":"13802:169:3"},{"body":{"nodeType":"YulBlock","src":"14022:32:3","statements":[{"nodeType":"YulAssignment","src":"14032:16:3","value":{"name":"value","nodeType":"YulIdentifier","src":"14043:5:3"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"14032:7:3"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14004:5:3","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"14014:7:3","type":""}],"src":"13977:77:3"},{"body":{"nodeType":"YulBlock","src":"14111:103:3","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14134:3:3"},{"name":"src","nodeType":"YulIdentifier","src":"14139:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"14144:6:3"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14121:12:3"},"nodeType":"YulFunctionCall","src":"14121:30:3"},"nodeType":"YulExpressionStatement","src":"14121:30:3"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14192:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"14197:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14188:3:3"},"nodeType":"YulFunctionCall","src":"14188:16:3"},{"kind":"number","nodeType":"YulLiteral","src":"14206:1:3","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14181:6:3"},"nodeType":"YulFunctionCall","src":"14181:27:3"},"nodeType":"YulExpressionStatement","src":"14181:27:3"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14093:3:3","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14098:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"14103:6:3","type":""}],"src":"14060:154:3"},{"body":{"nodeType":"YulBlock","src":"14269:258:3","statements":[{"nodeType":"YulVariableDeclaration","src":"14279:10:3","value":{"kind":"number","nodeType":"YulLiteral","src":"14288:1:3","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14283:1:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"14348:63:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14373:3:3"},{"name":"i","nodeType":"YulIdentifier","src":"14378:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14369:3:3"},"nodeType":"YulFunctionCall","src":"14369:11:3"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"14392:3:3"},{"name":"i","nodeType":"YulIdentifier","src":"14397:1:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14388:3:3"},"nodeType":"YulFunctionCall","src":"14388:11:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14382:5:3"},"nodeType":"YulFunctionCall","src":"14382:18:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14362:6:3"},"nodeType":"YulFunctionCall","src":"14362:39:3"},"nodeType":"YulExpressionStatement","src":"14362:39:3"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14309:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"14312:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14306:2:3"},"nodeType":"YulFunctionCall","src":"14306:13:3"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14320:19:3","statements":[{"nodeType":"YulAssignment","src":"14322:15:3","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14331:1:3"},{"kind":"number","nodeType":"YulLiteral","src":"14334:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14327:3:3"},"nodeType":"YulFunctionCall","src":"14327:10:3"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14322:1:3"}]}]},"pre":{"nodeType":"YulBlock","src":"14302:3:3","statements":[]},"src":"14298:113:3"},{"body":{"nodeType":"YulBlock","src":"14445:76:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14495:3:3"},{"name":"length","nodeType":"YulIdentifier","src":"14500:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:3"},"nodeType":"YulFunctionCall","src":"14491:16:3"},{"kind":"number","nodeType":"YulLiteral","src":"14509:1:3","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14484:6:3"},"nodeType":"YulFunctionCall","src":"14484:27:3"},"nodeType":"YulExpressionStatement","src":"14484:27:3"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14426:1:3"},{"name":"length","nodeType":"YulIdentifier","src":"14429:6:3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14423:2:3"},"nodeType":"YulFunctionCall","src":"14423:13:3"},"nodeType":"YulIf","src":"14420:2:3"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14251:3:3","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14256:3:3","type":""},{"name":"length","nodeType":"YulTypedName","src":"14261:6:3","type":""}],"src":"14220:307:3"},{"body":{"nodeType":"YulBlock","src":"14584:269:3","statements":[{"nodeType":"YulAssignment","src":"14594:22:3","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14608:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"14614:1:3","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"14604:3:3"},"nodeType":"YulFunctionCall","src":"14604:12:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14594:6:3"}]},{"nodeType":"YulVariableDeclaration","src":"14625:38:3","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"14655:4:3"},{"kind":"number","nodeType":"YulLiteral","src":"14661:1:3","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14651:3:3"},"nodeType":"YulFunctionCall","src":"14651:12:3"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"14629:18:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"14702:51:3","statements":[{"nodeType":"YulAssignment","src":"14716:27:3","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14730:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14738:4:3","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14726:3:3"},"nodeType":"YulFunctionCall","src":"14726:17:3"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"14716:6:3"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14682:18:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14675:6:3"},"nodeType":"YulFunctionCall","src":"14675:26:3"},"nodeType":"YulIf","src":"14672:2:3"},{"body":{"nodeType":"YulBlock","src":"14805:42:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"14819:16:3"},"nodeType":"YulFunctionCall","src":"14819:18:3"},"nodeType":"YulExpressionStatement","src":"14819:18:3"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"14769:18:3"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14792:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"14800:2:3","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14789:2:3"},"nodeType":"YulFunctionCall","src":"14789:14:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14766:2:3"},"nodeType":"YulFunctionCall","src":"14766:38:3"},"nodeType":"YulIf","src":"14763:2:3"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"14568:4:3","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"14577:6:3","type":""}],"src":"14533:320:3"},{"body":{"nodeType":"YulBlock","src":"14902:238:3","statements":[{"nodeType":"YulVariableDeclaration","src":"14912:58:3","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14934:6:3"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14964:4:3"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14942:21:3"},"nodeType":"YulFunctionCall","src":"14942:27:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14930:3:3"},"nodeType":"YulFunctionCall","src":"14930:40:3"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"14916:10:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"15081:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15083:16:3"},"nodeType":"YulFunctionCall","src":"15083:18:3"},"nodeType":"YulExpressionStatement","src":"15083:18:3"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"15024:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"15036:18:3","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15021:2:3"},"nodeType":"YulFunctionCall","src":"15021:34:3"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"15060:10:3"},{"name":"memPtr","nodeType":"YulIdentifier","src":"15072:6:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15057:2:3"},"nodeType":"YulFunctionCall","src":"15057:22:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"15018:2:3"},"nodeType":"YulFunctionCall","src":"15018:62:3"},"nodeType":"YulIf","src":"15015:2:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15119:2:3","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"15123:10:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15112:6:3"},"nodeType":"YulFunctionCall","src":"15112:22:3"},"nodeType":"YulExpressionStatement","src":"15112:22:3"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14888:6:3","type":""},{"name":"size","nodeType":"YulTypedName","src":"14896:4:3","type":""}],"src":"14859:281:3"},{"body":{"nodeType":"YulBlock","src":"15189:190:3","statements":[{"nodeType":"YulAssignment","src":"15199:33:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15226:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15208:17:3"},"nodeType":"YulFunctionCall","src":"15208:24:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15199:5:3"}]},{"body":{"nodeType":"YulBlock","src":"15322:22:3","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15324:16:3"},"nodeType":"YulFunctionCall","src":"15324:18:3"},"nodeType":"YulExpressionStatement","src":"15324:18:3"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15247:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"15254:66:3","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15244:2:3"},"nodeType":"YulFunctionCall","src":"15244:77:3"},"nodeType":"YulIf","src":"15241:2:3"},{"nodeType":"YulAssignment","src":"15353:20:3","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15364:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"15371:1:3","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15360:3:3"},"nodeType":"YulFunctionCall","src":"15360:13:3"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15353:3:3"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15175:5:3","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15185:3:3","type":""}],"src":"15146:233:3"},{"body":{"nodeType":"YulBlock","src":"15413:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15430:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15433:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15423:6:3"},"nodeType":"YulFunctionCall","src":"15423:88:3"},"nodeType":"YulExpressionStatement","src":"15423:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15527:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15530:4:3","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15520:6:3"},"nodeType":"YulFunctionCall","src":"15520:15:3"},"nodeType":"YulExpressionStatement","src":"15520:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15551:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15554:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15544:6:3"},"nodeType":"YulFunctionCall","src":"15544:15:3"},"nodeType":"YulExpressionStatement","src":"15544:15:3"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15385:180:3"},{"body":{"nodeType":"YulBlock","src":"15599:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15616:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15619:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15609:6:3"},"nodeType":"YulFunctionCall","src":"15609:88:3"},"nodeType":"YulExpressionStatement","src":"15609:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15713:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15716:4:3","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15706:6:3"},"nodeType":"YulFunctionCall","src":"15706:15:3"},"nodeType":"YulExpressionStatement","src":"15706:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15737:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15740:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15730:6:3"},"nodeType":"YulFunctionCall","src":"15730:15:3"},"nodeType":"YulExpressionStatement","src":"15730:15:3"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15571:180:3"},{"body":{"nodeType":"YulBlock","src":"15785:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15802:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15805:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15795:6:3"},"nodeType":"YulFunctionCall","src":"15795:88:3"},"nodeType":"YulExpressionStatement","src":"15795:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15899:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15902:4:3","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15892:6:3"},"nodeType":"YulFunctionCall","src":"15892:15:3"},"nodeType":"YulExpressionStatement","src":"15892:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15923:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15926:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15916:6:3"},"nodeType":"YulFunctionCall","src":"15916:15:3"},"nodeType":"YulExpressionStatement","src":"15916:15:3"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"15757:180:3"},{"body":{"nodeType":"YulBlock","src":"15971:152:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15988:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15991:77:3","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15981:6:3"},"nodeType":"YulFunctionCall","src":"15981:88:3"},"nodeType":"YulExpressionStatement","src":"15981:88:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16085:1:3","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16088:4:3","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16078:6:3"},"nodeType":"YulFunctionCall","src":"16078:15:3"},"nodeType":"YulExpressionStatement","src":"16078:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16109:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16112:4:3","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16102:6:3"},"nodeType":"YulFunctionCall","src":"16102:15:3"},"nodeType":"YulExpressionStatement","src":"16102:15:3"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15943:180:3"},{"body":{"nodeType":"YulBlock","src":"16218:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16235:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16238:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16228:6:3"},"nodeType":"YulFunctionCall","src":"16228:12:3"},"nodeType":"YulExpressionStatement","src":"16228:12:3"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"16129:117:3"},{"body":{"nodeType":"YulBlock","src":"16341:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16358:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16361:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16351:6:3"},"nodeType":"YulFunctionCall","src":"16351:12:3"},"nodeType":"YulExpressionStatement","src":"16351:12:3"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"16252:117:3"},{"body":{"nodeType":"YulBlock","src":"16464:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16481:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16484:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16474:6:3"},"nodeType":"YulFunctionCall","src":"16474:12:3"},"nodeType":"YulExpressionStatement","src":"16474:12:3"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"16375:117:3"},{"body":{"nodeType":"YulBlock","src":"16587:28:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16604:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16607:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16597:6:3"},"nodeType":"YulFunctionCall","src":"16597:12:3"},"nodeType":"YulExpressionStatement","src":"16597:12:3"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"16498:117:3"},{"body":{"nodeType":"YulBlock","src":"16669:54:3","statements":[{"nodeType":"YulAssignment","src":"16679:38:3","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16697:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"16704:2:3","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16693:3:3"},"nodeType":"YulFunctionCall","src":"16693:14:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16713:2:3","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16709:3:3"},"nodeType":"YulFunctionCall","src":"16709:7:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16689:3:3"},"nodeType":"YulFunctionCall","src":"16689:28:3"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16679:6:3"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16652:5:3","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"16662:6:3","type":""}],"src":"16621:102:3"},{"body":{"nodeType":"YulBlock","src":"16772:79:3","statements":[{"body":{"nodeType":"YulBlock","src":"16829:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16838:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16841:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16831:6:3"},"nodeType":"YulFunctionCall","src":"16831:12:3"},"nodeType":"YulExpressionStatement","src":"16831:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16795:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16820:5:3"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16802:17:3"},"nodeType":"YulFunctionCall","src":"16802:24:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16792:2:3"},"nodeType":"YulFunctionCall","src":"16792:35:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16785:6:3"},"nodeType":"YulFunctionCall","src":"16785:43:3"},"nodeType":"YulIf","src":"16782:2:3"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16765:5:3","type":""}],"src":"16729:122:3"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101585760003560e01c806382fcc732116100c3578063b16060a61161007c578063b16060a614610478578063c04e743014610482578063c04fe9781461049e578063c29595c5146104bc578063c4c2e364146104d8578063e32acc1a1461050857610158565b806382fcc7321461037e578063881de858146103ae5780638d3d2595146103ca57806397ee7606146103fa578063a1ca917814610418578063aa4cdf2a1461044857610158565b80632d9cb1ab116101155780632d9cb1ab1461026f5780634162169f1461029f578063468d0c80146102bd5780634be7adb5146102ee5780635d907da11461031e57806371085cab1461034e57610158565b8063109ac9701461015d578063131d44f21461018d5780631ba44c4c146101bd5780631e9ac9f5146101ef57806327a568b91461021f57806329b56f6014610251575b600080fd5b61017760048036038101906101729190611bf0565b610538565b6040516101849190611f53565b60405180910390f35b6101a760048036038101906101a29190611bf0565b6106a8565b6040516101b49190611f53565b60405180910390f35b6101d760048036038101906101d29190611bf0565b610818565b6040516101e69392919061202e565b60405180910390f35b61020960048036038101906102049190611ad3565b6108ca565b6040516102169190611fe3565b60405180910390f35b61023960048036038101906102349190611bf0565b61093c565b60405161024893929190611f97565b60405180910390f35b610259610afe565b6040516102669190611f53565b60405180910390f35b61028960048036038101906102849190611b94565b610c39565b6040516102969190611fe3565b60405180910390f35b6102a7610cb2565b6040516102b49190611f53565b60405180910390f35b6102d760048036038101906102d29190611bf0565b610dab565b6040516102e5929190611ffe565b60405180910390f35b61030860048036038101906103039190611d04565b610e57565b6040516103159190611f53565b60405180910390f35b61033860048036038101906103339190611bf0565b610fe9565b6040516103459190611f75565b60405180910390f35b61036860048036038101906103639190611b94565b611091565b6040516103759190611fe3565b60405180910390f35b61039860048036038101906103939190611d44565b61110a565b6040516103a59190611fe3565b60405180910390f35b6103c860048036038101906103c39190611c79565b611194565b005b6103e460048036038101906103df9190611bf0565b6111ef565b6040516103f19190611f75565b60405180910390f35b610402611297565b60405161040f9190611f53565b60405180910390f35b610432600480360381019061042d9190611ad3565b6113d2565b60405161043f9190611fe3565b60405180910390f35b610462600480360381019061045d9190611ad3565b611444565b60405161046f9190611fe3565b60405180910390f35b6104806114cc565b005b61049c60048036038101906104979190611c1d565b611649565b005b6104a6611678565b6040516104b39190611f53565b60405180910390f35b6104d660048036038101906104d19190611c1d565b6117b2565b005b6104f260048036038101906104ed9190611b1c565b6117e1565b6040516104ff9190611fe3565b60405180910390f35b610522600480360381019061051d9190611bf0565b6118c3565b60405161052f9190611f75565b60405180910390f35b6060600060015467ffffffffffffffff811115610558576105576122cd565b5b60405190808252806020026020018201604052801561058b57816020015b60608152602001906001900390816105765790505b509050600080600090505b60015481101561069d57846005600083815260200190815260200160002060000154141561068a576005600082815260200190815260200160002060010180546105df90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461060b90612194565b80156106585780601f1061062d57610100808354040283529160200191610658565b820191906000526020600020905b81548152906001019060200180831161063b57829003601f168201915b50505050508383815181106106705761066f61229e565b5b60200260200101819052508180610686906121f7565b9250505b8080610695906121f7565b915050610596565b508192505050919050565b6060600060025467ffffffffffffffff8111156106c8576106c76122cd565b5b6040519080825280602002602001820160405280156106fb57816020015b60608152602001906001900390816106e65790505b509050600080600090505b60025481101561080d5784600660008381526020019081526020016000206000015414156107ec5760066000828152602001908152602001600020600101805461074f90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461077b90612194565b80156107c85780601f1061079d576101008083540402835291602001916107c8565b820191906000526020600020905b8154815290600101906020018083116107ab57829003601f168201915b50505050508383815181106107e0576107df61229e565b5b60200260200101819052505b81806107f7906121f7565b9250508080610805906121f7565b915050610706565b508192505050919050565b600760205280600052604060002060009150905080600001549080600101549080600201805461084790612194565b80601f016020809104026020016040519081016040528092919081815260200182805461087390612194565b80156108c05780601f10610895576101008083540402835291602001916108c0565b820191906000526020600020905b8154815290600101906020018083116108a357829003601f168201915b5050505050905083565b600080600090505b600154811015610931578280519060200120600560008381526020019081526020016000206001016040516109079190611f3c565b6040518091039020141561091e5780915050610937565b8080610929906121f7565b9150506108d2565b50600090505b919050565b600460205280600052604060002060009150905080600001805461095f90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461098b90612194565b80156109d85780601f106109ad576101008083540402835291602001916109d8565b820191906000526020600020905b8154815290600101906020018083116109bb57829003601f168201915b5050505050908060010180546109ed90612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1990612194565b8015610a665780601f10610a3b57610100808354040283529160200191610a66565b820191906000526020600020905b815481529060010190602001808311610a4957829003601f168201915b505050505090806002018054610a7b90612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa790612194565b8015610af45780601f10610ac957610100808354040283529160200191610af4565b820191906000526020600020905b815481529060010190602001808311610ad757829003601f168201915b5050505050905083565b6060600060015467ffffffffffffffff811115610b1e57610b1d6122cd565b5b604051908082528060200260200182016040528015610b5157816020015b6060815260200190600190039081610b3c5790505b50905060005b600154811015610c3157600560008281526020019081526020016000206001018054610b8290612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610bae90612194565b8015610bfb5780601f10610bd057610100808354040283529160200191610bfb565b820191906000526020600020905b815481529060010190602001808311610bde57829003601f168201915b5050505050828281518110610c1357610c1261229e565b5b60200260200101819052508080610c29906121f7565b915050610b57565b508091505090565b6000604051806040016040528083815260200184815250600660006002548152602001908152602001600020600082015181600001556020820151816001019080519060200190610c8b92919061196b565b5090505060026000815480929190610ca2906121f7565b9190505550600254905092915050565b6060610d286040518060400160405280600981526020017f77616c6c657420233100000000000000000000000000000000000000000000008152506040518060400160405280600f81526020017f44414f206d6574616461746120233100000000000000000000000000000000008152506117e1565b50610d9d6040518060400160405280600981526020017f77616c6c657420233200000000000000000000000000000000000000000000008152506040518060400160405280600f81526020017f44414f206d6574616461746120233200000000000000000000000000000000008152506117e1565b50610da6611678565b905090565b6006602052806000526040600020600091509050806000015490806001018054610dd490612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0090612194565b8015610e4d5780601f10610e2257610100808354040283529160200191610e4d565b820191906000526020600020905b815481529060010190602001808311610e3057829003601f168201915b5050505050905082565b6060600060035467ffffffffffffffff811115610e7757610e766122cd565b5b604051908082528060200260200182016040528015610eaa57816020015b6060815260200190600190039081610e955790505b509050600080600090505b600354811015610fdd57856007600083815260200190815260200160002060000154148015610ef95750846007600083815260200190815260200160002060010154145b15610fbc57600760008281526020019081526020016000206002018054610f1f90612194565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4b90612194565b8015610f985780601f10610f6d57610100808354040283529160200191610f98565b820191906000526020600020905b815481529060010190602001808311610f7b57829003601f168201915b5050505050838381518110610fb057610faf61229e565b5b60200260200101819052505b8180610fc7906121f7565b9250508080610fd5906121f7565b915050610eb5565b50819250505092915050565b606060046000838152602001908152602001600020600101805461100c90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461103890612194565b80156110855780601f1061105a57610100808354040283529160200191611085565b820191906000526020600020905b81548152906001019060200180831161106857829003601f168201915b50505050509050919050565b60006040518060400160405280838152602001848152506005600060015481526020019081526020016000206000820151816000015560208201518160010190805190602001906110e392919061196b565b50905050600160008154809291906110fa906121f7565b9190505550600154905092915050565b60006040518060600160405280858152602001848152602001838152506007600060035481526020019081526020016000206000820151816000015560208201518160010155604082015181600201908051906020019061116c92919061196b565b5090505060036000815480929190611183906121f7565b919050555060035490509392505050565b816004600085815260200190815260200160002060000190805190602001906111be92919061196b565b50806004600085815260200190815260200160002060010190805190602001906111e992919061196b565b50505050565b606060066000838152602001908152602001600020600101805461121290612194565b80601f016020809104026020016040519081016040528092919081815260200182805461123e90612194565b801561128b5780601f106112605761010080835404028352916020019161128b565b820191906000526020600020905b81548152906001019060200180831161126e57829003601f168201915b50505050509050919050565b6060600060025467ffffffffffffffff8111156112b7576112b66122cd565b5b6040519080825280602002602001820160405280156112ea57816020015b60608152602001906001900390816112d55790505b50905060005b6002548110156113ca5760066000828152602001908152602001600020600101805461131b90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461134790612194565b80156113945780601f1061136957610100808354040283529160200191611394565b820191906000526020600020905b81548152906001019060200180831161137757829003601f168201915b50505050508282815181106113ac576113ab61229e565b5b602002602001018190525080806113c2906121f7565b9150506112f0565b508091505090565b600080600090505b6002548110156114395782805190602001206006600083815260200190815260200160002060010160405161140f9190611f3c565b60405180910390201415611426578091505061143f565b8080611431906121f7565b9150506113da565b50600090505b919050565b600080600090505b6002548110156114c1578280519060200120600660008381526020019081526020016000206001016040516114819190611f3c565b604051809103902014156114ae5760066000828152602001908152602001600020600001549150506114c7565b80806114b9906121f7565b91505061144c565b50600090505b919050565b6000808190555060006001819055506000600281905550600060038190555060005b60005481101561155157600460008281526020019081526020016000206000808201600061151c91906119f1565b60018201600061152c91906119f1565b60028201600061153c91906119f1565b50508080611549906121f7565b9150506114ee565b5060005b6001548110156115a0576005600082815260200190815260200160002060008082016000905560018201600061158b91906119f1565b50508080611598906121f7565b915050611555565b5060005b6002548110156115ef57600660008281526020019081526020016000206000808201600090556001820160006115da91906119f1565b505080806115e7906121f7565b9150506115a4565b5060005b6003548110156116465760076000828152602001908152602001600020600080820160009055600182016000905560028201600061163191906119f1565b5050808061163e906121f7565b9150506115f3565b50565b8060066000848152602001908152602001600020600101908051906020019061167392919061196b565b505050565b60606000805467ffffffffffffffff811115611697576116966122cd565b5b6040519080825280602002602001820160405280156116ca57816020015b60608152602001906001900390816116b55790505b50905060005b6000548110156117aa576004600082815260200190815260200160002060010180546116fb90612194565b80601f016020809104026020016040519081016040528092919081815260200182805461172790612194565b80156117745780601f1061174957610100808354040283529160200191611774565b820191906000526020600020905b81548152906001019060200180831161175757829003601f168201915b505050505082828151811061178c5761178b61229e565b5b602002602001018190525080806117a2906121f7565b9150506116d0565b508091505090565b806005600084815260200190815260200160002060010190805190602001906117dc92919061196b565b505050565b600060405180606001604052808481526020018381526020016040518060400160405280600581526020017f46616c73650000000000000000000000000000000000000000000000000000008152508152506004600080548152602001908152602001600020600082015181600001908051906020019061186392919061196b565b50602082015181600101908051906020019061188092919061196b565b50604082015181600201908051906020019061189d92919061196b565b509050506000808154809291906118b3906121f7565b9190505550600054905092915050565b60606005600083815260200190815260200160002060010180546118e690612194565b80601f016020809104026020016040519081016040528092919081815260200182805461191290612194565b801561195f5780601f106119345761010080835404028352916020019161195f565b820191906000526020600020905b81548152906001019060200180831161194257829003601f168201915b50505050509050919050565b82805461197790612194565b90600052602060002090601f01602090048101928261199957600085556119e0565b82601f106119b257805160ff19168380011785556119e0565b828001600101855582156119e0579182015b828111156119df5782518255916020019190600101906119c4565b5b5090506119ed9190611a31565b5090565b5080546119fd90612194565b6000825580601f10611a0f5750611a2e565b601f016020900490600052602060002090810190611a2d9190611a31565b5b50565b5b80821115611a4a576000816000905550600101611a32565b5090565b6000611a61611a5c84612091565b61206c565b905082815260208101848484011115611a7d57611a7c612301565b5b611a88848285612152565b509392505050565b600082601f830112611aa557611aa46122fc565b5b8135611ab5848260208601611a4e565b91505092915050565b600081359050611acd81612321565b92915050565b600060208284031215611ae957611ae861230b565b5b600082013567ffffffffffffffff811115611b0757611b06612306565b5b611b1384828501611a90565b91505092915050565b60008060408385031215611b3357611b3261230b565b5b600083013567ffffffffffffffff811115611b5157611b50612306565b5b611b5d85828601611a90565b925050602083013567ffffffffffffffff811115611b7e57611b7d612306565b5b611b8a85828601611a90565b9150509250929050565b60008060408385031215611bab57611baa61230b565b5b600083013567ffffffffffffffff811115611bc957611bc8612306565b5b611bd585828601611a90565b9250506020611be685828601611abe565b9150509250929050565b600060208284031215611c0657611c0561230b565b5b6000611c1484828501611abe565b91505092915050565b60008060408385031215611c3457611c3361230b565b5b6000611c4285828601611abe565b925050602083013567ffffffffffffffff811115611c6357611c62612306565b5b611c6f85828601611a90565b9150509250929050565b600080600060608486031215611c9257611c9161230b565b5b6000611ca086828701611abe565b935050602084013567ffffffffffffffff811115611cc157611cc0612306565b5b611ccd86828701611a90565b925050604084013567ffffffffffffffff811115611cee57611ced612306565b5b611cfa86828701611a90565b9150509250925092565b60008060408385031215611d1b57611d1a61230b565b5b6000611d2985828601611abe565b9250506020611d3a85828601611abe565b9150509250929050565b600080600060608486031215611d5d57611d5c61230b565b5b6000611d6b86828701611abe565b9350506020611d7c86828701611abe565b925050604084013567ffffffffffffffff811115611d9d57611d9c612306565b5b611da986828701611a90565b9150509250925092565b6000611dbf8383611ebb565b905092915050565b6000611dd2826120e7565b611ddc818561210a565b935083602082028501611dee856120c2565b8060005b85811015611e2a5784840389528151611e0b8582611db3565b9450611e16836120fd565b925060208a01995050600181019050611df2565b50829750879550505050505092915050565b60008154611e4981612194565b611e53818661211b565b94506001821660008114611e6e5760018114611e7f57611eb2565b60ff19831686528186019350611eb2565b611e88856120d2565b60005b83811015611eaa57815481890152600182019150602081019050611e8b565b838801955050505b50505092915050565b6000611ec6826120f2565b611ed08185612126565b9350611ee0818560208601612161565b611ee981612310565b840191505092915050565b6000611eff826120f2565b611f098185612137565b9350611f19818560208601612161565b611f2281612310565b840191505092915050565b611f3681612148565b82525050565b6000611f488284611e3c565b915081905092915050565b60006020820190508181036000830152611f6d8184611dc7565b905092915050565b60006020820190508181036000830152611f8f8184611ef4565b905092915050565b60006060820190508181036000830152611fb18186611ef4565b90508181036020830152611fc58185611ef4565b90508181036040830152611fd98184611ef4565b9050949350505050565b6000602082019050611ff86000830184611f2d565b92915050565b60006040820190506120136000830185611f2d565b81810360208301526120258184611ef4565b90509392505050565b60006060820190506120436000830186611f2d565b6120506020830185611f2d565b81810360408301526120628184611ef4565b9050949350505050565b6000612076612087565b905061208282826121c6565b919050565b6000604051905090565b600067ffffffffffffffff8211156120ac576120ab6122cd565b5b6120b582612310565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561217f578082015181840152602081019050612164565b8381111561218e576000848401525b50505050565b600060028204905060018216806121ac57607f821691505b602082108114156121c0576121bf61226f565b5b50919050565b6121cf82612310565b810181811067ffffffffffffffff821117156121ee576121ed6122cd565b5b80604052505050565b600061220282612148565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561223557612234612240565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61232a81612148565b811461233557600080fd5b5056fea26469706673582212203cb0f25cdab881faad3f80d694ef0e6c8afc203623366b87a3672adfe516dc2b64736f6c63430008060033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82FCC732 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB16060A6 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB16060A6 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xC04E7430 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xC04FE978 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xC29595C5 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xC4C2E364 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xE32ACC1A EQ PUSH2 0x508 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x82FCC732 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x881DE858 EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x8D3D2595 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x97EE7606 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xA1CA9178 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xAA4CDF2A EQ PUSH2 0x448 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2D9CB1AB GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2D9CB1AB EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x4162169F EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x468D0C80 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x4BE7ADB5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x5D907DA1 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x71085CAB EQ PUSH2 0x34E JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x109AC970 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x131D44F2 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x1BA44C4C EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x1E9AC9F5 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x27A568B9 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x29B56F60 EQ PUSH2 0x251 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x818 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x8CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x308 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1B94 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x1D44 JUMP JUMPDEST PUSH2 0x110A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x1194 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x402 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x480 PUSH2 0x14CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x1C1D JUMP JUMPDEST PUSH2 0x17B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4ED SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH2 0x18C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x58B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x576 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x69D JUMPI DUP5 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x68A JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x5DF SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x60B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x658 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x658 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x63B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x686 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x695 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x596 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6FB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x6E6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x80D JUMPI DUP5 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x7EC JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x74F SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7E0 JUMPI PUSH2 0x7DF PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0x7F7 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x805 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x706 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x847 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x873 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x895 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x931 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x91E JUMPI DUP1 SWAP2 POP POP PUSH2 0x937 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x929 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x8D2 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x95F SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x98B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x9ED SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA19 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA66 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA3B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA66 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA49 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xA7B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAA7 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1D PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB51 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB3C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xC31 JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xB82 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBAE SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBD0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xC29 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB57 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xC8B SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCA2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x2 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD28 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77616C6C65742023310000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F206D657461646174612023310000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x17E1 JUMP JUMPDEST POP PUSH2 0xD9D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x77616C6C65742023320000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F206D657461646174612023320000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x17E1 JUMP JUMPDEST POP PUSH2 0xDA6 PUSH2 0x1678 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xDD4 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE00 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE22 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE30 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x3 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEAA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE95 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xFDD JUMPI DUP6 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0xEF9 JUMPI POP DUP5 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xFBC JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xF1F SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF4B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF98 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF6D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF98 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF7B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFB0 JUMPI PUSH2 0xFAF PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP2 DUP1 PUSH2 0xFC7 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xFD5 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB5 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x100C SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1038 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1085 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1085 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1068 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x10E3 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x10FA SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x116C SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1183 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x3 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11BE SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x11E9 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1212 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x123E SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1260 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x128B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x126E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12EA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x12D5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x13CA JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x131B SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1347 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1394 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1394 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1377 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x13C2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12F0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1439 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x140F SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x1426 JUMPI DUP1 SWAP2 POP POP PUSH2 0x143F JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1431 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13DA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x14C1 JUMPI DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ ISZERO PUSH2 0x14AE JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP POP PUSH2 0x14C7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x14B9 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x144C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x151C SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x153C SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1549 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14EE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1598 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1555 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x15EF JUMPI PUSH1 0x6 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x15E7 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15A4 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1646 JUMPI PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x163E SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F3 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1673 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1697 JUMPI PUSH2 0x1696 PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16CA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x16B5 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x17AA JUMPI PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x16FB SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1727 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1774 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1749 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1774 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1757 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x178C JUMPI PUSH2 0x178B PUSH2 0x229E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x17A2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16D0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x17DC SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C7365000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1863 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1880 SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x189D SWAP3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18B3 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x18E6 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1912 SWAP1 PUSH2 0x2194 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x195F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1934 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x195F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1942 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1977 SWAP1 PUSH2 0x2194 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1999 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x19E0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x19B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x19E0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x19E0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x19DF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x19C4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x19ED SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x19FD SWAP1 PUSH2 0x2194 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1A0F JUMPI POP PUSH2 0x1A2E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A2D SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1A4A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1A32 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A61 PUSH2 0x1A5C DUP5 PUSH2 0x2091 JUMP JUMPDEST PUSH2 0x206C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A7D JUMPI PUSH2 0x1A7C PUSH2 0x2301 JUMP JUMPDEST JUMPDEST PUSH2 0x1A88 DUP5 DUP3 DUP6 PUSH2 0x2152 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AA5 JUMPI PUSH2 0x1AA4 PUSH2 0x22FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AB5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ACD DUP2 PUSH2 0x2321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B07 JUMPI PUSH2 0x1B06 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1B13 DUP5 DUP3 DUP6 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B33 JUMPI PUSH2 0x1B32 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B51 JUMPI PUSH2 0x1B50 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1B5D DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1B8A DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BAB JUMPI PUSH2 0x1BAA PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BC9 JUMPI PUSH2 0x1BC8 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1BD5 DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C06 JUMPI PUSH2 0x1C05 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C14 DUP5 DUP3 DUP6 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C42 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C63 JUMPI PUSH2 0x1C62 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1C6F DUP6 DUP3 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CC1 JUMPI PUSH2 0x1CC0 PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1CCD DUP7 DUP3 DUP8 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1CFA DUP7 DUP3 DUP8 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D1B JUMPI PUSH2 0x1D1A PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D29 DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D3A DUP6 DUP3 DUP7 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D5D JUMPI PUSH2 0x1D5C PUSH2 0x230B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6B DUP7 DUP3 DUP8 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D7C DUP7 DUP3 DUP8 ADD PUSH2 0x1ABE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x2306 JUMP JUMPDEST JUMPDEST PUSH2 0x1DA9 DUP7 DUP3 DUP8 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBF DUP4 DUP4 PUSH2 0x1EBB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD2 DUP3 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0x1DDC DUP2 DUP6 PUSH2 0x210A JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x1DEE DUP6 PUSH2 0x20C2 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1E2A JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1E0B DUP6 DUP3 PUSH2 0x1DB3 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E16 DUP4 PUSH2 0x20FD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DF2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x1E49 DUP2 PUSH2 0x2194 JUMP JUMPDEST PUSH2 0x1E53 DUP2 DUP7 PUSH2 0x211B JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x1E6E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E7F JUMPI PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0x1E88 DUP6 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EAA JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E8B JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EC6 DUP3 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x1ED0 DUP2 DUP6 PUSH2 0x2126 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EE0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x1EE9 DUP2 PUSH2 0x2310 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFF DUP3 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x1F09 DUP2 DUP6 PUSH2 0x2137 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F19 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2161 JUMP JUMPDEST PUSH2 0x1F22 DUP2 PUSH2 0x2310 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F36 DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F48 DUP3 DUP5 PUSH2 0x1E3C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 DUP5 PUSH2 0x1DC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8F DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB1 DUP2 DUP7 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1FC5 DUP2 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1FD9 DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2013 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2025 DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2043 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F2D JUMP JUMPDEST PUSH2 0x2050 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F2D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2062 DUP2 DUP5 PUSH2 0x1EF4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2076 PUSH2 0x2087 JUMP JUMPDEST SWAP1 POP PUSH2 0x2082 DUP3 DUP3 PUSH2 0x21C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x22CD JUMP JUMPDEST JUMPDEST PUSH2 0x20B5 DUP3 PUSH2 0x2310 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x217F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2164 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x218E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x21C0 JUMPI PUSH2 0x21BF PUSH2 0x226F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21CF DUP3 PUSH2 0x2310 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21EE JUMPI PUSH2 0x21ED PUSH2 0x22CD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP3 PUSH2 0x2148 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x2240 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232A DUP2 PUSH2 0x2148 JUMP JUMPDEST DUP2 EQ PUSH2 0x2335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xB0 CALLCODE 0x5C 0xDA 0xB8 DUP2 STATICCALL 0xAD EXTCODEHASH DUP1 0xD6 SWAP5 0xEF 0xE PUSH13 0x8AFC203623366B87A3672ADFE5 AND 0xDC 0x2B PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ","sourceMap":"113:7663:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3080:467;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4832:471;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1105:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3561:312;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2764:308;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4063:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7579:194;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;972:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6524:563;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2161:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2335:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6170:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1568:273;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5982:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4512:312;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5317:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5645:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7095:462;;;:::i;:::-;;4344:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1849:302;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2604:152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1268:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3881:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3080:467;3151:15;3218:26;3260:9;;3247:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:52;;3281:17;3314:9;3326:1;3314:13;;3309:201;3333:9;;3329:1;:13;3309:201;;;3390:7;3366:10;:13;3377:1;3366:13;;;;;;;;;;;:20;;;:31;3362:137;;;3437:10;:13;3448:1;3437:13;;;;;;;;;;;:22;;3413:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;3424:9;3413:21;;;;;;;;:::i;:::-;;;;;;;:46;;;;3474:11;;;;;:::i;:::-;;;;3362:137;3344:3;;;;;:::i;:::-;;;;3309:201;;;;3529:10;3522:17;;;;3080:467;;;:::o;4832:471::-;4905:15;4973:26;5015:10;;5002:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4973:53;;5045:17;5078:9;5090:1;5078:13;;5073:193;5097:10;;5093:1;:14;5073:193;;;5157:8;5131:11;:14;5143:1;5131:14;;;;;;;;;;;:22;;;:34;5127:101;;;5204:11;:14;5216:1;5204:14;;;;;;;;;;;:24;;5180:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;5191:9;5180:21;;;;;;;;:::i;:::-;;;;;;;:48;;;;5127:101;5243:11;;;;;:::i;:::-;;;;5109:3;;;;;:::i;:::-;;;;5073:193;;;;5285:10;5278:17;;;;4832:471;;;:::o;1105:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3561:312::-;3640:7;3699:9;3711:1;3699:13;;3694:151;3718:9;;3714:1;:13;3694:151;;;3811:9;3795:27;;;;;;3767:10;:13;3778:1;3767:13;;;;;;;;;;;:22;;3751:40;;;;;;:::i;:::-;;;;;;;;:71;3747:86;;;3832:1;3824:9;;;;;3747:86;3729:3;;;;;:::i;:::-;;;;3694:151;;;;3864:1;3857:8;;3561:312;;;;:::o;694:51::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2764:308::-;2810:15;2867:26;2909:9;;2896:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2867:52;;2935:9;2930:105;2954:9;;2950:1;:13;2930:105;;;3001:10;:13;3012:1;3001:13;;;;;;;;;;;:22;;2985:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;2996:1;2985:13;;;;;;;;:::i;:::-;;;;;;;:38;;;;2965:3;;;;;:::i;:::-;;;;2930:105;;;;3054:10;3047:17;;;2764:308;:::o;4063:273::-;4145:7;4237:38;;;;;;;;4254:8;4237:38;;;;4264:10;4237:38;;;4211:11;:23;4223:10;;4211:23;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4286:10;;:12;;;;;;;;;:::i;:::-;;;;;;4318:10;;4311:17;;4063:273;;;;:::o;7579:194::-;7610:15;7638:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:42::i;:::-;;7691;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;:42::i;:::-;;7751:14;:12;:14::i;:::-;7744:21;;7579:194;:::o;972:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6524:563::-;6617:15;6692:26;6734:15;;6721:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6692:58;;6761:17;6794:9;6806:1;6794:13;;6789:263;6813:15;;6809:1;:19;6789:263;;;6887:8;6852:20;:23;6873:1;6852:23;;;;;;;;;;;:31;;;:43;:92;;;;;6935:9;6899:20;:23;6920:1;6899:23;;;;;;;;;;;:32;;;:45;6852:92;6848:166;;;6984:20;:23;7005:1;6984:23;;;;;;;;;;;:30;;6960:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;6971:9;6960:21;;;;;;;;:::i;:::-;;;;;;;:54;;;;6848:166;7029:11;;;;;:::i;:::-;;;;6830:3;;;;;:::i;:::-;;;;6789:263;;;;7069:10;7062:17;;;;6524:563;;;;:::o;2161:153::-;2216:13;2280:9;:18;2290:7;2280:18;;;;;;;;;;;:26;;2273:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:153;;;:::o;2335:261::-;2414:7;2502:35;;;;;;;;2518:7;2502:35;;;;2527:9;2502:35;;;2478:10;:21;2489:9;;2478:21;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2548:9;;:11;;;;;;;;;:::i;:::-;;;;;;2579:9;;2572:16;;2335:261;;;;:::o;6170:345::-;6277:7;6392:52;;;;;;;;6416:8;6392:52;;;;6426:9;6392:52;;;;6436:7;6392:52;;;6352:20;:37;6373:15;;6352:37;;;;;;;;;;;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6455:15;;:17;;;;;;;;;:::i;:::-;;;;;;6492:15;;6485:22;;6170:345;;;;;:::o;1568:273::-;1774:11;1742:9;:18;1752:7;1742:18;;;;;;;;;;;:29;;:43;;;;;;;;;;;;:::i;:::-;;1825:8;1796:9;:18;1806:7;1796:18;;;;;;;;;;;:26;;:37;;;;;;;;;;;;:::i;:::-;;1568:273;;;:::o;5982:165::-;6041:13;6107:11;:22;6119:9;6107:22;;;;;;;;;;;:32;;6100:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5982:165;;;:::o;4512:312::-;4558:15;4615:26;4657:10;;4644:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4615:53;;4684:9;4679:108;4703:10;;4699:1;:14;4679:108;;;4751:11;:14;4763:1;4751:14;;;;;;;;;;;:24;;4735:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;4746:1;4735:13;;;;;;;;:::i;:::-;;;;;;;:40;;;;4715:3;;;;;:::i;:::-;;;;4679:108;;;;4806:10;4799:17;;;4512:312;:::o;5317:320::-;5399:7;5459:9;5471:1;5459:13;;5454:155;5478:10;;5474:1;:14;5454:155;;;5574:10;5558:28;;;;;;5528:11;:14;5540:1;5528:14;;;;;;;;;;;:24;;5512:42;;;;;;:::i;:::-;;;;;;;;:74;5508:89;;;5596:1;5588:9;;;;;5508:89;5490:3;;;;;:::i;:::-;;;;5454:155;;;;5628:1;5621:8;;5317:320;;;;:::o;5645:327::-;5728:7;5782:9;5794:1;5782:13;;5777:170;5801:10;;5797:1;:14;5777:170;;;5894:10;5878:28;;;;;;5848:11;:14;5860:1;5848:14;;;;;;;;;;;:24;;5832:42;;;;;;:::i;:::-;;;;;;;;:74;5828:110;;;5916:11;:14;5928:1;5916:14;;;;;;;;;;;:22;;;5908:30;;;;;5828:110;5813:3;;;;;:::i;:::-;;;;5777:170;;;;5963:1;5956:8;;5645:327;;;;:::o;7095:462::-;7143:1;7132:8;:12;;;;7165:1;7153:9;:13;;;;7188:1;7175:10;:14;;;;7216:1;7198:15;:19;;;;7231:9;7226:69;7250:8;;7246:1;:12;7226:69;;;7283:9;:12;7293:1;7283:12;;;;;;;;;;;;7276:19;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;7260:3;;;;;:::i;:::-;;;;7226:69;;;;7309:9;7304:70;7328:9;;7324:1;:13;7304:70;;;7361:10;:13;7372:1;7361:13;;;;;;;;;;;;7354:20;;;;;;;;;;;;;;:::i;:::-;;;7339:3;;;;;:::i;:::-;;;;7304:70;;;;7388:9;7383:71;7407:10;;7403:1;:14;7383:71;;;7440:11;:14;7452:1;7440:14;;;;;;;;;;;;7433:21;;;;;;;;;;;;;;:::i;:::-;;;7419:3;;;;;:::i;:::-;;;;7383:71;;;;7468:9;7463:80;7487:15;;7483:1;:19;7463:80;;;7520:20;:23;7541:1;7520:23;;;;;;;;;;;;7513:30;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7504:3;;;;;:::i;:::-;;;;7463:80;;;;7095:462::o;4344:160::-;4486:10;4451:11;:22;4463:9;4451:22;;;;;;;;;;;:32;;:45;;;;;;;;;;;;:::i;:::-;;4344:160;;:::o;1849:302::-;1894:15;1950:26;1992:8;;1979:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1950:51;;2017:9;2012:102;2036:8;;2032:1;:12;2012:102;;;2082:9;:12;2092:1;2082:12;;;;;;;;;;;:20;;2066:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;2077:1;2066:13;;;;;;;;:::i;:::-;;;;;;;:36;;;;2046:3;;;;;:::i;:::-;;;;2012:102;;;;2133:10;2126:17;;;1849:302;:::o;2604:152::-;2739:9;2707:10;:20;2718:8;2707:20;;;;;;;;;;;:29;;:41;;;;;;;;;;;;:::i;:::-;;2604:152;;:::o;1268:292::-;1373:7;1457:46;;;;;;;;1472:11;1457:46;;;;1485:8;1457:46;;;;;;;;;;;;;;;;;;;;;;;;1435:9;:19;1445:8;;1435:19;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1514:8;;:10;;;;;;;;;:::i;:::-;;;;;;1544:8;;1537:15;;1268:292;;;;:::o;3881:159::-;3938:13;4003:10;:20;4014:8;4003:20;;;;;;;;;;;:29;;3996:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3881:159;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:3:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;282:79;;:::i;:::-;251:2;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;;;;;;:::o;439:340::-;495:5;544:3;537:4;529:6;525:17;521:27;511:2;;552:79;;:::i;:::-;511:2;669:6;656:20;694:79;769:3;761:6;754:4;746:6;742:17;694:79;:::i;:::-;685:88;;501:278;;;;;:::o;785:139::-;831:5;869:6;856:20;847:29;;885:33;912:5;885:33;:::i;:::-;837:87;;;;:::o;930:509::-;999:6;1048:2;1036:9;1027:7;1023:23;1019:32;1016:2;;;1054:79;;:::i;:::-;1016:2;1202:1;1191:9;1187:17;1174:31;1232:18;1224:6;1221:30;1218:2;;;1254:79;;:::i;:::-;1218:2;1359:63;1414:7;1405:6;1394:9;1390:22;1359:63;:::i;:::-;1349:73;;1145:287;1006:433;;;;:::o;1445:834::-;1533:6;1541;1590:2;1578:9;1569:7;1565:23;1561:32;1558:2;;;1596:79;;:::i;:::-;1558:2;1744:1;1733:9;1729:17;1716:31;1774:18;1766:6;1763:30;1760:2;;;1796:79;;:::i;:::-;1760:2;1901:63;1956:7;1947:6;1936:9;1932:22;1901:63;:::i;:::-;1891:73;;1687:287;2041:2;2030:9;2026:18;2013:32;2072:18;2064:6;2061:30;2058:2;;;2094:79;;:::i;:::-;2058:2;2199:63;2254:7;2245:6;2234:9;2230:22;2199:63;:::i;:::-;2189:73;;1984:288;1548:731;;;;;:::o;2285:654::-;2363:6;2371;2420:2;2408:9;2399:7;2395:23;2391:32;2388:2;;;2426:79;;:::i;:::-;2388:2;2574:1;2563:9;2559:17;2546:31;2604:18;2596:6;2593:30;2590:2;;;2626:79;;:::i;:::-;2590:2;2731:63;2786:7;2777:6;2766:9;2762:22;2731:63;:::i;:::-;2721:73;;2517:287;2843:2;2869:53;2914:7;2905:6;2894:9;2890:22;2869:53;:::i;:::-;2859:63;;2814:118;2378:561;;;;;:::o;2945:329::-;3004:6;3053:2;3041:9;3032:7;3028:23;3024:32;3021:2;;;3059:79;;:::i;:::-;3021:2;3179:1;3204:53;3249:7;3240:6;3229:9;3225:22;3204:53;:::i;:::-;3194:63;;3150:117;3011:263;;;;:::o;3280:654::-;3358:6;3366;3415:2;3403:9;3394:7;3390:23;3386:32;3383:2;;;3421:79;;:::i;:::-;3383:2;3541:1;3566:53;3611:7;3602:6;3591:9;3587:22;3566:53;:::i;:::-;3556:63;;3512:117;3696:2;3685:9;3681:18;3668:32;3727:18;3719:6;3716:30;3713:2;;;3749:79;;:::i;:::-;3713:2;3854:63;3909:7;3900:6;3889:9;3885:22;3854:63;:::i;:::-;3844:73;;3639:288;3373:561;;;;;:::o;3940:979::-;4037:6;4045;4053;4102:2;4090:9;4081:7;4077:23;4073:32;4070:2;;;4108:79;;:::i;:::-;4070:2;4228:1;4253:53;4298:7;4289:6;4278:9;4274:22;4253:53;:::i;:::-;4243:63;;4199:117;4383:2;4372:9;4368:18;4355:32;4414:18;4406:6;4403:30;4400:2;;;4436:79;;:::i;:::-;4400:2;4541:63;4596:7;4587:6;4576:9;4572:22;4541:63;:::i;:::-;4531:73;;4326:288;4681:2;4670:9;4666:18;4653:32;4712:18;4704:6;4701:30;4698:2;;;4734:79;;:::i;:::-;4698:2;4839:63;4894:7;4885:6;4874:9;4870:22;4839:63;:::i;:::-;4829:73;;4624:288;4060:859;;;;;:::o;4925:474::-;4993:6;5001;5050:2;5038:9;5029:7;5025:23;5021:32;5018:2;;;5056:79;;:::i;:::-;5018:2;5176:1;5201:53;5246:7;5237:6;5226:9;5222:22;5201:53;:::i;:::-;5191:63;;5147:117;5303:2;5329:53;5374:7;5365:6;5354:9;5350:22;5329:53;:::i;:::-;5319:63;;5274:118;5008:391;;;;;:::o;5405:799::-;5492:6;5500;5508;5557:2;5545:9;5536:7;5532:23;5528:32;5525:2;;;5563:79;;:::i;:::-;5525:2;5683:1;5708:53;5753:7;5744:6;5733:9;5729:22;5708:53;:::i;:::-;5698:63;;5654:117;5810:2;5836:53;5881:7;5872:6;5861:9;5857:22;5836:53;:::i;:::-;5826:63;;5781:118;5966:2;5955:9;5951:18;5938:32;5997:18;5989:6;5986:30;5983:2;;;6019:79;;:::i;:::-;5983:2;6124:63;6179:7;6170:6;6159:9;6155:22;6124:63;:::i;:::-;6114:73;;5909:288;5515:689;;;;;:::o;6210:196::-;6299:10;6334:66;6396:3;6388:6;6334:66;:::i;:::-;6320:80;;6310:96;;;;:::o;6440:991::-;6579:3;6608:64;6666:5;6608:64;:::i;:::-;6688:96;6777:6;6772:3;6688:96;:::i;:::-;6681:103;;6810:3;6855:4;6847:6;6843:17;6838:3;6834:27;6885:66;6945:5;6885:66;:::i;:::-;6974:7;7005:1;6990:396;7015:6;7012:1;7009:13;6990:396;;;7086:9;7080:4;7076:20;7071:3;7064:33;7137:6;7131:13;7165:84;7244:4;7229:13;7165:84;:::i;:::-;7157:92;;7272:70;7335:6;7272:70;:::i;:::-;7262:80;;7371:4;7366:3;7362:14;7355:21;;7050:336;7037:1;7034;7030:9;7025:14;;6990:396;;;6994:14;7402:4;7395:11;;7422:3;7415:10;;6584:847;;;;;;;;;:::o;7459:849::-;7564:3;7601:5;7595:12;7630:36;7656:9;7630:36;:::i;:::-;7682:88;7763:6;7758:3;7682:88;:::i;:::-;7675:95;;7801:1;7790:9;7786:17;7817:1;7812:137;;;;7963:1;7958:344;;;;7779:523;;7812:137;7896:4;7892:9;7881;7877:25;7872:3;7865:38;7932:6;7927:3;7923:16;7916:23;;7812:137;;7958:344;8025:41;8060:5;8025:41;:::i;:::-;8088:1;8102:154;8116:6;8113:1;8110:13;8102:154;;;8190:7;8184:14;8180:1;8175:3;8171:11;8164:35;8240:1;8231:7;8227:15;8216:26;;8138:4;8135:1;8131:12;8126:17;;8102:154;;;8285:6;8280:3;8276:16;8269:23;;7965:337;;7779:523;;7568:740;;;;;;:::o;8314:344::-;8392:3;8420:39;8453:5;8420:39;:::i;:::-;8475:61;8529:6;8524:3;8475:61;:::i;:::-;8468:68;;8545:52;8590:6;8585:3;8578:4;8571:5;8567:16;8545:52;:::i;:::-;8622:29;8644:6;8622:29;:::i;:::-;8617:3;8613:39;8606:46;;8396:262;;;;;:::o;8664:364::-;8752:3;8780:39;8813:5;8780:39;:::i;:::-;8835:71;8899:6;8894:3;8835:71;:::i;:::-;8828:78;;8915:52;8960:6;8955:3;8948:4;8941:5;8937:16;8915:52;:::i;:::-;8992:29;9014:6;8992:29;:::i;:::-;8987:3;8983:39;8976:46;;8756:272;;;;;:::o;9034:118::-;9121:24;9139:5;9121:24;:::i;:::-;9116:3;9109:37;9099:53;;:::o;9158:273::-;9289:3;9311:94;9401:3;9392:6;9311:94;:::i;:::-;9304:101;;9422:3;9415:10;;9293:138;;;;:::o;9437:413::-;9600:4;9638:2;9627:9;9623:18;9615:26;;9687:9;9681:4;9677:20;9673:1;9662:9;9658:17;9651:47;9715:128;9838:4;9829:6;9715:128;:::i;:::-;9707:136;;9605:245;;;;:::o;9856:313::-;9969:4;10007:2;9996:9;9992:18;9984:26;;10056:9;10050:4;10046:20;10042:1;10031:9;10027:17;10020:47;10084:78;10157:4;10148:6;10084:78;:::i;:::-;10076:86;;9974:195;;;;:::o;10175:715::-;10384:4;10422:2;10411:9;10407:18;10399:26;;10471:9;10465:4;10461:20;10457:1;10446:9;10442:17;10435:47;10499:78;10572:4;10563:6;10499:78;:::i;:::-;10491:86;;10624:9;10618:4;10614:20;10609:2;10598:9;10594:18;10587:48;10652:78;10725:4;10716:6;10652:78;:::i;:::-;10644:86;;10777:9;10771:4;10767:20;10762:2;10751:9;10747:18;10740:48;10805:78;10878:4;10869:6;10805:78;:::i;:::-;10797:86;;10389:501;;;;;;:::o;10896:222::-;10989:4;11027:2;11016:9;11012:18;11004:26;;11040:71;11108:1;11097:9;11093:17;11084:6;11040:71;:::i;:::-;10994:124;;;;:::o;11124:423::-;11265:4;11303:2;11292:9;11288:18;11280:26;;11316:71;11384:1;11373:9;11369:17;11360:6;11316:71;:::i;:::-;11434:9;11428:4;11424:20;11419:2;11408:9;11404:18;11397:48;11462:78;11535:4;11526:6;11462:78;:::i;:::-;11454:86;;11270:277;;;;;:::o;11553:533::-;11722:4;11760:2;11749:9;11745:18;11737:26;;11773:71;11841:1;11830:9;11826:17;11817:6;11773:71;:::i;:::-;11854:72;11922:2;11911:9;11907:18;11898:6;11854:72;:::i;:::-;11973:9;11967:4;11963:20;11958:2;11947:9;11943:18;11936:48;12001:78;12074:4;12065:6;12001:78;:::i;:::-;11993:86;;11727:359;;;;;;:::o;12092:129::-;12126:6;12153:20;;:::i;:::-;12143:30;;12182:33;12210:4;12202:6;12182:33;:::i;:::-;12133:88;;;:::o;12227:75::-;12260:6;12293:2;12287:9;12277:19;;12267:35;:::o;12308:308::-;12370:4;12460:18;12452:6;12449:30;12446:2;;;12482:18;;:::i;:::-;12446:2;12520:29;12542:6;12520:29;:::i;:::-;12512:37;;12604:4;12598;12594:15;12586:23;;12375:241;;;:::o;12622:142::-;12699:4;12722:3;12714:11;;12752:4;12747:3;12743:14;12735:22;;12704:60;;;:::o;12770:144::-;12822:4;12845:3;12837:11;;12868:3;12865:1;12858:14;12902:4;12899:1;12889:18;12881:26;;12827:87;;;:::o;12920:124::-;12997:6;13031:5;13025:12;13015:22;;13004:40;;;:::o;13050:99::-;13102:6;13136:5;13130:12;13120:22;;13109:40;;;:::o;13155:123::-;13235:4;13267;13262:3;13258:14;13250:22;;13240:38;;;:::o;13284:194::-;13393:11;13427:6;13422:3;13415:19;13467:4;13462:3;13458:14;13443:29;;13405:73;;;;:::o;13484:147::-;13585:11;13622:3;13607:18;;13597:34;;;;:::o;13637:159::-;13711:11;13745:6;13740:3;13733:19;13785:4;13780:3;13776:14;13761:29;;13723:73;;;;:::o;13802:169::-;13886:11;13920:6;13915:3;13908:19;13960:4;13955:3;13951:14;13936:29;;13898:73;;;;:::o;13977:77::-;14014:7;14043:5;14032:16;;14022:32;;;:::o;14060:154::-;14144:6;14139:3;14134;14121:30;14206:1;14197:6;14192:3;14188:16;14181:27;14111:103;;;:::o;14220:307::-;14288:1;14298:113;14312:6;14309:1;14306:13;14298:113;;;14397:1;14392:3;14388:11;14382:18;14378:1;14373:3;14369:11;14362:39;14334:2;14331:1;14327:10;14322:15;;14298:113;;;14429:6;14426:1;14423:13;14420:2;;;14509:1;14500:6;14495:3;14491:16;14484:27;14420:2;14269:258;;;;:::o;14533:320::-;14577:6;14614:1;14608:4;14604:12;14594:22;;14661:1;14655:4;14651:12;14682:18;14672:2;;14738:4;14730:6;14726:17;14716:27;;14672:2;14800;14792:6;14789:14;14769:18;14766:38;14763:2;;;14819:18;;:::i;:::-;14763:2;14584:269;;;;:::o;14859:281::-;14942:27;14964:4;14942:27;:::i;:::-;14934:6;14930:40;15072:6;15060:10;15057:22;15036:18;15024:10;15021:34;15018:62;15015:2;;;15083:18;;:::i;:::-;15015:2;15123:10;15119:2;15112:22;14902:238;;;:::o;15146:233::-;15185:3;15208:24;15226:5;15208:24;:::i;:::-;15199:33;;15254:66;15247:5;15244:77;15241:2;;;15324:18;;:::i;:::-;15241:2;15371:1;15364:5;15360:13;15353:20;;15189:190;;;:::o;15385:180::-;15433:77;15430:1;15423:88;15530:4;15527:1;15520:15;15554:4;15551:1;15544:15;15571:180;15619:77;15616:1;15609:88;15716:4;15713:1;15706:15;15740:4;15737:1;15730:15;15757:180;15805:77;15802:1;15795:88;15902:4;15899:1;15892:15;15926:4;15923:1;15916:15;15943:180;15991:77;15988:1;15981:88;16088:4;16085:1;16078:15;16112:4;16109:1;16102:15;16129:117;16238:1;16235;16228:12;16252:117;16361:1;16358;16351:12;16375:117;16484:1;16481;16474:12;16498:117;16607:1;16604;16597:12;16621:102;16662:6;16713:2;16709:7;16704:2;16697:5;16693:14;16689:28;16679:38;;16669:54;;;:::o;16729:122::-;16802:24;16820:5;16802:24;:::i;:::-;16795:5;16792:35;16782:2;;16841:1;16838;16831:12;16782:2;16772:79;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1814000","executionCost":"1912","totalCost":"1815912"},"external":{"_dao_uris(uint256)":"infinite","_ideas_uris(uint256)":"infinite","all_goal_ideas_votes(uint256)":"infinite","create_dao(string,string)":"infinite","create_goal(string,uint256)":"infinite","create_goal_ideas_vote(uint256,uint256,string)":"infinite","create_ideas(string,uint256)":"infinite","dao()":"infinite","dao_uri(uint256)":"infinite","get_all_daos()":"infinite","get_all_goals()":"infinite","get_all_goals_by_dao_id(uint256)":"infinite","get_all_ideas()":"infinite","get_all_ideas_by_goal_id(uint256)":"infinite","get_goal_id_by_goal_uri(string)":"infinite","get_goal_id_from_ideas_uri(string)":"infinite","get_ideas_id_by_ideas_uri(string)":"infinite","get_ideas_votes_from_goal(uint256,uint256)":"infinite","goal_uri(uint256)":"infinite","ideas_uri(uint256)":"infinite","reset_all()":"28750","set_dao(uint256,string,string)":"infinite","set_goal(uint256,string)":"infinite","set_ideas(uint256,string)":"infinite"}},"methodIdentifiers":{"_dao_uris(uint256)":"27a568b9","_ideas_uris(uint256)":"468d0c80","all_goal_ideas_votes(uint256)":"1ba44c4c","create_dao(string,string)":"c4c2e364","create_goal(string,uint256)":"71085cab","create_goal_ideas_vote(uint256,uint256,string)":"82fcc732","create_ideas(string,uint256)":"2d9cb1ab","dao()":"4162169f","dao_uri(uint256)":"5d907da1","get_all_daos()":"c04fe978","get_all_goals()":"29b56f60","get_all_goals_by_dao_id(uint256)":"109ac970","get_all_ideas()":"97ee7606","get_all_ideas_by_goal_id(uint256)":"131d44f2","get_goal_id_by_goal_uri(string)":"1e9ac9f5","get_goal_id_from_ideas_uri(string)":"aa4cdf2a","get_ideas_id_by_ideas_uri(string)":"a1ca9178","get_ideas_votes_from_goal(uint256,uint256)":"4be7adb5","goal_uri(uint256)":"e32acc1a","ideas_uri(uint256)":"8d3d2595","reset_all()":"b16060a6","set_dao(uint256,string,string)":"881de858","set_goal(uint256,string)":"c29595c5","set_ideas(uint256,string)":"c04e7430"}},"metadata":"{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_dao_uris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dao_uri\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"finished\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ideas_uris\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ideas_uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"all_goal_ideas_votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"wallet\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"create_dao\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"create_goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_wallet\",\"type\":\"string\"}],\"name\":\"create_goal_ideas_vote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"create_ideas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dao\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"dao_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_daos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_goals\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"}],\"name\":\"get_all_goals_by_dao_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_all_ideas\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"get_all_ideas_by_goal_id\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_by_goal_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_goal_id_from_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"get_ideas_id_by_ideas_uri\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"get_ideas_votes_from_goal\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"}],\"name\":\"goal_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"}],\"name\":\"ideas_uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset_all\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_dao_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_dao_wallet\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dao_uri\",\"type\":\"string\"}],\"name\":\"set_dao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_goal_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_goal_uri\",\"type\":\"string\"}],\"name\":\"set_goal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ideas_uri\",\"type\":\"string\"}],\"name\":\"set_ideas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GreenDAO.sol\":\"GreenDAO\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/GreenDAO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\n\\r\\ncontract GreenDAO {\\r\\n    struct dao_uri_struct {\\r\\n        string dao_wallet;\\r\\n        string dao_uri;\\r\\n        string finished;\\r\\n    }\\r\\n    struct goal_uri_struct {\\r\\n        uint256 dao_id;\\r\\n        string goal_uri;\\r\\n    }\\r\\n\\r\\n    struct ideas_uri_struct {\\r\\n        uint256 goal_id;\\r\\n        string ideas_uri;\\r\\n    }\\r\\n\\r\\n    struct goal_ideas_votes_struct {\\r\\n        uint256 goal_id;\\r\\n        uint256 ideas_id;\\r\\n        string wallet;\\r\\n    }\\r\\n\\r\\n    uint256 private _dao_ids;\\r\\n    uint256 private _goal_ids;\\r\\n    uint256 private _ideas_ids;\\r\\n    uint256 private _ideas_vote_ids;\\r\\n    mapping(uint256 => dao_uri_struct) public _dao_uris;                        //_dao_ids          => (Dao)    Dao Wallet + Dao URI   + Finished\\r\\n    mapping(uint256 => goal_uri_struct) private _goal_uris;                     //_goal_ids         => (Goal)   Dao ID + Goal URI\\r\\n    mapping(uint256 => ideas_uri_struct) public _ideas_uris;                    //_ideas_ids        => (Ideas)  Goal ID + Ideas URI\\r\\n    mapping(uint256 => goal_ideas_votes_struct) public all_goal_ideas_votes;    //_ideas_vote_ids   => (Vote)   Goal ID + Ideas ID + Wallet\\r\\n\\r\\n    \\r\\n\\r\\n    //Daos\\r\\n    function create_dao(string memory _dao_wallet, string memory _dao_uri)\\r\\n        public\\r\\n        returns (uint256)\\r\\n    {\\r\\n        //Create Dao into _dao_uris\\r\\n        _dao_uris[_dao_ids] = dao_uri_struct(_dao_wallet, _dao_uri, \\\"False\\\");\\r\\n        _dao_ids++;\\r\\n\\r\\n        return _dao_ids;\\r\\n    }\\r\\n\\r\\n    function set_dao(\\r\\n        uint256 _dao_id,\\r\\n        string memory _dao_wallet,\\r\\n        string memory _dao_uri\\r\\n    ) public {\\r\\n        //Set Dao of wallet and uri\\r\\n        _dao_uris[_dao_id].dao_wallet = _dao_wallet;\\r\\n        _dao_uris[_dao_id].dao_uri = _dao_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_daos() public view returns (string[] memory) {\\r\\n        //Getting all doas\\r\\n        string[] memory _StoreInfo = new string[](_dao_ids);\\r\\n        for (uint256 i = 0; i < _dao_ids; i++) {\\r\\n            _StoreInfo[i] = _dao_uris[i].dao_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n\\r\\n    function dao_uri(uint256 _dao_id) public view returns (string memory) {\\r\\n        //Getting one dao URI\\r\\n        return _dao_uris[_dao_id].dao_uri;\\r\\n    }\\r\\n\\r\\n    //Goals\\r\\n    function create_goal(string memory _goal_uri, uint256 _dao_id) public returns (uint256)\\r\\n    {\\r\\n        //Create goal into _goal_uris\\r\\n        _goal_uris[_goal_ids] = goal_uri_struct(_dao_id, _goal_uri);\\r\\n        _goal_ids++;\\r\\n\\r\\n        return _goal_ids;\\r\\n    }\\r\\n\\r\\n    function set_goal(uint256 _goal_id, string memory _goal_uri) public {\\r\\n        //Set goal uri\\r\\n        _goal_uris[_goal_id].goal_uri = _goal_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_goals() public view returns (string[] memory) {\\r\\n        //Getting all goals\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n            _StoreInfo[i] = _goal_uris[i].goal_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_goals_by_dao_id(uint256 _dao_id) public view returns (string[] memory) {\\r\\n        //Getting all goals by dao id\\r\\n        string[] memory _StoreInfo = new string[](_goal_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n          if (_goal_uris[i].dao_id == _dao_id){\\r\\n            _StoreInfo[_store_id] = _goal_uris[i].goal_uri;\\r\\n            _store_id++;\\r\\n          }\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    \\r\\n    function get_goal_id_by_goal_uri(string memory _goal_uri) public view returns (uint256) {\\r\\n        //Getting goal id by uri\\r\\n        for (uint256 i = 0; i < _goal_ids; i++) {\\r\\n          if (keccak256(bytes(_goal_uris[i].goal_uri)) == keccak256(bytes(_goal_uri))) return  i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function goal_uri(uint256 _goal_id) public view returns (string memory) {\\r\\n        //Getting one goal URI\\r\\n        return _goal_uris[_goal_id].goal_uri;\\r\\n    }\\r\\n\\r\\n\\r\\n    //Ideas\\r\\n    function create_ideas(string memory _ideas_uri, uint256 _goal_id) public returns (uint256)\\r\\n    {\\r\\n        //Create ideas into _ideas_uris\\r\\n        _ideas_uris[_ideas_ids] = ideas_uri_struct(_goal_id, _ideas_uri);\\r\\n        _ideas_ids++;\\r\\n\\r\\n        return _ideas_ids;\\r\\n    }\\r\\n\\r\\n    function set_ideas(uint256 _ideas_id, string memory _ideas_uri) public {\\r\\n        //Set ideas uri\\r\\n        _ideas_uris[_ideas_id].ideas_uri = _ideas_uri;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas() public view returns (string[] memory) {\\r\\n        //Getting all ideas\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n            _StoreInfo[i] = _ideas_uris[i].ideas_uri;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function get_all_ideas_by_goal_id(uint256 _goal_id) public view returns (string[] memory) {\\r\\n        //Getting all ideas by goal id\\r\\n        string[] memory _StoreInfo = new string[](_ideas_ids);        \\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n          if (_ideas_uris[i].goal_id == _goal_id)\\r\\n            _StoreInfo[_store_id] = _ideas_uris[i].ideas_uri;\\r\\n            _store_id++;\\r\\n        }\\r\\n\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    \\r\\n    function get_ideas_id_by_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n        //Getting ideas id by uri\\r\\n        for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n          if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return  i;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    function get_goal_id_from_ideas_uri(string memory _ideas_uri) public view returns (uint256) {\\r\\n     //Getting ideas id by uri\\r\\n     for (uint256 i = 0; i < _ideas_ids; i++) {\\r\\n       if (keccak256(bytes(_ideas_uris[i].ideas_uri)) == keccak256(bytes(_ideas_uri))) return  _ideas_uris[i].goal_id;\\r\\n     }\\r\\n\\r\\n     return 0;\\r\\n    }\\r\\n\\r\\n\\r\\n    function ideas_uri(uint256 _ideas_id) public view returns (string memory) {\\r\\n        //Getting one ideas URI\\r\\n        return _ideas_uris[_ideas_id].ideas_uri;\\r\\n    }\\r\\n\\r\\n\\r\\n    //Votes\\r\\n    function create_goal_ideas_vote(uint256 _goal_id, uint256 _ideas_id,string memory _wallet) public returns (uint256)\\r\\n    {\\r\\n        //Create votes into all_goal_ideas_votes\\r\\n        all_goal_ideas_votes[_ideas_vote_ids] = goal_ideas_votes_struct(_goal_id, _ideas_id,_wallet);\\r\\n        _ideas_vote_ids++;\\r\\n\\r\\n        return _ideas_vote_ids;\\r\\n    }\\r\\n\\r\\n\\r\\n   function get_ideas_votes_from_goal(uint256 _goal_id, uint256 _ideas_id) public view returns (string[] memory)\\r\\n    {\\r\\n        //gets all ideas votes from goal\\r\\n        string[] memory _StoreInfo = new string[](_ideas_vote_ids);\\r\\n        uint256 _store_id;\\r\\n        for (uint256 i = 0; i < _ideas_vote_ids; i++) {\\r\\n          if (all_goal_ideas_votes[i].goal_id == _goal_id && all_goal_ideas_votes[i].ideas_id == _ideas_id )\\r\\n            _StoreInfo[_store_id] = all_goal_ideas_votes[i].wallet;\\r\\n            _store_id++;\\r\\n        }\\r\\n        return _StoreInfo;\\r\\n    }\\r\\n\\r\\n    function reset_all() public {\\r\\n      _dao_ids = 0;\\r\\n      _goal_ids = 0;\\r\\n      _ideas_ids = 0;\\r\\n      _ideas_vote_ids = 0;\\r\\n      for (uint256 i = 0; i < _dao_ids; i++)            delete _dao_uris[i];\\r\\n      for (uint256 i = 0; i < _goal_ids; i++)           delete _goal_uris[i];\\r\\n      for (uint256 i = 0; i < _ideas_ids; i++)          delete _ideas_uris[i];\\r\\n      for (uint256 i = 0; i < _ideas_vote_ids; i++)     delete all_goal_ideas_votes[i];    \\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    //Test\\r\\n    function dao() public returns (string[] memory) {\\r\\n        create_dao(\\\"wallet #1\\\", \\\"DAO metadata #1\\\");\\r\\n        create_dao(\\\"wallet #2\\\", \\\"DAO metadata #2\\\");\\r\\n        return get_all_daos();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x066dd5a59ba16bb69acb30478532ae046e187d73eb3406a80ea0e0b3ca1f49b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1068,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_dao_ids","offset":0,"slot":"0","type":"t_uint256"},{"astId":1070,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_goal_ids","offset":0,"slot":"1","type":"t_uint256"},{"astId":1072,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_ids","offset":0,"slot":"2","type":"t_uint256"},{"astId":1074,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_vote_ids","offset":0,"slot":"3","type":"t_uint256"},{"astId":1079,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_dao_uris","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_struct(dao_uri_struct)1049_storage)"},{"astId":1084,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_goal_uris","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(goal_uri_struct)1054_storage)"},{"astId":1089,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"_ideas_uris","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(ideas_uri_struct)1059_storage)"},{"astId":1094,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"all_goal_ideas_votes","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1066_storage)"}],"types":{"t_mapping(t_uint256,t_struct(dao_uri_struct)1049_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.dao_uri_struct)","numberOfBytes":"32","value":"t_struct(dao_uri_struct)1049_storage"},"t_mapping(t_uint256,t_struct(goal_ideas_votes_struct)1066_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.goal_ideas_votes_struct)","numberOfBytes":"32","value":"t_struct(goal_ideas_votes_struct)1066_storage"},"t_mapping(t_uint256,t_struct(goal_uri_struct)1054_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.goal_uri_struct)","numberOfBytes":"32","value":"t_struct(goal_uri_struct)1054_storage"},"t_mapping(t_uint256,t_struct(ideas_uri_struct)1059_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GreenDAO.ideas_uri_struct)","numberOfBytes":"32","value":"t_struct(ideas_uri_struct)1059_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(dao_uri_struct)1049_storage":{"encoding":"inplace","label":"struct GreenDAO.dao_uri_struct","members":[{"astId":1044,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_wallet","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1046,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_uri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1048,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"finished","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_ideas_votes_struct)1066_storage":{"encoding":"inplace","label":"struct GreenDAO.goal_ideas_votes_struct","members":[{"astId":1061,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1063,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_id","offset":0,"slot":"1","type":"t_uint256"},{"astId":1065,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"wallet","offset":0,"slot":"2","type":"t_string_storage"}],"numberOfBytes":"96"},"t_struct(goal_uri_struct)1054_storage":{"encoding":"inplace","label":"struct GreenDAO.goal_uri_struct","members":[{"astId":1051,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"dao_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1053,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_struct(ideas_uri_struct)1059_storage":{"encoding":"inplace","label":"struct GreenDAO.ideas_uri_struct","members":[{"astId":1056,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"goal_id","offset":0,"slot":"0","type":"t_uint256"},{"astId":1058,"contract":"contracts/GreenDAO.sol:GreenDAO","label":"ideas_uri","offset":0,"slot":"1","type":"t_string_storage"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}