{
  "address": "0xF7624b4a67b658a76E7c61A117AC0f932094352A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "core_bridge_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        }
      ],
      "name": "getCurrentMsges",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedMsg",
          "type": "bytes"
        }
      ],
      "name": "receiveEncodedMsg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "messages",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb1ec08be674071da7114b0da2e3254428965f84ffdeebea5a24b36e4f427394b",
  "receipt": {
    "to": null,
    "from": "0x32F48d18db5A63D3345Eaee9d9C326a2cC647B80",
    "contractAddress": "0xF7624b4a67b658a76E7c61A117AC0f932094352A",
    "transactionIndex": 3,
    "gasUsed": "992497",
    "logsBloom": "0x
    "blockHash": "0x830897987319cf8e755093cb2bfbdc1ac4f751ebfaa6302ce7e82d5664ba80ee",
    "transactionHash": "0xb1ec08be674071da7114b0da2e3254428965f84ffdeebea5a24b36e4f427394b",
    "logs": [],
    "blockNumber": 15125401,
    "cumulativeGasUsed": "1402343",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x88505117CA88e7dd2eC6EA1E13f0948db2D50D56"
  ],
  "numDeployments": 1,
  "solcInputHash": "005240a905df99cacb6c7a017edf89c2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"core_bridge_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getCurrentMsges\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMsg\",\"type\":\"bytes\"}],\"name\":\"receiveEncodedMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"messages\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Messenger.sol\":\"Messenger\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Messenger.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Wormhole/IWormhole.sol\\\";\\n\\ncontract Messenger {\\n    address private wormhole_core_bridge_address; //Core bridge of Current Chain\\n    IWormhole core_bridge = IWormhole(wormhole_core_bridge_address);\\n    uint32 nonce = 0;\\n    mapping(uint256 => string) all_messages;\\n\\n    constructor(address core_bridge_address){\\n        wormhole_core_bridge_address = core_bridge_address;\\n    }\\n\\n    function sendMsg(uint256 ideas_id, string memory messages) public returns (uint64 sequence) {\\n        //Encoding all messages per ideas in bytes\\n        bytes memory str =  (abi.encode(ideas_id, messages));\\n        sequence = core_bridge.publishMessage(nonce, str, 1);\\n        nonce = nonce+1;\\n    }\\n\\n    function receiveEncodedMsg(bytes memory encodedMsg) public {\\n        (IWormhole.VM memory vm, bool valid, string memory reason) = core_bridge.parseAndVerifyVM(encodedMsg);\\n        \\n        //1. Check Wormhole Guardian Signatures\\n        //  If the VM is NOT valid, will return the reason it's not valid\\n        //  If the VM IS valid, reason will be blank\\n        require(valid, reason);\\n\\n        //Decoding all messages per ideas in bytes\\n        (uint256 ideas_id, string memory messages) = abi.decode(vm.payload, (uint256, string)); \\n\\n        //Storing all the messages into map\\n        all_messages[ideas_id] = messages;\\n\\n    }\\n\\n    function getCurrentMsges(uint256 ideas_id) public view returns (string memory){\\n        return all_messages[ideas_id];\\n    }\\n}\\n\",\"keccak256\":\"0x8be7392dfccd8814fc6dbc6a6e75ad19bad13c13b5a26eec1fe37a16e272cdae\",\"license\":\"Unlicense\"},\"contracts/Wormhole/IWormhole.sol\":{\"content\":\"// contracts/Messages.sol\\n// SPDX-License-Identifier: Apache 2\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Structs.sol\\\";\\n\\ninterface IWormhole is Structs {\\n    event LogMessagePublished(address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel);\\n\\n    function publishMessage(\\n        uint32 nonce,\\n        bytes memory payload,\\n        uint8 consistencyLevel\\n    ) external payable returns (uint64 sequence);\\n\\n    function parseAndVerifyVM(bytes calldata encodedVM) external view returns (Structs.VM memory vm, bool valid, string memory reason);\\n\\n    function verifyVM(Structs.VM memory vm) external view returns (bool valid, string memory reason);\\n\\n    function verifySignatures(bytes32 hash, Structs.Signature[] memory signatures, Structs.GuardianSet memory guardianSet) external pure returns (bool valid, string memory reason) ;\\n\\n    function parseVM(bytes memory encodedVM) external pure returns (Structs.VM memory vm);\\n\\n    function getGuardianSet(uint32 index) external view returns (Structs.GuardianSet memory) ;\\n\\n    function getCurrentGuardianSetIndex() external view returns (uint32) ;\\n\\n    function getGuardianSetExpiry() external view returns (uint32) ;\\n\\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool) ;\\n\\n    function isInitialized(address impl) external view returns (bool) ;\\n\\n    function chainId() external view returns (uint16) ;\\n\\n    function governanceChainId() external view returns (uint16);\\n\\n    function governanceContract() external view returns (bytes32);\\n\\n    function messageFee() external view returns (uint256) ;\\n}\",\"keccak256\":\"0xa83711083ba6529aeedafc74593865aecece3904dc0ca18b624a3212e038c8f5\",\"license\":\"Apache 2\"},\"contracts/Wormhole/Structs.sol\":{\"content\":\"// contracts/Structs.sol\\n// SPDX-License-Identifier: Apache 2\\n\\npragma solidity ^0.8.0;\\n\\ninterface Structs {\\n\\tstruct Provider {\\n\\t\\tuint16 chainId;\\n\\t\\tuint16 governanceChainId;\\n\\t\\tbytes32 governanceContract;\\n\\t}\\n\\n\\tstruct GuardianSet {\\n\\t\\taddress[] keys;\\n\\t\\tuint32 expirationTime;\\n\\t}\\n\\n\\tstruct Signature {\\n\\t\\tbytes32 r;\\n\\t\\tbytes32 s;\\n\\t\\tuint8 v;\\n\\t\\tuint8 guardianIndex;\\n\\t}\\n\\n\\tstruct VM {\\n\\t\\tuint8 version;\\n\\t\\tuint32 timestamp;\\n\\t\\tuint32 nonce;\\n\\t\\tuint16 emitterChainId;\\n\\t\\tbytes32 emitterAddress;\\n\\t\\tuint64 sequence;\\n\\t\\tuint8 consistencyLevel;\\n\\t\\tbytes payload;\\n\\n\\t\\tuint32 guardianSetIndex;\\n\\t\\tSignature[] signatures;\\n\\n\\t\\tbytes32 hash;\\n\\t}\\n}\",\"keccak256\":\"0xf6067f3a7ac8ccd239a50aa2ef5620ffe31bc86a3757571e13e57a3a0f476b37\",\"license\":\"Apache 2\"}},\"version\":1}",
  "bytecode": "0x608060405260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548163ffffffff021916908363ffffffff1602179055503480156200009457600080fd5b506040516200122d3803806200122d8339818101604052810190620000ba919062000118565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200019d565b600081519050620001128162000183565b92915050565b6000602082840312156200013157620001306200017e565b5b6000620001418482850162000101565b91505092915050565b600062000157826200015e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200018e816200014a565b81146200019a57600080fd5b50565b61108080620001ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d5bf5b014610046578063496d76ff14610076578063a1b9162b14610092575b600080fd5b610060600480360381019061005b9190610a4d565b6100c2565b60405161006d9190610c92565b60405180910390f35b610090600480360381019061008b919061094c565b6101f4565b005b6100ac60048036038101906100a79190610a20565b610342565b6040516100b99190610c02565b60405180910390f35b60008083836040516020016100d8929190610c24565b6040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b19a437e600160149054906101000a900463ffffffff168360016040518463ffffffff1660e01b815260040161015b93929190610c54565b602060405180830381600087803b15801561017557600080fd5b505af1158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad9190610b05565b915060018060149054906101000a900463ffffffff166101cd9190610d98565b600160146101000a81548163ffffffff021916908363ffffffff1602179055505092915050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0fd8bde856040518263ffffffff1660e01b81526004016102549190610be0565b60006040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102a99190610995565b9250925092508181906102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e99190610c02565b60405180910390fd5b506000808460e0015180602001905181019061030e9190610aa9565b91509150806002600084815260200190815260200160002090805190602001906103399291906103e7565b50505050505050565b606060026000838152602001908152602001600020805461036290610e85565b80601f016020809104026020016040519081016040528092919081815260200182805461038e90610e85565b80156103db5780601f106103b0576101008083540402835291602001916103db565b820191906000526020600020905b8154815290600101906020018083116103be57829003601f168201915b50505050509050919050565b8280546103f390610e85565b90600052602060002090601f016020900481019282610415576000855561045c565b82601f1061042e57805160ff191683800117855561045c565b8280016001018555821561045c579182015b8281111561045b578251825591602001919060010190610440565b5b509050610469919061046d565b5090565b5b8082111561048657600081600090555060010161046e565b5090565b600061049d61049884610cd2565b610cad565b905080838252602082019050828560808602820111156104c0576104bf610f84565b5b60005b858110156104f057816104d68882610712565b8452602084019350608083019250506001810190506104c3565b5050509392505050565b600061050d61050884610cfe565b610cad565b90508281526020810184848401111561052957610528610f89565b5b610534848285610e43565b509392505050565b600061054f61054a84610cfe565b610cad565b90508281526020810184848401111561056b5761056a610f89565b5b610576848285610e52565b509392505050565b600061059161058c84610d2f565b610cad565b9050828152602081018484840111156105ad576105ac610f89565b5b6105b8848285610e43565b509392505050565b60006105d36105ce84610d2f565b610cad565b9050828152602081018484840111156105ef576105ee610f89565b5b6105fa848285610e52565b509392505050565b600082601f83011261061757610616610f75565b5b815161062784826020860161048a565b91505092915050565b60008151905061063f81610fa9565b92915050565b60008151905061065481610fc0565b92915050565b600082601f83011261066f5761066e610f75565b5b813561067f8482602086016104fa565b91505092915050565b600082601f83011261069d5761069c610f75565b5b81516106ad84826020860161053c565b91505092915050565b600082601f8301126106cb576106ca610f75565b5b81356106db84826020860161057e565b91505092915050565b600082601f8301126106f9576106f8610f75565b5b81516107098482602086016105c0565b91505092915050565b60006080828403121561072857610727610f7a565b5b6107326080610cad565b9050600061074284828501610645565b600083015250602061075684828501610645565b602083015250604061076a84828501610937565b604083015250606061077e84828501610937565b60608301525092915050565b600061016082840312156107a1576107a0610f7a565b5b6107ac610160610cad565b905060006107bc84828501610937565b60008301525060206107d08482850161090d565b60208301525060406107e48482850161090d565b60408301525060606107f8848285016108ce565b606083015250608061080c84828501610645565b60808301525060a061082084828501610922565b60a08301525060c061083484828501610937565b60c08301525060e082015167ffffffffffffffff81111561085857610857610f7f565b5b61086484828501610688565b60e0830152506101006108798482850161090d565b6101008301525061012082015167ffffffffffffffff81111561089f5761089e610f7f565b5b6108ab84828501610602565b610120830152506101406108c184828501610645565b6101408301525092915050565b6000815190506108dd81610fd7565b92915050565b6000813590506108f281610fee565b92915050565b60008151905061090781610fee565b92915050565b60008151905061091c81611005565b92915050565b6000815190506109318161101c565b92915050565b60008151905061094681611033565b92915050565b60006020828403121561096257610961610f93565b5b600082013567ffffffffffffffff8111156109805761097f610f8e565b5b61098c8482850161065a565b91505092915050565b6000806000606084860312156109ae576109ad610f93565b5b600084015167ffffffffffffffff8111156109cc576109cb610f8e565b5b6109d88682870161078a565b93505060206109e986828701610630565b925050604084015167ffffffffffffffff811115610a0a57610a09610f8e565b5b610a16868287016106e4565b9150509250925092565b600060208284031215610a3657610a35610f93565b5b6000610a44848285016108e3565b91505092915050565b60008060408385031215610a6457610a63610f93565b5b6000610a72858286016108e3565b925050602083013567ffffffffffffffff811115610a9357610a92610f8e565b5b610a9f858286016106b6565b9150509250929050565b60008060408385031215610ac057610abf610f93565b5b6000610ace858286016108f8565b925050602083015167ffffffffffffffff811115610aef57610aee610f8e565b5b610afb858286016106e4565b9150509250929050565b600060208284031215610b1b57610b1a610f93565b5b6000610b2984828501610922565b91505092915050565b6000610b3d82610d60565b610b478185610d76565b9350610b57818560208601610e52565b610b6081610f98565b840191505092915050565b610b7481610e31565b82525050565b6000610b8582610d6b565b610b8f8185610d87565b9350610b9f818560208601610e52565b610ba881610f98565b840191505092915050565b610bbc81610df6565b82525050565b610bcb81610e00565b82525050565b610bda81610e10565b82525050565b60006020820190508181036000830152610bfa8184610b32565b905092915050565b60006020820190508181036000830152610c1c8184610b7a565b905092915050565b6000604082019050610c396000830185610bb3565b8181036020830152610c4b8184610b7a565b90509392505050565b6000606082019050610c696000830186610bc2565b8181036020830152610c7b8185610b32565b9050610c8a6040830184610b6b565b949350505050565b6000602082019050610ca76000830184610bd1565b92915050565b6000610cb7610cc8565b9050610cc38282610eb7565b919050565b6000604051905090565b600067ffffffffffffffff821115610ced57610cec610f46565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610d1957610d18610f46565b5b610d2282610f98565b9050602081019050919050565b600067ffffffffffffffff821115610d4a57610d49610f46565b5b610d5382610f98565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610da382610e00565b9150610dae83610e00565b92508263ffffffff03821115610dc757610dc6610ee8565b5b828201905092915050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000610e3c82610e24565b9050919050565b82818337600083830152505050565b60005b83811015610e70578082015181840152602081019050610e55565b83811115610e7f576000848401525b50505050565b60006002820490506001821680610e9d57607f821691505b60208210811415610eb157610eb0610f17565b5b50919050565b610ec082610f98565b810181811067ffffffffffffffff82111715610edf57610ede610f46565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610fb281610dd2565b8114610fbd57600080fd5b50565b610fc981610dde565b8114610fd457600080fd5b50565b610fe081610de8565b8114610feb57600080fd5b50565b610ff781610df6565b811461100257600080fd5b50565b61100e81610e00565b811461101957600080fd5b50565b61102581610e10565b811461103057600080fd5b50565b61103c81610e24565b811461104757600080fd5b5056fea2646970667358221220d3f8cd79d0900c784cbd0c72b1ce64fa47e7fe3f08ecd3da290e06261330ea0364736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632d5bf5b014610046578063496d76ff14610076578063a1b9162b14610092575b600080fd5b610060600480360381019061005b9190610a4d565b6100c2565b60405161006d9190610c92565b60405180910390f35b610090600480360381019061008b919061094c565b6101f4565b005b6100ac60048036038101906100a79190610a20565b610342565b6040516100b99190610c02565b60405180910390f35b60008083836040516020016100d8929190610c24565b6040516020818303038152906040529050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b19a437e600160149054906101000a900463ffffffff168360016040518463ffffffff1660e01b815260040161015b93929190610c54565b602060405180830381600087803b15801561017557600080fd5b505af1158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad9190610b05565b915060018060149054906101000a900463ffffffff166101cd9190610d98565b600160146101000a81548163ffffffff021916908363ffffffff1602179055505092915050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0fd8bde856040518263ffffffff1660e01b81526004016102549190610be0565b60006040518083038186803b15801561026c57600080fd5b505afa158015610280573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102a99190610995565b9250925092508181906102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e99190610c02565b60405180910390fd5b506000808460e0015180602001905181019061030e9190610aa9565b91509150806002600084815260200190815260200160002090805190602001906103399291906103e7565b50505050505050565b606060026000838152602001908152602001600020805461036290610e85565b80601f016020809104026020016040519081016040528092919081815260200182805461038e90610e85565b80156103db5780601f106103b0576101008083540402835291602001916103db565b820191906000526020600020905b8154815290600101906020018083116103be57829003601f168201915b50505050509050919050565b8280546103f390610e85565b90600052602060002090601f016020900481019282610415576000855561045c565b82601f1061042e57805160ff191683800117855561045c565b8280016001018555821561045c579182015b8281111561045b578251825591602001919060010190610440565b5b509050610469919061046d565b5090565b5b8082111561048657600081600090555060010161046e565b5090565b600061049d61049884610cd2565b610cad565b905080838252602082019050828560808602820111156104c0576104bf610f84565b5b60005b858110156104f057816104d68882610712565b8452602084019350608083019250506001810190506104c3565b5050509392505050565b600061050d61050884610cfe565b610cad565b90508281526020810184848401111561052957610528610f89565b5b610534848285610e43565b509392505050565b600061054f61054a84610cfe565b610cad565b90508281526020810184848401111561056b5761056a610f89565b5b610576848285610e52565b509392505050565b600061059161058c84610d2f565b610cad565b9050828152602081018484840111156105ad576105ac610f89565b5b6105b8848285610e43565b509392505050565b60006105d36105ce84610d2f565b610cad565b9050828152602081018484840111156105ef576105ee610f89565b5b6105fa848285610e52565b509392505050565b600082601f83011261061757610616610f75565b5b815161062784826020860161048a565b91505092915050565b60008151905061063f81610fa9565b92915050565b60008151905061065481610fc0565b92915050565b600082601f83011261066f5761066e610f75565b5b813561067f8482602086016104fa565b91505092915050565b600082601f83011261069d5761069c610f75565b5b81516106ad84826020860161053c565b91505092915050565b600082601f8301126106cb576106ca610f75565b5b81356106db84826020860161057e565b91505092915050565b600082601f8301126106f9576106f8610f75565b5b81516107098482602086016105c0565b91505092915050565b60006080828403121561072857610727610f7a565b5b6107326080610cad565b9050600061074284828501610645565b600083015250602061075684828501610645565b602083015250604061076a84828501610937565b604083015250606061077e84828501610937565b60608301525092915050565b600061016082840312156107a1576107a0610f7a565b5b6107ac610160610cad565b905060006107bc84828501610937565b60008301525060206107d08482850161090d565b60208301525060406107e48482850161090d565b60408301525060606107f8848285016108ce565b606083015250608061080c84828501610645565b60808301525060a061082084828501610922565b60a08301525060c061083484828501610937565b60c08301525060e082015167ffffffffffffffff81111561085857610857610f7f565b5b61086484828501610688565b60e0830152506101006108798482850161090d565b6101008301525061012082015167ffffffffffffffff81111561089f5761089e610f7f565b5b6108ab84828501610602565b610120830152506101406108c184828501610645565b6101408301525092915050565b6000815190506108dd81610fd7565b92915050565b6000813590506108f281610fee565b92915050565b60008151905061090781610fee565b92915050565b60008151905061091c81611005565b92915050565b6000815190506109318161101c565b92915050565b60008151905061094681611033565b92915050565b60006020828403121561096257610961610f93565b5b600082013567ffffffffffffffff8111156109805761097f610f8e565b5b61098c8482850161065a565b91505092915050565b6000806000606084860312156109ae576109ad610f93565b5b600084015167ffffffffffffffff8111156109cc576109cb610f8e565b5b6109d88682870161078a565b93505060206109e986828701610630565b925050604084015167ffffffffffffffff811115610a0a57610a09610f8e565b5b610a16868287016106e4565b9150509250925092565b600060208284031215610a3657610a35610f93565b5b6000610a44848285016108e3565b91505092915050565b60008060408385031215610a6457610a63610f93565b5b6000610a72858286016108e3565b925050602083013567ffffffffffffffff811115610a9357610a92610f8e565b5b610a9f858286016106b6565b9150509250929050565b60008060408385031215610ac057610abf610f93565b5b6000610ace858286016108f8565b925050602083015167ffffffffffffffff811115610aef57610aee610f8e565b5b610afb858286016106e4565b9150509250929050565b600060208284031215610b1b57610b1a610f93565b5b6000610b2984828501610922565b91505092915050565b6000610b3d82610d60565b610b478185610d76565b9350610b57818560208601610e52565b610b6081610f98565b840191505092915050565b610b7481610e31565b82525050565b6000610b8582610d6b565b610b8f8185610d87565b9350610b9f818560208601610e52565b610ba881610f98565b840191505092915050565b610bbc81610df6565b82525050565b610bcb81610e00565b82525050565b610bda81610e10565b82525050565b60006020820190508181036000830152610bfa8184610b32565b905092915050565b60006020820190508181036000830152610c1c8184610b7a565b905092915050565b6000604082019050610c396000830185610bb3565b8181036020830152610c4b8184610b7a565b90509392505050565b6000606082019050610c696000830186610bc2565b8181036020830152610c7b8185610b32565b9050610c8a6040830184610b6b565b949350505050565b6000602082019050610ca76000830184610bd1565b92915050565b6000610cb7610cc8565b9050610cc38282610eb7565b919050565b6000604051905090565b600067ffffffffffffffff821115610ced57610cec610f46565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610d1957610d18610f46565b5b610d2282610f98565b9050602081019050919050565b600067ffffffffffffffff821115610d4a57610d49610f46565b5b610d5382610f98565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610da382610e00565b9150610dae83610e00565b92508263ffffffff03821115610dc757610dc6610ee8565b5b828201905092915050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000610e3c82610e24565b9050919050565b82818337600083830152505050565b60005b83811015610e70578082015181840152602081019050610e55565b83811115610e7f576000848401525b50505050565b60006002820490506001821680610e9d57607f821691505b60208210811415610eb157610eb0610f17565b5b50919050565b610ec082610f98565b810181811067ffffffffffffffff82111715610edf57610ede610f46565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610fb281610dd2565b8114610fbd57600080fd5b50565b610fc981610dde565b8114610fd457600080fd5b50565b610fe081610de8565b8114610feb57600080fd5b50565b610ff781610df6565b811461100257600080fd5b50565b61100e81610e00565b811461101957600080fd5b50565b61102581610e10565b811461103057600080fd5b50565b61103c81610e24565b811461104757600080fd5b5056fea2646970667358221220d3f8cd79d0900c784cbd0c72b1ce64fa47e7fe3f08ecd3da290e06261330ea0364736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5002,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "wormhole_core_bridge_address",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5008,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "core_bridge",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IWormhole)5245"
      },
      {
        "astId": 5011,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "nonce",
        "offset": 20,
        "slot": "1",
        "type": "t_uint32"
      },
      {
        "astId": 5015,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "all_messages",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IWormhole)5245": {
        "encoding": "inplace",
        "label": "contract IWormhole",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}