{
  "address": "0x47E4423422AE2A0829f8Fd9C27f3A996072F7570",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "core_bridge_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        }
      ],
      "name": "getCurrentMsges",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedMsg",
          "type": "bytes"
        }
      ],
      "name": "receiveEncodedMsg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "messages",
          "type": "string"
        }
      ],
      "name": "sendMsg",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ideas_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "messages",
          "type": "string"
        }
      ],
      "name": "sendMsgLOCAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x07617199aaaa9844d8fd054b61a4ecbf000dfadddc8e6c907b17aa4d373194d7",
  "receipt": {
    "to": null,
    "from": "0x32F48d18db5A63D3345Eaee9d9C326a2cC647B80",
    "contractAddress": "0x47E4423422AE2A0829f8Fd9C27f3A996072F7570",
    "transactionIndex": 3,
    "gasUsed": "1020277",
    "logsBloom": "0x
    "blockHash": "0xaeb3f794ddb5d1a80a9cb6d1ac732ff6be113109f7c91f7697cb409fc17b1b1d",
    "transactionHash": "0x07617199aaaa9844d8fd054b61a4ecbf000dfadddc8e6c907b17aa4d373194d7",
    "logs": [],
    "blockNumber": 25533477,
    "cumulativeGasUsed": "1508987",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x68605AD7b15c732a30b1BbC62BE8F2A509D74b4D"
  ],
  "numDeployments": 1,
  "solcInputHash": "3c6e58be825638601320a40cbdc8d72f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"core_bridge_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"}],\"name\":\"getCurrentMsges\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedMsg\",\"type\":\"bytes\"}],\"name\":\"receiveEncodedMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"messages\",\"type\":\"string\"}],\"name\":\"sendMsg\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ideas_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"messages\",\"type\":\"string\"}],\"name\":\"sendMsgLOCAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Messenger.sol\":\"Messenger\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Messenger.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Wormhole/IWormhole.sol\\\";\\n\\ncontract Messenger {\\n    IWormhole core_bridge; \\n    uint32 nonce = 0;\\n    mapping(uint256 => string) all_messages;\\n\\n    constructor(address core_bridge_address){\\n        core_bridge = IWormhole(core_bridge_address); //Core bridge of Current Chain\\n    }\\n\\n    function sendMsg(uint256 ideas_id, string memory messages) public returns (uint64 sequence) {\\n        //Encoding all messages per ideas in bytes\\n        bytes memory str =  (abi.encode(ideas_id, messages));\\n        sequence = core_bridge.publishMessage(nonce, str, 1);\\n        nonce = nonce+1;\\n    }\\n\\n   function sendMsgLOCAL(uint256 ideas_id, string memory messages) public returns (uint256) {\\n         all_messages[ideas_id] = messages;\\n         return ideas_id;\\n    }\\n\\n    function receiveEncodedMsg(bytes memory encodedMsg) public {\\n        (IWormhole.VM memory vm, bool valid, string memory reason) = core_bridge.parseAndVerifyVM(encodedMsg);\\n        \\n        //1. Check Wormhole Guardian Signatures\\n        //  If the VM is NOT valid, will return the reason it's not valid\\n        //  If the VM IS valid, reason will be blank\\n        require(valid, reason);\\n\\n        //Decoding all messages per ideas in bytes\\n        (uint256 ideas_id, string memory messages) = abi.decode(vm.payload, (uint256, string)); \\n\\n        //Storing all the messages into map\\n        all_messages[ideas_id] = messages;\\n\\n    }\\n\\n    function getCurrentMsges(uint256 ideas_id) public view returns (string memory){\\n        return all_messages[ideas_id];\\n    }\\n}\\n\",\"keccak256\":\"0x24229ec1690f0da56de4297464f3ec7326b90f5eaa8c792e3f86a1640bff8761\",\"license\":\"Unlicense\"},\"contracts/Wormhole/IWormhole.sol\":{\"content\":\"// contracts/Messages.sol\\n// SPDX-License-Identifier: Apache 2\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Structs.sol\\\";\\n\\ninterface IWormhole is Structs {\\n    event LogMessagePublished(address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel);\\n\\n    function publishMessage(\\n        uint32 nonce,\\n        bytes memory payload,\\n        uint8 consistencyLevel\\n    ) external payable returns (uint64 sequence);\\n\\n    function parseAndVerifyVM(bytes calldata encodedVM) external view returns (Structs.VM memory vm, bool valid, string memory reason);\\n\\n    function verifyVM(Structs.VM memory vm) external view returns (bool valid, string memory reason);\\n\\n    function verifySignatures(bytes32 hash, Structs.Signature[] memory signatures, Structs.GuardianSet memory guardianSet) external pure returns (bool valid, string memory reason) ;\\n\\n    function parseVM(bytes memory encodedVM) external pure returns (Structs.VM memory vm);\\n\\n    function getGuardianSet(uint32 index) external view returns (Structs.GuardianSet memory) ;\\n\\n    function getCurrentGuardianSetIndex() external view returns (uint32) ;\\n\\n    function getGuardianSetExpiry() external view returns (uint32) ;\\n\\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool) ;\\n\\n    function isInitialized(address impl) external view returns (bool) ;\\n\\n    function chainId() external view returns (uint16) ;\\n\\n    function governanceChainId() external view returns (uint16);\\n\\n    function governanceContract() external view returns (bytes32);\\n\\n    function messageFee() external view returns (uint256) ;\\n}\",\"keccak256\":\"0xa83711083ba6529aeedafc74593865aecece3904dc0ca18b624a3212e038c8f5\",\"license\":\"Apache 2\"},\"contracts/Wormhole/Structs.sol\":{\"content\":\"// contracts/Structs.sol\\n// SPDX-License-Identifier: Apache 2\\n\\npragma solidity ^0.8.0;\\n\\ninterface Structs {\\n\\tstruct Provider {\\n\\t\\tuint16 chainId;\\n\\t\\tuint16 governanceChainId;\\n\\t\\tbytes32 governanceContract;\\n\\t}\\n\\n\\tstruct GuardianSet {\\n\\t\\taddress[] keys;\\n\\t\\tuint32 expirationTime;\\n\\t}\\n\\n\\tstruct Signature {\\n\\t\\tbytes32 r;\\n\\t\\tbytes32 s;\\n\\t\\tuint8 v;\\n\\t\\tuint8 guardianIndex;\\n\\t}\\n\\n\\tstruct VM {\\n\\t\\tuint8 version;\\n\\t\\tuint32 timestamp;\\n\\t\\tuint32 nonce;\\n\\t\\tuint16 emitterChainId;\\n\\t\\tbytes32 emitterAddress;\\n\\t\\tuint64 sequence;\\n\\t\\tuint8 consistencyLevel;\\n\\t\\tbytes payload;\\n\\n\\t\\tuint32 guardianSetIndex;\\n\\t\\tSignature[] signatures;\\n\\n\\t\\tbytes32 hash;\\n\\t}\\n}\",\"keccak256\":\"0xf6067f3a7ac8ccd239a50aa2ef5620ffe31bc86a3757571e13e57a3a0f476b37\",\"license\":\"Apache 2\"}},\"version\":1}",
  "bytecode": "0x608060405260008060146101000a81548163ffffffff021916908363ffffffff1602179055503480156200003257600080fd5b5060405162001252380380620012528339818101604052810190620000589190620000b6565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200013b565b600081519050620000b08162000121565b92915050565b600060208284031215620000cf57620000ce6200011c565b5b6000620000df848285016200009f565b91505092915050565b6000620000f582620000fc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200012c81620000e8565b81146200013857600080fd5b50565b611107806200014b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d5bf5b014610051578063496d76ff146100815780639981bcde1461009d578063a1b9162b146100cd575b600080fd5b61006b60048036038101906100669190610ab9565b6100fd565b6040516100789190610d19565b60405180910390f35b61009b600480360381019061009691906109b8565b61022e565b005b6100b760048036038101906100b29190610ab9565b61037b565b6040516100c49190610c90565b60405180910390f35b6100e760048036038101906100e29190610a8c565b6103ae565b6040516100f49190610c6e565b60405180910390f35b6000808383604051602001610113929190610cab565b604051602081830303815290604052905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b19a437e600060149054906101000a900463ffffffff168360016040518463ffffffff1660e01b815260040161019493929190610cdb565b602060405180830381600087803b1580156101ae57600080fd5b505af11580156101c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e69190610b71565b91506001600060149054906101000a900463ffffffff166102079190610e1f565b600060146101000a81548163ffffffff021916908363ffffffff1602179055505092915050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0fd8bde856040518263ffffffff1660e01b815260040161028d9190610c4c565b60006040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102e29190610a01565b92509250925081819061032b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103229190610c6e565b60405180910390fd5b506000808460e001518060200190518101906103479190610b15565b9150915080600160008481526020019081526020016000209080519060200190610372929190610453565b50505050505050565b6000816001600085815260200190815260200160002090805190602001906103a4929190610453565b5082905092915050565b60606001600083815260200190815260200160002080546103ce90610f0c565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90610f0c565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b50505050509050919050565b82805461045f90610f0c565b90600052602060002090601f01602090048101928261048157600085556104c8565b82601f1061049a57805160ff19168380011785556104c8565b828001600101855582156104c8579182015b828111156104c75782518255916020019190600101906104ac565b5b5090506104d591906104d9565b5090565b5b808211156104f25760008160009055506001016104da565b5090565b600061050961050484610d59565b610d34565b9050808382526020820190508285608086028201111561052c5761052b61100b565b5b60005b8581101561055c5781610542888261077e565b84526020840193506080830192505060018101905061052f565b5050509392505050565b600061057961057484610d85565b610d34565b90508281526020810184848401111561059557610594611010565b5b6105a0848285610eca565b509392505050565b60006105bb6105b684610d85565b610d34565b9050828152602081018484840111156105d7576105d6611010565b5b6105e2848285610ed9565b509392505050565b60006105fd6105f884610db6565b610d34565b90508281526020810184848401111561061957610618611010565b5b610624848285610eca565b509392505050565b600061063f61063a84610db6565b610d34565b90508281526020810184848401111561065b5761065a611010565b5b610666848285610ed9565b509392505050565b600082601f83011261068357610682610ffc565b5b81516106938482602086016104f6565b91505092915050565b6000815190506106ab81611030565b92915050565b6000815190506106c081611047565b92915050565b600082601f8301126106db576106da610ffc565b5b81356106eb848260208601610566565b91505092915050565b600082601f83011261070957610708610ffc565b5b81516107198482602086016105a8565b91505092915050565b600082601f83011261073757610736610ffc565b5b81356107478482602086016105ea565b91505092915050565b600082601f83011261076557610764610ffc565b5b815161077584826020860161062c565b91505092915050565b60006080828403121561079457610793611001565b5b61079e6080610d34565b905060006107ae848285016106b1565b60008301525060206107c2848285016106b1565b60208301525060406107d6848285016109a3565b60408301525060606107ea848285016109a3565b60608301525092915050565b6000610160828403121561080d5761080c611001565b5b610818610160610d34565b90506000610828848285016109a3565b600083015250602061083c84828501610979565b602083015250604061085084828501610979565b60408301525060606108648482850161093a565b6060830152506080610878848285016106b1565b60808301525060a061088c8482850161098e565b60a08301525060c06108a0848285016109a3565b60c08301525060e082015167ffffffffffffffff8111156108c4576108c3611006565b5b6108d0848285016106f4565b60e0830152506101006108e584828501610979565b6101008301525061012082015167ffffffffffffffff81111561090b5761090a611006565b5b6109178482850161066e565b6101208301525061014061092d848285016106b1565b6101408301525092915050565b6000815190506109498161105e565b92915050565b60008135905061095e81611075565b92915050565b60008151905061097381611075565b92915050565b6000815190506109888161108c565b92915050565b60008151905061099d816110a3565b92915050565b6000815190506109b2816110ba565b92915050565b6000602082840312156109ce576109cd61101a565b5b600082013567ffffffffffffffff8111156109ec576109eb611015565b5b6109f8848285016106c6565b91505092915050565b600080600060608486031215610a1a57610a1961101a565b5b600084015167ffffffffffffffff811115610a3857610a37611015565b5b610a44868287016107f6565b9350506020610a558682870161069c565b925050604084015167ffffffffffffffff811115610a7657610a75611015565b5b610a8286828701610750565b9150509250925092565b600060208284031215610aa257610aa161101a565b5b6000610ab08482850161094f565b91505092915050565b60008060408385031215610ad057610acf61101a565b5b6000610ade8582860161094f565b925050602083013567ffffffffffffffff811115610aff57610afe611015565b5b610b0b85828601610722565b9150509250929050565b60008060408385031215610b2c57610b2b61101a565b5b6000610b3a85828601610964565b925050602083015167ffffffffffffffff811115610b5b57610b5a611015565b5b610b6785828601610750565b9150509250929050565b600060208284031215610b8757610b8661101a565b5b6000610b958482850161098e565b91505092915050565b6000610ba982610de7565b610bb38185610dfd565b9350610bc3818560208601610ed9565b610bcc8161101f565b840191505092915050565b610be081610eb8565b82525050565b6000610bf182610df2565b610bfb8185610e0e565b9350610c0b818560208601610ed9565b610c148161101f565b840191505092915050565b610c2881610e7d565b82525050565b610c3781610e87565b82525050565b610c4681610e97565b82525050565b60006020820190508181036000830152610c668184610b9e565b905092915050565b60006020820190508181036000830152610c888184610be6565b905092915050565b6000602082019050610ca56000830184610c1f565b92915050565b6000604082019050610cc06000830185610c1f565b8181036020830152610cd28184610be6565b90509392505050565b6000606082019050610cf06000830186610c2e565b8181036020830152610d028185610b9e565b9050610d116040830184610bd7565b949350505050565b6000602082019050610d2e6000830184610c3d565b92915050565b6000610d3e610d4f565b9050610d4a8282610f3e565b919050565b6000604051905090565b600067ffffffffffffffff821115610d7457610d73610fcd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610da057610d9f610fcd565b5b610da98261101f565b9050602081019050919050565b600067ffffffffffffffff821115610dd157610dd0610fcd565b5b610dda8261101f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e2a82610e87565b9150610e3583610e87565b92508263ffffffff03821115610e4e57610e4d610f6f565b5b828201905092915050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000610ec382610eab565b9050919050565b82818337600083830152505050565b60005b83811015610ef7578082015181840152602081019050610edc565b83811115610f06576000848401525b50505050565b60006002820490506001821680610f2457607f821691505b60208210811415610f3857610f37610f9e565b5b50919050565b610f478261101f565b810181811067ffffffffffffffff82111715610f6657610f65610fcd565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61103981610e59565b811461104457600080fd5b50565b61105081610e65565b811461105b57600080fd5b50565b61106781610e6f565b811461107257600080fd5b50565b61107e81610e7d565b811461108957600080fd5b50565b61109581610e87565b81146110a057600080fd5b50565b6110ac81610e97565b81146110b757600080fd5b50565b6110c381610eab565b81146110ce57600080fd5b5056fea26469706673582212205d140d41a7cbe2fa6c63e1d1ac8bee7694f769b5155aec51f8eaf612155e4ea064736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632d5bf5b014610051578063496d76ff146100815780639981bcde1461009d578063a1b9162b146100cd575b600080fd5b61006b60048036038101906100669190610ab9565b6100fd565b6040516100789190610d19565b60405180910390f35b61009b600480360381019061009691906109b8565b61022e565b005b6100b760048036038101906100b29190610ab9565b61037b565b6040516100c49190610c90565b60405180910390f35b6100e760048036038101906100e29190610a8c565b6103ae565b6040516100f49190610c6e565b60405180910390f35b6000808383604051602001610113929190610cab565b604051602081830303815290604052905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b19a437e600060149054906101000a900463ffffffff168360016040518463ffffffff1660e01b815260040161019493929190610cdb565b602060405180830381600087803b1580156101ae57600080fd5b505af11580156101c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e69190610b71565b91506001600060149054906101000a900463ffffffff166102079190610e1f565b600060146101000a81548163ffffffff021916908363ffffffff1602179055505092915050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c0fd8bde856040518263ffffffff1660e01b815260040161028d9190610c4c565b60006040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102e29190610a01565b92509250925081819061032b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103229190610c6e565b60405180910390fd5b506000808460e001518060200190518101906103479190610b15565b9150915080600160008481526020019081526020016000209080519060200190610372929190610453565b50505050505050565b6000816001600085815260200190815260200160002090805190602001906103a4929190610453565b5082905092915050565b60606001600083815260200190815260200160002080546103ce90610f0c565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa90610f0c565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b50505050509050919050565b82805461045f90610f0c565b90600052602060002090601f01602090048101928261048157600085556104c8565b82601f1061049a57805160ff19168380011785556104c8565b828001600101855582156104c8579182015b828111156104c75782518255916020019190600101906104ac565b5b5090506104d591906104d9565b5090565b5b808211156104f25760008160009055506001016104da565b5090565b600061050961050484610d59565b610d34565b9050808382526020820190508285608086028201111561052c5761052b61100b565b5b60005b8581101561055c5781610542888261077e565b84526020840193506080830192505060018101905061052f565b5050509392505050565b600061057961057484610d85565b610d34565b90508281526020810184848401111561059557610594611010565b5b6105a0848285610eca565b509392505050565b60006105bb6105b684610d85565b610d34565b9050828152602081018484840111156105d7576105d6611010565b5b6105e2848285610ed9565b509392505050565b60006105fd6105f884610db6565b610d34565b90508281526020810184848401111561061957610618611010565b5b610624848285610eca565b509392505050565b600061063f61063a84610db6565b610d34565b90508281526020810184848401111561065b5761065a611010565b5b610666848285610ed9565b509392505050565b600082601f83011261068357610682610ffc565b5b81516106938482602086016104f6565b91505092915050565b6000815190506106ab81611030565b92915050565b6000815190506106c081611047565b92915050565b600082601f8301126106db576106da610ffc565b5b81356106eb848260208601610566565b91505092915050565b600082601f83011261070957610708610ffc565b5b81516107198482602086016105a8565b91505092915050565b600082601f83011261073757610736610ffc565b5b81356107478482602086016105ea565b91505092915050565b600082601f83011261076557610764610ffc565b5b815161077584826020860161062c565b91505092915050565b60006080828403121561079457610793611001565b5b61079e6080610d34565b905060006107ae848285016106b1565b60008301525060206107c2848285016106b1565b60208301525060406107d6848285016109a3565b60408301525060606107ea848285016109a3565b60608301525092915050565b6000610160828403121561080d5761080c611001565b5b610818610160610d34565b90506000610828848285016109a3565b600083015250602061083c84828501610979565b602083015250604061085084828501610979565b60408301525060606108648482850161093a565b6060830152506080610878848285016106b1565b60808301525060a061088c8482850161098e565b60a08301525060c06108a0848285016109a3565b60c08301525060e082015167ffffffffffffffff8111156108c4576108c3611006565b5b6108d0848285016106f4565b60e0830152506101006108e584828501610979565b6101008301525061012082015167ffffffffffffffff81111561090b5761090a611006565b5b6109178482850161066e565b6101208301525061014061092d848285016106b1565b6101408301525092915050565b6000815190506109498161105e565b92915050565b60008135905061095e81611075565b92915050565b60008151905061097381611075565b92915050565b6000815190506109888161108c565b92915050565b60008151905061099d816110a3565b92915050565b6000815190506109b2816110ba565b92915050565b6000602082840312156109ce576109cd61101a565b5b600082013567ffffffffffffffff8111156109ec576109eb611015565b5b6109f8848285016106c6565b91505092915050565b600080600060608486031215610a1a57610a1961101a565b5b600084015167ffffffffffffffff811115610a3857610a37611015565b5b610a44868287016107f6565b9350506020610a558682870161069c565b925050604084015167ffffffffffffffff811115610a7657610a75611015565b5b610a8286828701610750565b9150509250925092565b600060208284031215610aa257610aa161101a565b5b6000610ab08482850161094f565b91505092915050565b60008060408385031215610ad057610acf61101a565b5b6000610ade8582860161094f565b925050602083013567ffffffffffffffff811115610aff57610afe611015565b5b610b0b85828601610722565b9150509250929050565b60008060408385031215610b2c57610b2b61101a565b5b6000610b3a85828601610964565b925050602083015167ffffffffffffffff811115610b5b57610b5a611015565b5b610b6785828601610750565b9150509250929050565b600060208284031215610b8757610b8661101a565b5b6000610b958482850161098e565b91505092915050565b6000610ba982610de7565b610bb38185610dfd565b9350610bc3818560208601610ed9565b610bcc8161101f565b840191505092915050565b610be081610eb8565b82525050565b6000610bf182610df2565b610bfb8185610e0e565b9350610c0b818560208601610ed9565b610c148161101f565b840191505092915050565b610c2881610e7d565b82525050565b610c3781610e87565b82525050565b610c4681610e97565b82525050565b60006020820190508181036000830152610c668184610b9e565b905092915050565b60006020820190508181036000830152610c888184610be6565b905092915050565b6000602082019050610ca56000830184610c1f565b92915050565b6000604082019050610cc06000830185610c1f565b8181036020830152610cd28184610be6565b90509392505050565b6000606082019050610cf06000830186610c2e565b8181036020830152610d028185610b9e565b9050610d116040830184610bd7565b949350505050565b6000602082019050610d2e6000830184610c3d565b92915050565b6000610d3e610d4f565b9050610d4a8282610f3e565b919050565b6000604051905090565b600067ffffffffffffffff821115610d7457610d73610fcd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610da057610d9f610fcd565b5b610da98261101f565b9050602081019050919050565b600067ffffffffffffffff821115610dd157610dd0610fcd565b5b610dda8261101f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e2a82610e87565b9150610e3583610e87565b92508263ffffffff03821115610e4e57610e4d610f6f565b5b828201905092915050565b60008115159050919050565b6000819050919050565b600061ffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b6000610ec382610eab565b9050919050565b82818337600083830152505050565b60005b83811015610ef7578082015181840152602081019050610edc565b83811115610f06576000848401525b50505050565b60006002820490506001821680610f2457607f821691505b60208210811415610f3857610f37610f9e565b5b50919050565b610f478261101f565b810181811067ffffffffffffffff82111715610f6657610f65610fcd565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61103981610e59565b811461104457600080fd5b50565b61105081610e65565b811461105b57600080fd5b50565b61106781610e6f565b811461107257600080fd5b50565b61107e81610e7d565b811461108957600080fd5b50565b61109581610e87565b81146110a057600080fd5b50565b6110ac81610e97565b81146110b757600080fd5b50565b6110c381610eab565b81146110ce57600080fd5b5056fea26469706673582212205d140d41a7cbe2fa6c63e1d1ac8bee7694f769b5155aec51f8eaf612155e4ea064736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5021,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "core_bridge",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IWormhole)5278"
      },
      {
        "astId": 5024,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "nonce",
        "offset": 20,
        "slot": "0",
        "type": "t_uint32"
      },
      {
        "astId": 5028,
        "contract": "contracts/Messenger.sol:Messenger",
        "label": "all_messages",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_string_storage)"
      }
    ],
    "types": {
      "t_contract(IWormhole)5278": {
        "encoding": "inplace",
        "label": "contract IWormhole",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}